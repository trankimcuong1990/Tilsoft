//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.QualityDocumentMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QualityDocumentMngEntities : DbContext
    {
        public QualityDocumentMngEntities()
            : base("name=QualityDocumentMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SupportMng_QualityDocumentType_View> SupportMng_QualityDocumentType_View { get; set; }
        public virtual DbSet<QualityDocument> QualityDocument { get; set; }
        public virtual DbSet<QualityDocumentMng_QualityDocument_SearchView> QualityDocumentMng_QualityDocument_SearchView { get; set; }
        public virtual DbSet<QualityDocumentMng_QualityDocument_View> QualityDocumentMng_QualityDocument_View { get; set; }
    
        public virtual ObjectResult<QualityDocumentMng_QualityDocument_SearchView> QualityDocumentMng_Function_QualityDocumentSearchView(string qualityDocumentUD, string description, string qualityDocumentTypeNM, string friendlyName, Nullable<System.DateTime> issuedDate, string sortedBy, string sortedDirection)
        {
            var qualityDocumentUDParameter = qualityDocumentUD != null ?
                new ObjectParameter("QualityDocumentUD", qualityDocumentUD) :
                new ObjectParameter("QualityDocumentUD", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var qualityDocumentTypeNMParameter = qualityDocumentTypeNM != null ?
                new ObjectParameter("QualityDocumentTypeNM", qualityDocumentTypeNM) :
                new ObjectParameter("QualityDocumentTypeNM", typeof(string));
    
            var friendlyNameParameter = friendlyName != null ?
                new ObjectParameter("FriendlyName", friendlyName) :
                new ObjectParameter("FriendlyName", typeof(string));
    
            var issuedDateParameter = issuedDate.HasValue ?
                new ObjectParameter("IssuedDate", issuedDate) :
                new ObjectParameter("IssuedDate", typeof(System.DateTime));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QualityDocumentMng_QualityDocument_SearchView>("QualityDocumentMng_Function_QualityDocumentSearchView", qualityDocumentUDParameter, descriptionParameter, qualityDocumentTypeNMParameter, friendlyNameParameter, issuedDateParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<QualityDocumentMng_QualityDocument_SearchView> QualityDocumentMng_Function_QualityDocumentSearchView(string qualityDocumentUD, string description, string qualityDocumentTypeNM, string friendlyName, Nullable<System.DateTime> issuedDate, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var qualityDocumentUDParameter = qualityDocumentUD != null ?
                new ObjectParameter("QualityDocumentUD", qualityDocumentUD) :
                new ObjectParameter("QualityDocumentUD", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var qualityDocumentTypeNMParameter = qualityDocumentTypeNM != null ?
                new ObjectParameter("QualityDocumentTypeNM", qualityDocumentTypeNM) :
                new ObjectParameter("QualityDocumentTypeNM", typeof(string));
    
            var friendlyNameParameter = friendlyName != null ?
                new ObjectParameter("FriendlyName", friendlyName) :
                new ObjectParameter("FriendlyName", typeof(string));
    
            var issuedDateParameter = issuedDate.HasValue ?
                new ObjectParameter("IssuedDate", issuedDate) :
                new ObjectParameter("IssuedDate", typeof(System.DateTime));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QualityDocumentMng_QualityDocument_SearchView>("QualityDocumentMng_Function_QualityDocumentSearchView", mergeOption, qualityDocumentUDParameter, descriptionParameter, qualityDocumentTypeNMParameter, friendlyNameParameter, issuedDateParameter, sortedByParameter, sortedDirectionParameter);
        }
    }
}
