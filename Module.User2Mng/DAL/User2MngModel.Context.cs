//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.User2Mng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class User2MngEntities : DbContext
    {
        public User2MngEntities()
            : base("name=User2MngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<EmployeeFactory> EmployeeFactory { get; set; }
        public virtual DbSet<UserProfile> UserProfile { get; set; }
        public virtual DbSet<User2Mng_Account_View> User2Mng_Account_View { get; set; }
        public virtual DbSet<User2Mng_FactoryAccess_View> User2Mng_FactoryAccess_View { get; set; }
        public virtual DbSet<User2Mng_UserGroupPermission_View> User2Mng_UserGroupPermission_View { get; set; }
        public virtual DbSet<User2Mng_UserPermission_View> User2Mng_UserPermission_View { get; set; }
        public virtual DbSet<User2Mng_UserSearchResult_View> User2Mng_UserSearchResult_View { get; set; }
        public virtual DbSet<User2Mng_NotYetMappedEmployee_View> User2Mng_NotYetMappedEmployee_View { get; set; }
        public virtual DbSet<User2Mng_UserProfile_View> User2Mng_UserProfile_View { get; set; }
        public virtual DbSet<UserPermission> UserPermission { get; set; }
        public virtual DbSet<User2Mng_EmployeeFactory_View> User2Mng_EmployeeFactory_View { get; set; }
        public virtual DbSet<UserFactoryAccess> UserFactoryAccess { get; set; }
    
        public virtual int User2Mng_function_InitAccount(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("User2Mng_function_InitAccount", userIDParameter);
        }
    
        public virtual ObjectResult<User2Mng_UserSearchResult_View> User2Mng_function_SearchUserProfile(string userUD, string employeeNM, string employeeFirstNM, string userName, string telephone, string email, string skypeID, Nullable<int> userGroupID, Nullable<int> officeID, Nullable<bool> isActivated, Nullable<int> companyID, Nullable<int> factoryID, Nullable<int> departmentID, string jobTitle, Nullable<bool> isSuperUser, Nullable<int> jobLevelID, Nullable<int> locationID, string sortedBy, string sortedDirection)
        {
            var userUDParameter = userUD != null ?
                new ObjectParameter("UserUD", userUD) :
                new ObjectParameter("UserUD", typeof(string));
    
            var employeeNMParameter = employeeNM != null ?
                new ObjectParameter("EmployeeNM", employeeNM) :
                new ObjectParameter("EmployeeNM", typeof(string));
    
            var employeeFirstNMParameter = employeeFirstNM != null ?
                new ObjectParameter("EmployeeFirstNM", employeeFirstNM) :
                new ObjectParameter("EmployeeFirstNM", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var skypeIDParameter = skypeID != null ?
                new ObjectParameter("SkypeID", skypeID) :
                new ObjectParameter("SkypeID", typeof(string));
    
            var userGroupIDParameter = userGroupID.HasValue ?
                new ObjectParameter("UserGroupID", userGroupID) :
                new ObjectParameter("UserGroupID", typeof(int));
    
            var officeIDParameter = officeID.HasValue ?
                new ObjectParameter("OfficeID", officeID) :
                new ObjectParameter("OfficeID", typeof(int));
    
            var isActivatedParameter = isActivated.HasValue ?
                new ObjectParameter("IsActivated", isActivated) :
                new ObjectParameter("IsActivated", typeof(bool));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            var isSuperUserParameter = isSuperUser.HasValue ?
                new ObjectParameter("IsSuperUser", isSuperUser) :
                new ObjectParameter("IsSuperUser", typeof(bool));
    
            var jobLevelIDParameter = jobLevelID.HasValue ?
                new ObjectParameter("JobLevelID", jobLevelID) :
                new ObjectParameter("JobLevelID", typeof(int));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User2Mng_UserSearchResult_View>("User2Mng_function_SearchUserProfile", userUDParameter, employeeNMParameter, employeeFirstNMParameter, userNameParameter, telephoneParameter, emailParameter, skypeIDParameter, userGroupIDParameter, officeIDParameter, isActivatedParameter, companyIDParameter, factoryIDParameter, departmentIDParameter, jobTitleParameter, isSuperUserParameter, jobLevelIDParameter, locationIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<User2Mng_UserSearchResult_View> User2Mng_function_SearchUserProfile(string userUD, string employeeNM, string employeeFirstNM, string userName, string telephone, string email, string skypeID, Nullable<int> userGroupID, Nullable<int> officeID, Nullable<bool> isActivated, Nullable<int> companyID, Nullable<int> factoryID, Nullable<int> departmentID, string jobTitle, Nullable<bool> isSuperUser, Nullable<int> jobLevelID, Nullable<int> locationID, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var userUDParameter = userUD != null ?
                new ObjectParameter("UserUD", userUD) :
                new ObjectParameter("UserUD", typeof(string));
    
            var employeeNMParameter = employeeNM != null ?
                new ObjectParameter("EmployeeNM", employeeNM) :
                new ObjectParameter("EmployeeNM", typeof(string));
    
            var employeeFirstNMParameter = employeeFirstNM != null ?
                new ObjectParameter("EmployeeFirstNM", employeeFirstNM) :
                new ObjectParameter("EmployeeFirstNM", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var skypeIDParameter = skypeID != null ?
                new ObjectParameter("SkypeID", skypeID) :
                new ObjectParameter("SkypeID", typeof(string));
    
            var userGroupIDParameter = userGroupID.HasValue ?
                new ObjectParameter("UserGroupID", userGroupID) :
                new ObjectParameter("UserGroupID", typeof(int));
    
            var officeIDParameter = officeID.HasValue ?
                new ObjectParameter("OfficeID", officeID) :
                new ObjectParameter("OfficeID", typeof(int));
    
            var isActivatedParameter = isActivated.HasValue ?
                new ObjectParameter("IsActivated", isActivated) :
                new ObjectParameter("IsActivated", typeof(bool));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            var isSuperUserParameter = isSuperUser.HasValue ?
                new ObjectParameter("IsSuperUser", isSuperUser) :
                new ObjectParameter("IsSuperUser", typeof(bool));
    
            var jobLevelIDParameter = jobLevelID.HasValue ?
                new ObjectParameter("JobLevelID", jobLevelID) :
                new ObjectParameter("JobLevelID", typeof(int));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<User2Mng_UserSearchResult_View>("User2Mng_function_SearchUserProfile", mergeOption, userUDParameter, employeeNMParameter, employeeFirstNMParameter, userNameParameter, telephoneParameter, emailParameter, skypeIDParameter, userGroupIDParameter, officeIDParameter, isActivatedParameter, companyIDParameter, factoryIDParameter, departmentIDParameter, jobTitleParameter, isSuperUserParameter, jobLevelIDParameter, locationIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    }
}
