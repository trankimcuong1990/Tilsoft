//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.PaymentTermMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PaymentTermMngEntities : DbContext
    {
        public PaymentTermMngEntities()
            : base("name=PaymentTermMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PaymentTerm> PaymentTerm { get; set; }
        public virtual DbSet<PaymentTermMng_PaymentTerm_View> PaymentTermMng_PaymentTerm_View { get; set; }
        public virtual DbSet<PaymentTermMng_PaymentTermSearchResult_View> PaymentTermMng_PaymentTermSearchResult_View { get; set; }
        public virtual DbSet<List_PaymentMethod> List_PaymentMethod { get; set; }
        public virtual DbSet<List_PaymentType> List_PaymentType { get; set; }
    
        public virtual ObjectResult<PaymentTermMng_PaymentTermSearchResult_View> PaymentTermMng_function_SearchPaymentTerm(string paymentTermNM, Nullable<int> paymentTypeID, Nullable<bool> isActive, string paymentMethod, string sortedBy, string sortedDirection)
        {
            var paymentTermNMParameter = paymentTermNM != null ?
                new ObjectParameter("PaymentTermNM", paymentTermNM) :
                new ObjectParameter("PaymentTermNM", typeof(string));
    
            var paymentTypeIDParameter = paymentTypeID.HasValue ?
                new ObjectParameter("PaymentTypeID", paymentTypeID) :
                new ObjectParameter("PaymentTypeID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var paymentMethodParameter = paymentMethod != null ?
                new ObjectParameter("PaymentMethod", paymentMethod) :
                new ObjectParameter("PaymentMethod", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentTermMng_PaymentTermSearchResult_View>("PaymentTermMng_function_SearchPaymentTerm", paymentTermNMParameter, paymentTypeIDParameter, isActiveParameter, paymentMethodParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<PaymentTermMng_PaymentTermSearchResult_View> PaymentTermMng_function_SearchPaymentTerm(string paymentTermNM, Nullable<int> paymentTypeID, Nullable<bool> isActive, string paymentMethod, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var paymentTermNMParameter = paymentTermNM != null ?
                new ObjectParameter("PaymentTermNM", paymentTermNM) :
                new ObjectParameter("PaymentTermNM", typeof(string));
    
            var paymentTypeIDParameter = paymentTypeID.HasValue ?
                new ObjectParameter("PaymentTypeID", paymentTypeID) :
                new ObjectParameter("PaymentTypeID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var paymentMethodParameter = paymentMethod != null ?
                new ObjectParameter("PaymentMethod", paymentMethod) :
                new ObjectParameter("PaymentMethod", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentTermMng_PaymentTermSearchResult_View>("PaymentTermMng_function_SearchPaymentTerm", mergeOption, paymentTermNMParameter, paymentTypeIDParameter, isActiveParameter, paymentMethodParameter, sortedByParameter, sortedDirectionParameter);
        }
    }
}
