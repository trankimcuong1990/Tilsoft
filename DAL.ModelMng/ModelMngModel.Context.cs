//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.ModelMng
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ModelMngEntities : DbContext
    {
        public ModelMngEntities()
            : base("name=ModelMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ModelCushionOption> ModelCushionOption { get; set; }
        public virtual DbSet<ModelFile> ModelFile { get; set; }
        public virtual DbSet<ModelPackagingMethodOption> ModelPackagingMethodOption { get; set; }
        public virtual DbSet<ModelPiece> ModelPiece { get; set; }
        public virtual DbSet<ModelSparepart> ModelSparepart { get; set; }
        public virtual DbSet<ModelSubMaterialOption> ModelSubMaterialOption { get; set; }
        public virtual DbSet<ModelMng_ModelCushionOption_View> ModelMng_ModelCushionOption_View { get; set; }
        public virtual DbSet<ModelMng_ModelPackagingMethodOption_View> ModelMng_ModelPackagingMethodOption_View { get; set; }
        public virtual DbSet<ModelMng_ModelSparepart_View> ModelMng_ModelSparepart_View { get; set; }
        public virtual DbSet<ModelMng_ModelSubMaterialOption_View> ModelMng_ModelSubMaterialOption_View { get; set; }
        public virtual DbSet<ModelMng_Product_View> ModelMng_Product_View { get; set; }
        public virtual DbSet<ImageGallery> ImageGallery { get; set; }
        public virtual DbSet<ImageGalleryVersion> ImageGalleryVersion { get; set; }
        public virtual DbSet<ModelMng_ImageGalleryVersion_View> ModelMng_ImageGalleryVersion_View { get; set; }
        public virtual DbSet<ModelMng_ImageGallery_View> ModelMng_ImageGallery_View { get; set; }
        public virtual DbSet<ModelMng_ModelSearchResult_View> ModelMng_ModelSearchResult_View { get; set; }
        public virtual DbSet<TestReport> TestReport { get; set; }
        public virtual DbSet<ModelMng_TestReport_View> ModelMng_TestReport_View { get; set; }
        public virtual DbSet<Model> Model { get; set; }
        public virtual DbSet<ModelIssueTrack> ModelIssueTrack { get; set; }
        public virtual DbSet<ModelIssueTrackImageError> ModelIssueTrackImageError { get; set; }
        public virtual DbSet<ModelIssueTrackImageFinish> ModelIssueTrackImageFinish { get; set; }
        public virtual DbSet<ModelMng_ModelIssueTrack_View> ModelMng_ModelIssueTrack_View { get; set; }
        public virtual DbSet<ModelMng_ModelIssueTrackImageError_View> ModelMng_ModelIssueTrackImageError_View { get; set; }
        public virtual DbSet<ModelMng_ModelIssueTrackImageFinish_View> ModelMng_ModelIssueTrackImageFinish_View { get; set; }
        public virtual DbSet<ModelFixPriceConfiguration> ModelFixPriceConfiguration { get; set; }
        public virtual DbSet<ModelPriceConfiguration> ModelPriceConfiguration { get; set; }
        public virtual DbSet<ModelPriceConfigurationDetail> ModelPriceConfigurationDetail { get; set; }
        public virtual DbSet<ModelMng_ModelFixPriceConfiguration_View> ModelMng_ModelFixPriceConfiguration_View { get; set; }
        public virtual DbSet<ModelMng_ModelPriceConfiguration_View> ModelMng_ModelPriceConfiguration_View { get; set; }
        public virtual DbSet<ModelMng_ModelPriceConfigurationDetail_View> ModelMng_ModelPriceConfigurationDetail_View { get; set; }
        public virtual DbSet<ModelMng_ProductElementOption_View> ModelMng_ProductElementOption_View { get; set; }
        public virtual DbSet<ModelMng_ModelPriceConfigurationDefault_View> ModelMng_ModelPriceConfigurationDefault_View { get; set; }
        public virtual DbSet<ModelMng_ModelPriceConfigurationDefaultDetail_View> ModelMng_ModelPriceConfigurationDefaultDetail_View { get; set; }
        public virtual DbSet<EmailNotificationMessage> EmailNotificationMessage { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<ModelMng_ModelPiece_View> ModelMng_ModelPiece_View { get; set; }
        public virtual DbSet<ModelMng_Model_View> ModelMng_Model_View { get; set; }
        public virtual DbSet<ModelMng_ModelDefaultFactoryDetail_View> ModelMng_ModelDefaultFactoryDetail_View { get; set; }
        public virtual DbSet<TDFile> TDFile { get; set; }
        public virtual DbSet<ModelMng_TDFile_View> ModelMng_TDFile_View { get; set; }
        public virtual DbSet<ModelMng_Product2_view> ModelMng_Product2_view { get; set; }
        public virtual DbSet<ModelMng_SampleProduct_View> ModelMng_SampleProduct_View { get; set; }
        public virtual DbSet<ModelMng_ProductBreakDown_View> ModelMng_ProductBreakDown_View { get; set; }
        public virtual DbSet<ModelMng_Factory_View> ModelMng_Factory_View { get; set; }
        public virtual DbSet<ModelMng_ClientSpecialPackagingMethod_View> ModelMng_ClientSpecialPackagingMethod_View { get; set; }
        public virtual DbSet<AIFile> AIFile { get; set; }
        public virtual DbSet<ModelMng_AIFile_View> ModelMng_AIFile_View { get; set; }
        public virtual DbSet<ModelMng_ModelDefaultFactory_View> ModelMng_ModelDefaultFactory_View { get; set; }
        public virtual DbSet<ModelDefaultFactory> ModelDefaultFactory { get; set; }
        public virtual DbSet<ModelMng_ModelPurchasingFixPriceConfiguration_View> ModelMng_ModelPurchasingFixPriceConfiguration_View { get; set; }
        public virtual DbSet<ModelMng_ModelPurchasingPriceConfiguration_View> ModelMng_ModelPurchasingPriceConfiguration_View { get; set; }
        public virtual DbSet<ModelMng_ModelPurchasingPriceConfigurationDetail_View> ModelMng_ModelPurchasingPriceConfigurationDetail_View { get; set; }
        public virtual DbSet<ModelPurchasingFixPriceConfiguration> ModelPurchasingFixPriceConfiguration { get; set; }
        public virtual DbSet<ModelPurchasingPriceConfiguration> ModelPurchasingPriceConfiguration { get; set; }
        public virtual DbSet<ModelPurchasingPriceConfigurationDetail> ModelPurchasingPriceConfigurationDetail { get; set; }
        public virtual DbSet<ModelDefaultOption> ModelDefaultOption { get; set; }
        public virtual DbSet<ModelDefaultOptionMng_ModelDefaultOption_View> ModelDefaultOptionMng_ModelDefaultOption_View { get; set; }
        public virtual DbSet<ModelPriceStatus> ModelPriceStatus { get; set; }
        public virtual DbSet<ModelPurchasingPriceStatus> ModelPurchasingPriceStatus { get; set; }
        public virtual DbSet<ModelMng_ModelPriceStatus_View> ModelMng_ModelPriceStatus_View { get; set; }
        public virtual DbSet<ModelMng_ModelPurchasingPriceStatus_View> ModelMng_ModelPurchasingPriceStatus_View { get; set; }
        public virtual DbSet<ModelMng_ClientSaleData_View> ModelMng_ClientSaleData_View { get; set; }
        public virtual DbSet<FactoryBreakdownDetail> FactoryBreakdownDetail { get; set; }
        public virtual DbSet<CheckListMng_CheckListGroup_View> CheckListMng_CheckListGroup_View { get; set; }
        public virtual DbSet<ModelCheckListGroup> ModelCheckListGroup { get; set; }
        public virtual DbSet<ModelCheckListGroupMng_ModelCheckListGroup_View> ModelCheckListGroupMng_ModelCheckListGroup_View { get; set; }
        public virtual DbSet<NotificationMessage> NotificationMessage { get; set; }
        public virtual DbSet<ModelMng_ModelNoDefaultFactory_View> ModelMng_ModelNoDefaultFactory_View { get; set; }
    
        public virtual ObjectResult<ModelMng_ModelSearchResult_View> ModelMng_function_SearchModel(string modelUD, string modelNM, string updatorName, Nullable<bool> isStandard, string season, Nullable<int> productTypeID, Nullable<int> productGroupID, Nullable<bool> hasCushion, Nullable<bool> hasFrameMaterial, Nullable<bool> hasSubMaterial, Nullable<int> manufacturerCountryID, Nullable<int> modelStatusID, Nullable<int> productCategoryID, string factoryUD, Nullable<int> catalogPageNo, Nullable<bool> isExcludedInNotification, Nullable<int> userID, Nullable<bool> isArchived, string sortedBy, string sortedDirection)
        {
            var modelUDParameter = modelUD != null ?
                new ObjectParameter("ModelUD", modelUD) :
                new ObjectParameter("ModelUD", typeof(string));
    
            var modelNMParameter = modelNM != null ?
                new ObjectParameter("ModelNM", modelNM) :
                new ObjectParameter("ModelNM", typeof(string));
    
            var updatorNameParameter = updatorName != null ?
                new ObjectParameter("UpdatorName", updatorName) :
                new ObjectParameter("UpdatorName", typeof(string));
    
            var isStandardParameter = isStandard.HasValue ?
                new ObjectParameter("IsStandard", isStandard) :
                new ObjectParameter("IsStandard", typeof(bool));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var hasCushionParameter = hasCushion.HasValue ?
                new ObjectParameter("HasCushion", hasCushion) :
                new ObjectParameter("HasCushion", typeof(bool));
    
            var hasFrameMaterialParameter = hasFrameMaterial.HasValue ?
                new ObjectParameter("HasFrameMaterial", hasFrameMaterial) :
                new ObjectParameter("HasFrameMaterial", typeof(bool));
    
            var hasSubMaterialParameter = hasSubMaterial.HasValue ?
                new ObjectParameter("HasSubMaterial", hasSubMaterial) :
                new ObjectParameter("HasSubMaterial", typeof(bool));
    
            var manufacturerCountryIDParameter = manufacturerCountryID.HasValue ?
                new ObjectParameter("ManufacturerCountryID", manufacturerCountryID) :
                new ObjectParameter("ManufacturerCountryID", typeof(int));
    
            var modelStatusIDParameter = modelStatusID.HasValue ?
                new ObjectParameter("ModelStatusID", modelStatusID) :
                new ObjectParameter("ModelStatusID", typeof(int));
    
            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("ProductCategoryID", productCategoryID) :
                new ObjectParameter("ProductCategoryID", typeof(int));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var catalogPageNoParameter = catalogPageNo.HasValue ?
                new ObjectParameter("CatalogPageNo", catalogPageNo) :
                new ObjectParameter("CatalogPageNo", typeof(int));
    
            var isExcludedInNotificationParameter = isExcludedInNotification.HasValue ?
                new ObjectParameter("IsExcludedInNotification", isExcludedInNotification) :
                new ObjectParameter("IsExcludedInNotification", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var isArchivedParameter = isArchived.HasValue ?
                new ObjectParameter("IsArchived", isArchived) :
                new ObjectParameter("IsArchived", typeof(bool));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ModelMng_ModelSearchResult_View>("ModelMng_function_SearchModel", modelUDParameter, modelNMParameter, updatorNameParameter, isStandardParameter, seasonParameter, productTypeIDParameter, productGroupIDParameter, hasCushionParameter, hasFrameMaterialParameter, hasSubMaterialParameter, manufacturerCountryIDParameter, modelStatusIDParameter, productCategoryIDParameter, factoryUDParameter, catalogPageNoParameter, isExcludedInNotificationParameter, userIDParameter, isArchivedParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ModelMng_ModelSearchResult_View> ModelMng_function_SearchModel(string modelUD, string modelNM, string updatorName, Nullable<bool> isStandard, string season, Nullable<int> productTypeID, Nullable<int> productGroupID, Nullable<bool> hasCushion, Nullable<bool> hasFrameMaterial, Nullable<bool> hasSubMaterial, Nullable<int> manufacturerCountryID, Nullable<int> modelStatusID, Nullable<int> productCategoryID, string factoryUD, Nullable<int> catalogPageNo, Nullable<bool> isExcludedInNotification, Nullable<int> userID, Nullable<bool> isArchived, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var modelUDParameter = modelUD != null ?
                new ObjectParameter("ModelUD", modelUD) :
                new ObjectParameter("ModelUD", typeof(string));
    
            var modelNMParameter = modelNM != null ?
                new ObjectParameter("ModelNM", modelNM) :
                new ObjectParameter("ModelNM", typeof(string));
    
            var updatorNameParameter = updatorName != null ?
                new ObjectParameter("UpdatorName", updatorName) :
                new ObjectParameter("UpdatorName", typeof(string));
    
            var isStandardParameter = isStandard.HasValue ?
                new ObjectParameter("IsStandard", isStandard) :
                new ObjectParameter("IsStandard", typeof(bool));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var hasCushionParameter = hasCushion.HasValue ?
                new ObjectParameter("HasCushion", hasCushion) :
                new ObjectParameter("HasCushion", typeof(bool));
    
            var hasFrameMaterialParameter = hasFrameMaterial.HasValue ?
                new ObjectParameter("HasFrameMaterial", hasFrameMaterial) :
                new ObjectParameter("HasFrameMaterial", typeof(bool));
    
            var hasSubMaterialParameter = hasSubMaterial.HasValue ?
                new ObjectParameter("HasSubMaterial", hasSubMaterial) :
                new ObjectParameter("HasSubMaterial", typeof(bool));
    
            var manufacturerCountryIDParameter = manufacturerCountryID.HasValue ?
                new ObjectParameter("ManufacturerCountryID", manufacturerCountryID) :
                new ObjectParameter("ManufacturerCountryID", typeof(int));
    
            var modelStatusIDParameter = modelStatusID.HasValue ?
                new ObjectParameter("ModelStatusID", modelStatusID) :
                new ObjectParameter("ModelStatusID", typeof(int));
    
            var productCategoryIDParameter = productCategoryID.HasValue ?
                new ObjectParameter("ProductCategoryID", productCategoryID) :
                new ObjectParameter("ProductCategoryID", typeof(int));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var catalogPageNoParameter = catalogPageNo.HasValue ?
                new ObjectParameter("CatalogPageNo", catalogPageNo) :
                new ObjectParameter("CatalogPageNo", typeof(int));
    
            var isExcludedInNotificationParameter = isExcludedInNotification.HasValue ?
                new ObjectParameter("IsExcludedInNotification", isExcludedInNotification) :
                new ObjectParameter("IsExcludedInNotification", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var isArchivedParameter = isArchived.HasValue ?
                new ObjectParameter("IsArchived", isArchived) :
                new ObjectParameter("IsArchived", typeof(bool));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ModelMng_ModelSearchResult_View>("ModelMng_function_SearchModel", mergeOption, modelUDParameter, modelNMParameter, updatorNameParameter, isStandardParameter, seasonParameter, productTypeIDParameter, productGroupIDParameter, hasCushionParameter, hasFrameMaterialParameter, hasSubMaterialParameter, manufacturerCountryIDParameter, modelStatusIDParameter, productCategoryIDParameter, factoryUDParameter, catalogPageNoParameter, isExcludedInNotificationParameter, userIDParameter, isArchivedParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual int ModelMng_function_AddFixPrice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModelMng_function_AddFixPrice");
        }
    
        public virtual ObjectResult<ModelDefaultOptionMng_ModelDefaultOption_View> ModelMng_function_GetDefaultOptionBySeason(Nullable<int> modelID, string season)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ModelDefaultOptionMng_ModelDefaultOption_View>("ModelMng_function_GetDefaultOptionBySeason", modelIDParameter, seasonParameter);
        }
    
        public virtual ObjectResult<ModelDefaultOptionMng_ModelDefaultOption_View> ModelMng_function_GetDefaultOptionBySeason(Nullable<int> modelID, string season, MergeOption mergeOption)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ModelDefaultOptionMng_ModelDefaultOption_View>("ModelMng_function_GetDefaultOptionBySeason", mergeOption, modelIDParameter, seasonParameter);
        }
    
        public virtual int FW_Quotation_function_AddModelDefaultOption(Nullable<int> modelID)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FW_Quotation_function_AddModelDefaultOption", modelIDParameter);
        }
    
        public virtual ObjectResult<ModelMng_ClientSaleData_View> ModelMng_function_GetClientSaleData(string season, Nullable<int> clientID, Nullable<int> modelID, string sortedBy, string sortedDirection)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ModelMng_ClientSaleData_View>("ModelMng_function_GetClientSaleData", seasonParameter, clientIDParameter, modelIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ModelMng_ClientSaleData_View> ModelMng_function_GetClientSaleData(string season, Nullable<int> clientID, Nullable<int> modelID, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ModelMng_ClientSaleData_View>("ModelMng_function_GetClientSaleData", mergeOption, seasonParameter, clientIDParameter, modelIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ModelMng_Model_View> ModelMng_function_Model(Nullable<int> modelID)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ModelMng_Model_View>("ModelMng_function_Model", modelIDParameter);
        }
    
        public virtual ObjectResult<ModelMng_Model_View> ModelMng_function_Model(Nullable<int> modelID, MergeOption mergeOption)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ModelMng_Model_View>("ModelMng_function_Model", mergeOption, modelIDParameter);
        }
    
        public virtual ObjectResult<ModelMng_function_GetFactoryBreakdown_Result> ModelMng_function_GetFactoryBreakdown(Nullable<int> modelID)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ModelMng_function_GetFactoryBreakdown_Result>("ModelMng_function_GetFactoryBreakdown", modelIDParameter);
        }
    
        public virtual ObjectResult<ModelMng_function_GetFactoryBreakdownDetail_Result> ModelMng_function_GetFactoryBreakdownDetail(Nullable<int> modelID)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ModelMng_function_GetFactoryBreakdownDetail_Result>("ModelMng_function_GetFactoryBreakdownDetail", modelIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ModelMng_function_GetPriceCushion(Nullable<int> modelID, string season, Nullable<int> cushionColorID)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var cushionColorIDParameter = cushionColorID.HasValue ?
                new ObjectParameter("CushionColorID", cushionColorID) :
                new ObjectParameter("CushionColorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ModelMng_function_GetPriceCushion", modelIDParameter, seasonParameter, cushionColorIDParameter);
        }
    
        public virtual int ModelMng_function_ApplyDefaultOptionToPiece(Nullable<int> modelDefaultOptionID)
        {
            var modelDefaultOptionIDParameter = modelDefaultOptionID.HasValue ?
                new ObjectParameter("ModelDefaultOptionID", modelDefaultOptionID) :
                new ObjectParameter("ModelDefaultOptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModelMng_function_ApplyDefaultOptionToPiece", modelDefaultOptionIDParameter);
        }
    }
}
