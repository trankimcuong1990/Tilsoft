//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DAL.ReportPlcProducts {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ReportDataObjects")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ReportDataObjects : global::System.Data.DataSet {
        
        private PLCMng_PLC_ImnageReportViewDataTable tablePLCMng_PLC_ImnageReportView;
        
        private PLCMng_PLC_ReportViewDataTable tablePLCMng_PLC_ReportView;
        
        private HeaderDataTable tableHeader;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ReportDataObjects() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ReportDataObjects(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PLCMng_PLC_ImnageReportView"] != null)) {
                    base.Tables.Add(new PLCMng_PLC_ImnageReportViewDataTable(ds.Tables["PLCMng_PLC_ImnageReportView"]));
                }
                if ((ds.Tables["PLCMng_PLC_ReportView"] != null)) {
                    base.Tables.Add(new PLCMng_PLC_ReportViewDataTable(ds.Tables["PLCMng_PLC_ReportView"]));
                }
                if ((ds.Tables["Header"] != null)) {
                    base.Tables.Add(new HeaderDataTable(ds.Tables["Header"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PLCMng_PLC_ImnageReportViewDataTable PLCMng_PLC_ImnageReportView {
            get {
                return this.tablePLCMng_PLC_ImnageReportView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PLCMng_PLC_ReportViewDataTable PLCMng_PLC_ReportView {
            get {
                return this.tablePLCMng_PLC_ReportView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HeaderDataTable Header {
            get {
                return this.tableHeader;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ReportDataObjects cln = ((ReportDataObjects)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PLCMng_PLC_ImnageReportView"] != null)) {
                    base.Tables.Add(new PLCMng_PLC_ImnageReportViewDataTable(ds.Tables["PLCMng_PLC_ImnageReportView"]));
                }
                if ((ds.Tables["PLCMng_PLC_ReportView"] != null)) {
                    base.Tables.Add(new PLCMng_PLC_ReportViewDataTable(ds.Tables["PLCMng_PLC_ReportView"]));
                }
                if ((ds.Tables["Header"] != null)) {
                    base.Tables.Add(new HeaderDataTable(ds.Tables["Header"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablePLCMng_PLC_ImnageReportView = ((PLCMng_PLC_ImnageReportViewDataTable)(base.Tables["PLCMng_PLC_ImnageReportView"]));
            if ((initTable == true)) {
                if ((this.tablePLCMng_PLC_ImnageReportView != null)) {
                    this.tablePLCMng_PLC_ImnageReportView.InitVars();
                }
            }
            this.tablePLCMng_PLC_ReportView = ((PLCMng_PLC_ReportViewDataTable)(base.Tables["PLCMng_PLC_ReportView"]));
            if ((initTable == true)) {
                if ((this.tablePLCMng_PLC_ReportView != null)) {
                    this.tablePLCMng_PLC_ReportView.InitVars();
                }
            }
            this.tableHeader = ((HeaderDataTable)(base.Tables["Header"]));
            if ((initTable == true)) {
                if ((this.tableHeader != null)) {
                    this.tableHeader.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ReportDataObjects";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ReportDataObjects.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePLCMng_PLC_ImnageReportView = new PLCMng_PLC_ImnageReportViewDataTable();
            base.Tables.Add(this.tablePLCMng_PLC_ImnageReportView);
            this.tablePLCMng_PLC_ReportView = new PLCMng_PLC_ReportViewDataTable();
            base.Tables.Add(this.tablePLCMng_PLC_ReportView);
            this.tableHeader = new HeaderDataTable();
            base.Tables.Add(this.tableHeader);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePLCMng_PLC_ImnageReportView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePLCMng_PLC_ReportView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeHeader() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ReportDataObjects ds = new ReportDataObjects();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PLCMng_PLC_ImnageReportViewRowChangeEventHandler(object sender, PLCMng_PLC_ImnageReportViewRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PLCMng_PLC_ReportViewRowChangeEventHandler(object sender, PLCMng_PLC_ReportViewRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void HeaderRowChangeEventHandler(object sender, HeaderRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PLCMng_PLC_ImnageReportViewDataTable : global::System.Data.TypedTableBase<PLCMng_PLC_ImnageReportViewRow> {
            
            private global::System.Data.DataColumn columnPLCImageID;
            
            private global::System.Data.DataColumn columnPLCID;
            
            private global::System.Data.DataColumn columnImageTypeID;
            
            private global::System.Data.DataColumn columnImageFile;
            
            private global::System.Data.DataColumn columnConstantEntryID;
            
            private global::System.Data.DataColumn columnPLCImageTypeID;
            
            private global::System.Data.DataColumn columnPLCImageTypeNM;
            
            private global::System.Data.DataColumn columnDisplayOrder;
            
            private global::System.Data.DataColumn columnFileID;
            
            private global::System.Data.DataColumn columnFileUD;
            
            private global::System.Data.DataColumn columnFriendlyName;
            
            private global::System.Data.DataColumn columnFileLocation;
            
            private global::System.Data.DataColumn columnFileExtension;
            
            private global::System.Data.DataColumn columnThumbnailLocation;
            
            private global::System.Data.DataColumn columnFileSize;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCMng_PLC_ImnageReportViewDataTable() {
                this.TableName = "PLCMng_PLC_ImnageReportView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PLCMng_PLC_ImnageReportViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PLCMng_PLC_ImnageReportViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLCImageIDColumn {
                get {
                    return this.columnPLCImageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLCIDColumn {
                get {
                    return this.columnPLCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageTypeIDColumn {
                get {
                    return this.columnImageTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageFileColumn {
                get {
                    return this.columnImageFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConstantEntryIDColumn {
                get {
                    return this.columnConstantEntryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLCImageTypeIDColumn {
                get {
                    return this.columnPLCImageTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLCImageTypeNMColumn {
                get {
                    return this.columnPLCImageTypeNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DisplayOrderColumn {
                get {
                    return this.columnDisplayOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileIDColumn {
                get {
                    return this.columnFileID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileUDColumn {
                get {
                    return this.columnFileUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FriendlyNameColumn {
                get {
                    return this.columnFriendlyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileLocationColumn {
                get {
                    return this.columnFileLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileExtensionColumn {
                get {
                    return this.columnFileExtension;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThumbnailLocationColumn {
                get {
                    return this.columnThumbnailLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileSizeColumn {
                get {
                    return this.columnFileSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCMng_PLC_ImnageReportViewRow this[int index] {
                get {
                    return ((PLCMng_PLC_ImnageReportViewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCMng_PLC_ImnageReportViewRowChangeEventHandler PLCMng_PLC_ImnageReportViewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCMng_PLC_ImnageReportViewRowChangeEventHandler PLCMng_PLC_ImnageReportViewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCMng_PLC_ImnageReportViewRowChangeEventHandler PLCMng_PLC_ImnageReportViewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCMng_PLC_ImnageReportViewRowChangeEventHandler PLCMng_PLC_ImnageReportViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPLCMng_PLC_ImnageReportViewRow(PLCMng_PLC_ImnageReportViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCMng_PLC_ImnageReportViewRow AddPLCMng_PLC_ImnageReportViewRow(int PLCImageID, int PLCID, int ImageTypeID, string ImageFile, int ConstantEntryID, int PLCImageTypeID, string PLCImageTypeNM, int DisplayOrder, int FileID, string FileUD, string FriendlyName, string FileLocation, string FileExtension, string ThumbnailLocation, int FileSize) {
                PLCMng_PLC_ImnageReportViewRow rowPLCMng_PLC_ImnageReportViewRow = ((PLCMng_PLC_ImnageReportViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PLCImageID,
                        PLCID,
                        ImageTypeID,
                        ImageFile,
                        ConstantEntryID,
                        PLCImageTypeID,
                        PLCImageTypeNM,
                        DisplayOrder,
                        FileID,
                        FileUD,
                        FriendlyName,
                        FileLocation,
                        FileExtension,
                        ThumbnailLocation,
                        FileSize};
                rowPLCMng_PLC_ImnageReportViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPLCMng_PLC_ImnageReportViewRow);
                return rowPLCMng_PLC_ImnageReportViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PLCMng_PLC_ImnageReportViewDataTable cln = ((PLCMng_PLC_ImnageReportViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PLCMng_PLC_ImnageReportViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPLCImageID = base.Columns["PLCImageID"];
                this.columnPLCID = base.Columns["PLCID"];
                this.columnImageTypeID = base.Columns["ImageTypeID"];
                this.columnImageFile = base.Columns["ImageFile"];
                this.columnConstantEntryID = base.Columns["ConstantEntryID"];
                this.columnPLCImageTypeID = base.Columns["PLCImageTypeID"];
                this.columnPLCImageTypeNM = base.Columns["PLCImageTypeNM"];
                this.columnDisplayOrder = base.Columns["DisplayOrder"];
                this.columnFileID = base.Columns["FileID"];
                this.columnFileUD = base.Columns["FileUD"];
                this.columnFriendlyName = base.Columns["FriendlyName"];
                this.columnFileLocation = base.Columns["FileLocation"];
                this.columnFileExtension = base.Columns["FileExtension"];
                this.columnThumbnailLocation = base.Columns["ThumbnailLocation"];
                this.columnFileSize = base.Columns["FileSize"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPLCImageID = new global::System.Data.DataColumn("PLCImageID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLCImageID);
                this.columnPLCID = new global::System.Data.DataColumn("PLCID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLCID);
                this.columnImageTypeID = new global::System.Data.DataColumn("ImageTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageTypeID);
                this.columnImageFile = new global::System.Data.DataColumn("ImageFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageFile);
                this.columnConstantEntryID = new global::System.Data.DataColumn("ConstantEntryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstantEntryID);
                this.columnPLCImageTypeID = new global::System.Data.DataColumn("PLCImageTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLCImageTypeID);
                this.columnPLCImageTypeNM = new global::System.Data.DataColumn("PLCImageTypeNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLCImageTypeNM);
                this.columnDisplayOrder = new global::System.Data.DataColumn("DisplayOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayOrder);
                this.columnFileID = new global::System.Data.DataColumn("FileID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileID);
                this.columnFileUD = new global::System.Data.DataColumn("FileUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileUD);
                this.columnFriendlyName = new global::System.Data.DataColumn("FriendlyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFriendlyName);
                this.columnFileLocation = new global::System.Data.DataColumn("FileLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileLocation);
                this.columnFileExtension = new global::System.Data.DataColumn("FileExtension", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileExtension);
                this.columnThumbnailLocation = new global::System.Data.DataColumn("ThumbnailLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbnailLocation);
                this.columnFileSize = new global::System.Data.DataColumn("FileSize", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileSize);
                this.columnPLCImageID.AllowDBNull = false;
                this.columnImageFile.MaxLength = 50;
                this.columnPLCImageTypeNM.MaxLength = 255;
                this.columnFileUD.MaxLength = 32;
                this.columnFriendlyName.MaxLength = 255;
                this.columnFileLocation.MaxLength = 255;
                this.columnFileExtension.MaxLength = 4;
                this.columnThumbnailLocation.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCMng_PLC_ImnageReportViewRow NewPLCMng_PLC_ImnageReportViewRow() {
                return ((PLCMng_PLC_ImnageReportViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PLCMng_PLC_ImnageReportViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PLCMng_PLC_ImnageReportViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PLCMng_PLC_ImnageReportViewRowChanged != null)) {
                    this.PLCMng_PLC_ImnageReportViewRowChanged(this, new PLCMng_PLC_ImnageReportViewRowChangeEvent(((PLCMng_PLC_ImnageReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PLCMng_PLC_ImnageReportViewRowChanging != null)) {
                    this.PLCMng_PLC_ImnageReportViewRowChanging(this, new PLCMng_PLC_ImnageReportViewRowChangeEvent(((PLCMng_PLC_ImnageReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PLCMng_PLC_ImnageReportViewRowDeleted != null)) {
                    this.PLCMng_PLC_ImnageReportViewRowDeleted(this, new PLCMng_PLC_ImnageReportViewRowChangeEvent(((PLCMng_PLC_ImnageReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PLCMng_PLC_ImnageReportViewRowDeleting != null)) {
                    this.PLCMng_PLC_ImnageReportViewRowDeleting(this, new PLCMng_PLC_ImnageReportViewRowChangeEvent(((PLCMng_PLC_ImnageReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePLCMng_PLC_ImnageReportViewRow(PLCMng_PLC_ImnageReportViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDataObjects ds = new ReportDataObjects();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PLCMng_PLC_ImnageReportViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PLCMng_PLC_ReportViewDataTable : global::System.Data.TypedTableBase<PLCMng_PLC_ReportViewRow> {
            
            private global::System.Data.DataColumn columnPLCID;
            
            private global::System.Data.DataColumn columnFactoryUD;
            
            private global::System.Data.DataColumn columnClientArticleCode;
            
            private global::System.Data.DataColumn columnClientArticleName;
            
            private global::System.Data.DataColumn columnClientEANCode;
            
            private global::System.Data.DataColumn columnClientOrderNumber;
            
            private global::System.Data.DataColumn columnCachedProformaInvoiceNo;
            
            private global::System.Data.DataColumn columnCachedClientUD;
            
            private global::System.Data.DataColumn columnArticleCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnMaterialNM;
            
            private global::System.Data.DataColumn columnMaterialWeight;
            
            private global::System.Data.DataColumn columnMaterialColorNM;
            
            private global::System.Data.DataColumn columnTypeLegs;
            
            private global::System.Data.DataColumn columnNetWeight;
            
            private global::System.Data.DataColumn columnOverallDimL;
            
            private global::System.Data.DataColumn columnOverallDimW;
            
            private global::System.Data.DataColumn columnOverallDimH;
            
            private global::System.Data.DataColumn columnSeatDimL;
            
            private global::System.Data.DataColumn columnSeatDimW;
            
            private global::System.Data.DataColumn columnSeatDimH;
            
            private global::System.Data.DataColumn columnArmDimL;
            
            private global::System.Data.DataColumn columnArmDimW;
            
            private global::System.Data.DataColumn columnArmDimH;
            
            private global::System.Data.DataColumn columnOtherDimL;
            
            private global::System.Data.DataColumn columnOtherDimW;
            
            private global::System.Data.DataColumn columnOtherDimH;
            
            private global::System.Data.DataColumn columnFrameMaterialNM;
            
            private global::System.Data.DataColumn columnFrameMaterialColorNM;
            
            private global::System.Data.DataColumn columnCushionColorNM;
            
            private global::System.Data.DataColumn columnFabricWeight;
            
            private global::System.Data.DataColumn columnCushionBatchCode;
            
            private global::System.Data.DataColumn columnSeatCushionStuffing;
            
            private global::System.Data.DataColumn columnSeatCushionWeight;
            
            private global::System.Data.DataColumn columnSeatCushionParts;
            
            private global::System.Data.DataColumn columnSeatCushionFinishing;
            
            private global::System.Data.DataColumn columnCushionNM;
            
            private global::System.Data.DataColumn columnBackCushionStuffing;
            
            private global::System.Data.DataColumn columnBackCushionWeight;
            
            private global::System.Data.DataColumn columnBackCushionParts;
            
            private global::System.Data.DataColumn columnBackCushionFinishing;
            
            private global::System.Data.DataColumn columnSeatCushionDimL;
            
            private global::System.Data.DataColumn columnSeatCushionDimW;
            
            private global::System.Data.DataColumn columnSeatCushionDimH;
            
            private global::System.Data.DataColumn columnBackCushionDimL;
            
            private global::System.Data.DataColumn columnBackCushionDimW;
            
            private global::System.Data.DataColumn columnBackCushionDimH;
            
            private global::System.Data.DataColumn columnCartonBoxDimL;
            
            private global::System.Data.DataColumn columnCartonBoxDimW;
            
            private global::System.Data.DataColumn columnCartonBoxDimH;
            
            private global::System.Data.DataColumn columnQntInBox;
            
            private global::System.Data.DataColumn columnCartonThickness;
            
            private global::System.Data.DataColumn columnGrossWeight;
            
            private global::System.Data.DataColumn columnRating;
            
            private global::System.Data.DataColumn columnRatorName;
            
            private global::System.Data.DataColumn columnConfirmerName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCMng_PLC_ReportViewDataTable() {
                this.TableName = "PLCMng_PLC_ReportView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PLCMng_PLC_ReportViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PLCMng_PLC_ReportViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLCIDColumn {
                get {
                    return this.columnPLCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactoryUDColumn {
                get {
                    return this.columnFactoryUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientArticleCodeColumn {
                get {
                    return this.columnClientArticleCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientArticleNameColumn {
                get {
                    return this.columnClientArticleName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientEANCodeColumn {
                get {
                    return this.columnClientEANCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientOrderNumberColumn {
                get {
                    return this.columnClientOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CachedProformaInvoiceNoColumn {
                get {
                    return this.columnCachedProformaInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CachedClientUDColumn {
                get {
                    return this.columnCachedClientUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArticleCodeColumn {
                get {
                    return this.columnArticleCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialNMColumn {
                get {
                    return this.columnMaterialNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialWeightColumn {
                get {
                    return this.columnMaterialWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialColorNMColumn {
                get {
                    return this.columnMaterialColorNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeLegsColumn {
                get {
                    return this.columnTypeLegs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetWeightColumn {
                get {
                    return this.columnNetWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverallDimLColumn {
                get {
                    return this.columnOverallDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverallDimWColumn {
                get {
                    return this.columnOverallDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverallDimHColumn {
                get {
                    return this.columnOverallDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatDimLColumn {
                get {
                    return this.columnSeatDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatDimWColumn {
                get {
                    return this.columnSeatDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatDimHColumn {
                get {
                    return this.columnSeatDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArmDimLColumn {
                get {
                    return this.columnArmDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArmDimWColumn {
                get {
                    return this.columnArmDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArmDimHColumn {
                get {
                    return this.columnArmDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherDimLColumn {
                get {
                    return this.columnOtherDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherDimWColumn {
                get {
                    return this.columnOtherDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherDimHColumn {
                get {
                    return this.columnOtherDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrameMaterialNMColumn {
                get {
                    return this.columnFrameMaterialNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrameMaterialColorNMColumn {
                get {
                    return this.columnFrameMaterialColorNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CushionColorNMColumn {
                get {
                    return this.columnCushionColorNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FabricWeightColumn {
                get {
                    return this.columnFabricWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CushionBatchCodeColumn {
                get {
                    return this.columnCushionBatchCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionStuffingColumn {
                get {
                    return this.columnSeatCushionStuffing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionWeightColumn {
                get {
                    return this.columnSeatCushionWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionPartsColumn {
                get {
                    return this.columnSeatCushionParts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionFinishingColumn {
                get {
                    return this.columnSeatCushionFinishing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CushionNMColumn {
                get {
                    return this.columnCushionNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionStuffingColumn {
                get {
                    return this.columnBackCushionStuffing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionWeightColumn {
                get {
                    return this.columnBackCushionWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionPartsColumn {
                get {
                    return this.columnBackCushionParts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionFinishingColumn {
                get {
                    return this.columnBackCushionFinishing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionDimLColumn {
                get {
                    return this.columnSeatCushionDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionDimWColumn {
                get {
                    return this.columnSeatCushionDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionDimHColumn {
                get {
                    return this.columnSeatCushionDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionDimLColumn {
                get {
                    return this.columnBackCushionDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionDimWColumn {
                get {
                    return this.columnBackCushionDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionDimHColumn {
                get {
                    return this.columnBackCushionDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CartonBoxDimLColumn {
                get {
                    return this.columnCartonBoxDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CartonBoxDimWColumn {
                get {
                    return this.columnCartonBoxDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CartonBoxDimHColumn {
                get {
                    return this.columnCartonBoxDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QntInBoxColumn {
                get {
                    return this.columnQntInBox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CartonThicknessColumn {
                get {
                    return this.columnCartonThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrossWeightColumn {
                get {
                    return this.columnGrossWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RatingColumn {
                get {
                    return this.columnRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RatorNameColumn {
                get {
                    return this.columnRatorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConfirmerNameColumn {
                get {
                    return this.columnConfirmerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCMng_PLC_ReportViewRow this[int index] {
                get {
                    return ((PLCMng_PLC_ReportViewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCMng_PLC_ReportViewRowChangeEventHandler PLCMng_PLC_ReportViewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCMng_PLC_ReportViewRowChangeEventHandler PLCMng_PLC_ReportViewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCMng_PLC_ReportViewRowChangeEventHandler PLCMng_PLC_ReportViewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCMng_PLC_ReportViewRowChangeEventHandler PLCMng_PLC_ReportViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPLCMng_PLC_ReportViewRow(PLCMng_PLC_ReportViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCMng_PLC_ReportViewRow AddPLCMng_PLC_ReportViewRow(
                        int PLCID, 
                        string FactoryUD, 
                        string ClientArticleCode, 
                        string ClientArticleName, 
                        string ClientEANCode, 
                        string ClientOrderNumber, 
                        string CachedProformaInvoiceNo, 
                        string CachedClientUD, 
                        string ArticleCode, 
                        string Description, 
                        string MaterialNM, 
                        string MaterialWeight, 
                        string MaterialColorNM, 
                        string TypeLegs, 
                        string NetWeight, 
                        string OverallDimL, 
                        string OverallDimW, 
                        string OverallDimH, 
                        string SeatDimL, 
                        string SeatDimW, 
                        string SeatDimH, 
                        string ArmDimL, 
                        string ArmDimW, 
                        string ArmDimH, 
                        string OtherDimL, 
                        string OtherDimW, 
                        string OtherDimH, 
                        string FrameMaterialNM, 
                        string FrameMaterialColorNM, 
                        string CushionColorNM, 
                        string FabricWeight, 
                        string CushionBatchCode, 
                        string SeatCushionStuffing, 
                        string SeatCushionWeight, 
                        string SeatCushionParts, 
                        string SeatCushionFinishing, 
                        string CushionNM, 
                        string BackCushionStuffing, 
                        string BackCushionWeight, 
                        string BackCushionParts, 
                        string BackCushionFinishing, 
                        string SeatCushionDimL, 
                        string SeatCushionDimW, 
                        string SeatCushionDimH, 
                        string BackCushionDimL, 
                        string BackCushionDimW, 
                        string BackCushionDimH, 
                        string CartonBoxDimL, 
                        string CartonBoxDimW, 
                        string CartonBoxDimH, 
                        string QntInBox, 
                        string CartonThickness, 
                        string GrossWeight, 
                        string Rating, 
                        string RatorName, 
                        string ConfirmerName) {
                PLCMng_PLC_ReportViewRow rowPLCMng_PLC_ReportViewRow = ((PLCMng_PLC_ReportViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PLCID,
                        FactoryUD,
                        ClientArticleCode,
                        ClientArticleName,
                        ClientEANCode,
                        ClientOrderNumber,
                        CachedProformaInvoiceNo,
                        CachedClientUD,
                        ArticleCode,
                        Description,
                        MaterialNM,
                        MaterialWeight,
                        MaterialColorNM,
                        TypeLegs,
                        NetWeight,
                        OverallDimL,
                        OverallDimW,
                        OverallDimH,
                        SeatDimL,
                        SeatDimW,
                        SeatDimH,
                        ArmDimL,
                        ArmDimW,
                        ArmDimH,
                        OtherDimL,
                        OtherDimW,
                        OtherDimH,
                        FrameMaterialNM,
                        FrameMaterialColorNM,
                        CushionColorNM,
                        FabricWeight,
                        CushionBatchCode,
                        SeatCushionStuffing,
                        SeatCushionWeight,
                        SeatCushionParts,
                        SeatCushionFinishing,
                        CushionNM,
                        BackCushionStuffing,
                        BackCushionWeight,
                        BackCushionParts,
                        BackCushionFinishing,
                        SeatCushionDimL,
                        SeatCushionDimW,
                        SeatCushionDimH,
                        BackCushionDimL,
                        BackCushionDimW,
                        BackCushionDimH,
                        CartonBoxDimL,
                        CartonBoxDimW,
                        CartonBoxDimH,
                        QntInBox,
                        CartonThickness,
                        GrossWeight,
                        Rating,
                        RatorName,
                        ConfirmerName};
                rowPLCMng_PLC_ReportViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPLCMng_PLC_ReportViewRow);
                return rowPLCMng_PLC_ReportViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCMng_PLC_ReportViewRow FindByPLCID(int PLCID) {
                return ((PLCMng_PLC_ReportViewRow)(this.Rows.Find(new object[] {
                            PLCID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PLCMng_PLC_ReportViewDataTable cln = ((PLCMng_PLC_ReportViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PLCMng_PLC_ReportViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPLCID = base.Columns["PLCID"];
                this.columnFactoryUD = base.Columns["FactoryUD"];
                this.columnClientArticleCode = base.Columns["ClientArticleCode"];
                this.columnClientArticleName = base.Columns["ClientArticleName"];
                this.columnClientEANCode = base.Columns["ClientEANCode"];
                this.columnClientOrderNumber = base.Columns["ClientOrderNumber"];
                this.columnCachedProformaInvoiceNo = base.Columns["CachedProformaInvoiceNo"];
                this.columnCachedClientUD = base.Columns["CachedClientUD"];
                this.columnArticleCode = base.Columns["ArticleCode"];
                this.columnDescription = base.Columns["Description"];
                this.columnMaterialNM = base.Columns["MaterialNM"];
                this.columnMaterialWeight = base.Columns["MaterialWeight"];
                this.columnMaterialColorNM = base.Columns["MaterialColorNM"];
                this.columnTypeLegs = base.Columns["TypeLegs"];
                this.columnNetWeight = base.Columns["NetWeight"];
                this.columnOverallDimL = base.Columns["OverallDimL"];
                this.columnOverallDimW = base.Columns["OverallDimW"];
                this.columnOverallDimH = base.Columns["OverallDimH"];
                this.columnSeatDimL = base.Columns["SeatDimL"];
                this.columnSeatDimW = base.Columns["SeatDimW"];
                this.columnSeatDimH = base.Columns["SeatDimH"];
                this.columnArmDimL = base.Columns["ArmDimL"];
                this.columnArmDimW = base.Columns["ArmDimW"];
                this.columnArmDimH = base.Columns["ArmDimH"];
                this.columnOtherDimL = base.Columns["OtherDimL"];
                this.columnOtherDimW = base.Columns["OtherDimW"];
                this.columnOtherDimH = base.Columns["OtherDimH"];
                this.columnFrameMaterialNM = base.Columns["FrameMaterialNM"];
                this.columnFrameMaterialColorNM = base.Columns["FrameMaterialColorNM"];
                this.columnCushionColorNM = base.Columns["CushionColorNM"];
                this.columnFabricWeight = base.Columns["FabricWeight"];
                this.columnCushionBatchCode = base.Columns["CushionBatchCode"];
                this.columnSeatCushionStuffing = base.Columns["SeatCushionStuffing"];
                this.columnSeatCushionWeight = base.Columns["SeatCushionWeight"];
                this.columnSeatCushionParts = base.Columns["SeatCushionParts"];
                this.columnSeatCushionFinishing = base.Columns["SeatCushionFinishing"];
                this.columnCushionNM = base.Columns["CushionNM"];
                this.columnBackCushionStuffing = base.Columns["BackCushionStuffing"];
                this.columnBackCushionWeight = base.Columns["BackCushionWeight"];
                this.columnBackCushionParts = base.Columns["BackCushionParts"];
                this.columnBackCushionFinishing = base.Columns["BackCushionFinishing"];
                this.columnSeatCushionDimL = base.Columns["SeatCushionDimL"];
                this.columnSeatCushionDimW = base.Columns["SeatCushionDimW"];
                this.columnSeatCushionDimH = base.Columns["SeatCushionDimH"];
                this.columnBackCushionDimL = base.Columns["BackCushionDimL"];
                this.columnBackCushionDimW = base.Columns["BackCushionDimW"];
                this.columnBackCushionDimH = base.Columns["BackCushionDimH"];
                this.columnCartonBoxDimL = base.Columns["CartonBoxDimL"];
                this.columnCartonBoxDimW = base.Columns["CartonBoxDimW"];
                this.columnCartonBoxDimH = base.Columns["CartonBoxDimH"];
                this.columnQntInBox = base.Columns["QntInBox"];
                this.columnCartonThickness = base.Columns["CartonThickness"];
                this.columnGrossWeight = base.Columns["GrossWeight"];
                this.columnRating = base.Columns["Rating"];
                this.columnRatorName = base.Columns["RatorName"];
                this.columnConfirmerName = base.Columns["ConfirmerName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPLCID = new global::System.Data.DataColumn("PLCID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLCID);
                this.columnFactoryUD = new global::System.Data.DataColumn("FactoryUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactoryUD);
                this.columnClientArticleCode = new global::System.Data.DataColumn("ClientArticleCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientArticleCode);
                this.columnClientArticleName = new global::System.Data.DataColumn("ClientArticleName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientArticleName);
                this.columnClientEANCode = new global::System.Data.DataColumn("ClientEANCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientEANCode);
                this.columnClientOrderNumber = new global::System.Data.DataColumn("ClientOrderNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientOrderNumber);
                this.columnCachedProformaInvoiceNo = new global::System.Data.DataColumn("CachedProformaInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCachedProformaInvoiceNo);
                this.columnCachedClientUD = new global::System.Data.DataColumn("CachedClientUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCachedClientUD);
                this.columnArticleCode = new global::System.Data.DataColumn("ArticleCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArticleCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnMaterialNM = new global::System.Data.DataColumn("MaterialNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialNM);
                this.columnMaterialWeight = new global::System.Data.DataColumn("MaterialWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialWeight);
                this.columnMaterialColorNM = new global::System.Data.DataColumn("MaterialColorNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialColorNM);
                this.columnTypeLegs = new global::System.Data.DataColumn("TypeLegs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeLegs);
                this.columnNetWeight = new global::System.Data.DataColumn("NetWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetWeight);
                this.columnOverallDimL = new global::System.Data.DataColumn("OverallDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverallDimL);
                this.columnOverallDimW = new global::System.Data.DataColumn("OverallDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverallDimW);
                this.columnOverallDimH = new global::System.Data.DataColumn("OverallDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverallDimH);
                this.columnSeatDimL = new global::System.Data.DataColumn("SeatDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatDimL);
                this.columnSeatDimW = new global::System.Data.DataColumn("SeatDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatDimW);
                this.columnSeatDimH = new global::System.Data.DataColumn("SeatDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatDimH);
                this.columnArmDimL = new global::System.Data.DataColumn("ArmDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArmDimL);
                this.columnArmDimW = new global::System.Data.DataColumn("ArmDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArmDimW);
                this.columnArmDimH = new global::System.Data.DataColumn("ArmDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArmDimH);
                this.columnOtherDimL = new global::System.Data.DataColumn("OtherDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDimL);
                this.columnOtherDimW = new global::System.Data.DataColumn("OtherDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDimW);
                this.columnOtherDimH = new global::System.Data.DataColumn("OtherDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDimH);
                this.columnFrameMaterialNM = new global::System.Data.DataColumn("FrameMaterialNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrameMaterialNM);
                this.columnFrameMaterialColorNM = new global::System.Data.DataColumn("FrameMaterialColorNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrameMaterialColorNM);
                this.columnCushionColorNM = new global::System.Data.DataColumn("CushionColorNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCushionColorNM);
                this.columnFabricWeight = new global::System.Data.DataColumn("FabricWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFabricWeight);
                this.columnCushionBatchCode = new global::System.Data.DataColumn("CushionBatchCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCushionBatchCode);
                this.columnSeatCushionStuffing = new global::System.Data.DataColumn("SeatCushionStuffing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionStuffing);
                this.columnSeatCushionWeight = new global::System.Data.DataColumn("SeatCushionWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionWeight);
                this.columnSeatCushionParts = new global::System.Data.DataColumn("SeatCushionParts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionParts);
                this.columnSeatCushionFinishing = new global::System.Data.DataColumn("SeatCushionFinishing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionFinishing);
                this.columnCushionNM = new global::System.Data.DataColumn("CushionNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCushionNM);
                this.columnBackCushionStuffing = new global::System.Data.DataColumn("BackCushionStuffing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionStuffing);
                this.columnBackCushionWeight = new global::System.Data.DataColumn("BackCushionWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionWeight);
                this.columnBackCushionParts = new global::System.Data.DataColumn("BackCushionParts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionParts);
                this.columnBackCushionFinishing = new global::System.Data.DataColumn("BackCushionFinishing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionFinishing);
                this.columnSeatCushionDimL = new global::System.Data.DataColumn("SeatCushionDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionDimL);
                this.columnSeatCushionDimW = new global::System.Data.DataColumn("SeatCushionDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionDimW);
                this.columnSeatCushionDimH = new global::System.Data.DataColumn("SeatCushionDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionDimH);
                this.columnBackCushionDimL = new global::System.Data.DataColumn("BackCushionDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionDimL);
                this.columnBackCushionDimW = new global::System.Data.DataColumn("BackCushionDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionDimW);
                this.columnBackCushionDimH = new global::System.Data.DataColumn("BackCushionDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionDimH);
                this.columnCartonBoxDimL = new global::System.Data.DataColumn("CartonBoxDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonBoxDimL);
                this.columnCartonBoxDimW = new global::System.Data.DataColumn("CartonBoxDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonBoxDimW);
                this.columnCartonBoxDimH = new global::System.Data.DataColumn("CartonBoxDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonBoxDimH);
                this.columnQntInBox = new global::System.Data.DataColumn("QntInBox", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQntInBox);
                this.columnCartonThickness = new global::System.Data.DataColumn("CartonThickness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonThickness);
                this.columnGrossWeight = new global::System.Data.DataColumn("GrossWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossWeight);
                this.columnRating = new global::System.Data.DataColumn("Rating", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRating);
                this.columnRatorName = new global::System.Data.DataColumn("RatorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRatorName);
                this.columnConfirmerName = new global::System.Data.DataColumn("ConfirmerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmerName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPLCID}, true));
                this.columnPLCID.AllowDBNull = false;
                this.columnPLCID.Unique = true;
                this.columnFactoryUD.MaxLength = 10;
                this.columnClientArticleCode.ReadOnly = true;
                this.columnClientArticleCode.MaxLength = 255;
                this.columnClientArticleName.ReadOnly = true;
                this.columnClientArticleName.MaxLength = 255;
                this.columnClientEANCode.ReadOnly = true;
                this.columnClientEANCode.MaxLength = 255;
                this.columnClientOrderNumber.ReadOnly = true;
                this.columnClientOrderNumber.MaxLength = 255;
                this.columnCachedProformaInvoiceNo.MaxLength = 255;
                this.columnCachedClientUD.MaxLength = 255;
                this.columnArticleCode.MaxLength = 26;
                this.columnDescription.MaxLength = 500;
                this.columnMaterialNM.MaxLength = 255;
                this.columnMaterialWeight.MaxLength = 50;
                this.columnMaterialColorNM.MaxLength = 255;
                this.columnTypeLegs.ReadOnly = true;
                this.columnTypeLegs.MaxLength = 255;
                this.columnNetWeight.MaxLength = 50;
                this.columnOverallDimL.MaxLength = 50;
                this.columnOverallDimW.MaxLength = 50;
                this.columnOverallDimH.MaxLength = 50;
                this.columnSeatDimL.MaxLength = 50;
                this.columnSeatDimW.MaxLength = 50;
                this.columnSeatDimH.MaxLength = 50;
                this.columnArmDimL.MaxLength = 50;
                this.columnArmDimW.MaxLength = 50;
                this.columnArmDimH.MaxLength = 50;
                this.columnOtherDimL.MaxLength = 50;
                this.columnOtherDimW.MaxLength = 50;
                this.columnOtherDimH.MaxLength = 50;
                this.columnFrameMaterialNM.MaxLength = 255;
                this.columnFrameMaterialColorNM.MaxLength = 255;
                this.columnCushionColorNM.MaxLength = 255;
                this.columnFabricWeight.MaxLength = 50;
                this.columnCushionBatchCode.ReadOnly = true;
                this.columnCushionBatchCode.MaxLength = 255;
                this.columnSeatCushionStuffing.MaxLength = 50;
                this.columnSeatCushionWeight.ReadOnly = true;
                this.columnSeatCushionWeight.MaxLength = 255;
                this.columnSeatCushionParts.MaxLength = 50;
                this.columnSeatCushionFinishing.ReadOnly = true;
                this.columnSeatCushionFinishing.MaxLength = 255;
                this.columnCushionNM.MaxLength = 255;
                this.columnBackCushionStuffing.MaxLength = 50;
                this.columnBackCushionWeight.ReadOnly = true;
                this.columnBackCushionWeight.MaxLength = 255;
                this.columnBackCushionParts.MaxLength = 50;
                this.columnBackCushionFinishing.ReadOnly = true;
                this.columnBackCushionFinishing.MaxLength = 255;
                this.columnSeatCushionDimL.MaxLength = 50;
                this.columnSeatCushionDimW.MaxLength = 50;
                this.columnSeatCushionDimH.MaxLength = 50;
                this.columnBackCushionDimL.MaxLength = 50;
                this.columnBackCushionDimW.MaxLength = 50;
                this.columnBackCushionDimH.MaxLength = 50;
                this.columnCartonBoxDimL.MaxLength = 50;
                this.columnCartonBoxDimW.MaxLength = 50;
                this.columnCartonBoxDimH.MaxLength = 50;
                this.columnQntInBox.MaxLength = 50;
                this.columnCartonThickness.ReadOnly = true;
                this.columnCartonThickness.MaxLength = 255;
                this.columnGrossWeight.ReadOnly = true;
                this.columnGrossWeight.MaxLength = 255;
                this.columnRating.MaxLength = 1;
                this.columnRatorName.MaxLength = 50;
                this.columnConfirmerName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCMng_PLC_ReportViewRow NewPLCMng_PLC_ReportViewRow() {
                return ((PLCMng_PLC_ReportViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PLCMng_PLC_ReportViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PLCMng_PLC_ReportViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PLCMng_PLC_ReportViewRowChanged != null)) {
                    this.PLCMng_PLC_ReportViewRowChanged(this, new PLCMng_PLC_ReportViewRowChangeEvent(((PLCMng_PLC_ReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PLCMng_PLC_ReportViewRowChanging != null)) {
                    this.PLCMng_PLC_ReportViewRowChanging(this, new PLCMng_PLC_ReportViewRowChangeEvent(((PLCMng_PLC_ReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PLCMng_PLC_ReportViewRowDeleted != null)) {
                    this.PLCMng_PLC_ReportViewRowDeleted(this, new PLCMng_PLC_ReportViewRowChangeEvent(((PLCMng_PLC_ReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PLCMng_PLC_ReportViewRowDeleting != null)) {
                    this.PLCMng_PLC_ReportViewRowDeleting(this, new PLCMng_PLC_ReportViewRowChangeEvent(((PLCMng_PLC_ReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePLCMng_PLC_ReportViewRow(PLCMng_PLC_ReportViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDataObjects ds = new ReportDataObjects();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PLCMng_PLC_ReportViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HeaderDataTable : global::System.Data.TypedTableBase<HeaderRow> {
            
            private global::System.Data.DataColumn columnFactoryUD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HeaderDataTable() {
                this.TableName = "Header";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal HeaderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected HeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactoryUDColumn {
                get {
                    return this.columnFactoryUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HeaderRow this[int index] {
                get {
                    return ((HeaderRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HeaderRowChangeEventHandler HeaderRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HeaderRowChangeEventHandler HeaderRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HeaderRowChangeEventHandler HeaderRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event HeaderRowChangeEventHandler HeaderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddHeaderRow(HeaderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HeaderRow AddHeaderRow(string FactoryUD) {
                HeaderRow rowHeaderRow = ((HeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FactoryUD};
                rowHeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHeaderRow);
                return rowHeaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                HeaderDataTable cln = ((HeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HeaderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFactoryUD = base.Columns["FactoryUD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFactoryUD = new global::System.Data.DataColumn("FactoryUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactoryUD);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HeaderRow NewHeaderRow() {
                return ((HeaderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HeaderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(HeaderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HeaderRowChanged != null)) {
                    this.HeaderRowChanged(this, new HeaderRowChangeEvent(((HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HeaderRowChanging != null)) {
                    this.HeaderRowChanging(this, new HeaderRowChangeEvent(((HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HeaderRowDeleted != null)) {
                    this.HeaderRowDeleted(this, new HeaderRowChangeEvent(((HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HeaderRowDeleting != null)) {
                    this.HeaderRowDeleting(this, new HeaderRowChangeEvent(((HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveHeaderRow(HeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDataObjects ds = new ReportDataObjects();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PLCMng_PLC_ImnageReportViewRow : global::System.Data.DataRow {
            
            private PLCMng_PLC_ImnageReportViewDataTable tablePLCMng_PLC_ImnageReportView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PLCMng_PLC_ImnageReportViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePLCMng_PLC_ImnageReportView = ((PLCMng_PLC_ImnageReportViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PLCImageID {
                get {
                    return ((int)(this[this.tablePLCMng_PLC_ImnageReportView.PLCImageIDColumn]));
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.PLCImageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PLCID {
                get {
                    try {
                        return ((int)(this[this.tablePLCMng_PLC_ImnageReportView.PLCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PLCID\' in table \'PLCMng_PLC_ImnageReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.PLCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ImageTypeID {
                get {
                    try {
                        return ((int)(this[this.tablePLCMng_PLC_ImnageReportView.ImageTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageTypeID\' in table \'PLCMng_PLC_ImnageReportView\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.ImageTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImageFile {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ImnageReportView.ImageFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageFile\' in table \'PLCMng_PLC_ImnageReportView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.ImageFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConstantEntryID {
                get {
                    try {
                        return ((int)(this[this.tablePLCMng_PLC_ImnageReportView.ConstantEntryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConstantEntryID\' in table \'PLCMng_PLC_ImnageReportView\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.ConstantEntryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PLCImageTypeID {
                get {
                    try {
                        return ((int)(this[this.tablePLCMng_PLC_ImnageReportView.PLCImageTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PLCImageTypeID\' in table \'PLCMng_PLC_ImnageReportView\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.PLCImageTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PLCImageTypeNM {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ImnageReportView.PLCImageTypeNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PLCImageTypeNM\' in table \'PLCMng_PLC_ImnageReportView\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.PLCImageTypeNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DisplayOrder {
                get {
                    try {
                        return ((int)(this[this.tablePLCMng_PLC_ImnageReportView.DisplayOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DisplayOrder\' in table \'PLCMng_PLC_ImnageReportView\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.DisplayOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FileID {
                get {
                    try {
                        return ((int)(this[this.tablePLCMng_PLC_ImnageReportView.FileIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileID\' in table \'PLCMng_PLC_ImnageReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.FileIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileUD {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ImnageReportView.FileUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileUD\' in table \'PLCMng_PLC_ImnageReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.FileUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FriendlyName {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ImnageReportView.FriendlyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FriendlyName\' in table \'PLCMng_PLC_ImnageReportView\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.FriendlyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileLocation {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ImnageReportView.FileLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileLocation\' in table \'PLCMng_PLC_ImnageReportView\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.FileLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileExtension {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ImnageReportView.FileExtensionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileExtension\' in table \'PLCMng_PLC_ImnageReportView\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.FileExtensionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ThumbnailLocation {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ImnageReportView.ThumbnailLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThumbnailLocation\' in table \'PLCMng_PLC_ImnageReportView\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.ThumbnailLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FileSize {
                get {
                    try {
                        return ((int)(this[this.tablePLCMng_PLC_ImnageReportView.FileSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileSize\' in table \'PLCMng_PLC_ImnageReportView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ImnageReportView.FileSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPLCIDNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.PLCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPLCIDNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.PLCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageTypeIDNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.ImageTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageTypeIDNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.ImageTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageFileNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.ImageFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageFileNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.ImageFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConstantEntryIDNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.ConstantEntryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConstantEntryIDNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.ConstantEntryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPLCImageTypeIDNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.PLCImageTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPLCImageTypeIDNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.PLCImageTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPLCImageTypeNMNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.PLCImageTypeNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPLCImageTypeNMNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.PLCImageTypeNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDisplayOrderNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.DisplayOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDisplayOrderNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.DisplayOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileIDNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.FileIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileIDNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.FileIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileUDNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.FileUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileUDNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.FileUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFriendlyNameNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.FriendlyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFriendlyNameNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.FriendlyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileLocationNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.FileLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileLocationNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.FileLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileExtensionNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.FileExtensionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileExtensionNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.FileExtensionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThumbnailLocationNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.ThumbnailLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThumbnailLocationNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.ThumbnailLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileSizeNull() {
                return this.IsNull(this.tablePLCMng_PLC_ImnageReportView.FileSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileSizeNull() {
                this[this.tablePLCMng_PLC_ImnageReportView.FileSizeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PLCMng_PLC_ReportViewRow : global::System.Data.DataRow {
            
            private PLCMng_PLC_ReportViewDataTable tablePLCMng_PLC_ReportView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PLCMng_PLC_ReportViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePLCMng_PLC_ReportView = ((PLCMng_PLC_ReportViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PLCID {
                get {
                    return ((int)(this[this.tablePLCMng_PLC_ReportView.PLCIDColumn]));
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.PLCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactoryUD {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.FactoryUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactoryUD\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.FactoryUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientArticleCode {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.ClientArticleCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientArticleCode\' in table \'PLCMng_PLC_ReportView\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.ClientArticleCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientArticleName {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.ClientArticleNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientArticleName\' in table \'PLCMng_PLC_ReportView\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.ClientArticleNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientEANCode {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.ClientEANCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientEANCode\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.ClientEANCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientOrderNumber {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.ClientOrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientOrderNumber\' in table \'PLCMng_PLC_ReportView\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.ClientOrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CachedProformaInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.CachedProformaInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CachedProformaInvoiceNo\' in table \'PLCMng_PLC_ReportView\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.CachedProformaInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CachedClientUD {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.CachedClientUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CachedClientUD\' in table \'PLCMng_PLC_ReportView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.CachedClientUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArticleCode {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.ArticleCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArticleCode\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.ArticleCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MaterialNM {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.MaterialNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialNM\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.MaterialNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MaterialWeight {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.MaterialWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialWeight\' in table \'PLCMng_PLC_ReportView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.MaterialWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MaterialColorNM {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.MaterialColorNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialColorNM\' in table \'PLCMng_PLC_ReportView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.MaterialColorNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeLegs {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.TypeLegsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeLegs\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.TypeLegsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NetWeight {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.NetWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetWeight\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.NetWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OverallDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.OverallDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverallDimL\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.OverallDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OverallDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.OverallDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverallDimW\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.OverallDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OverallDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.OverallDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverallDimH\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.OverallDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.SeatDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatDimL\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.SeatDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.SeatDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatDimW\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.SeatDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.SeatDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatDimH\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.SeatDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArmDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.ArmDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArmDimL\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.ArmDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArmDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.ArmDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArmDimW\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.ArmDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArmDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.ArmDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArmDimH\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.ArmDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.OtherDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDimL\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.OtherDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.OtherDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDimW\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.OtherDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.OtherDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDimH\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.OtherDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FrameMaterialNM {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.FrameMaterialNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrameMaterialNM\' in table \'PLCMng_PLC_ReportView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.FrameMaterialNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FrameMaterialColorNM {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.FrameMaterialColorNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrameMaterialColorNM\' in table \'PLCMng_PLC_ReportView\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.FrameMaterialColorNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CushionColorNM {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.CushionColorNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CushionColorNM\' in table \'PLCMng_PLC_ReportView\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.CushionColorNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FabricWeight {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.FabricWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FabricWeight\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.FabricWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CushionBatchCode {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.CushionBatchCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CushionBatchCode\' in table \'PLCMng_PLC_ReportView\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.CushionBatchCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionStuffing {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.SeatCushionStuffingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionStuffing\' in table \'PLCMng_PLC_ReportView\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.SeatCushionStuffingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionWeight {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.SeatCushionWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionWeight\' in table \'PLCMng_PLC_ReportView\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.SeatCushionWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionParts {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.SeatCushionPartsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionParts\' in table \'PLCMng_PLC_ReportView\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.SeatCushionPartsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionFinishing {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.SeatCushionFinishingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionFinishing\' in table \'PLCMng_PLC_ReportView\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.SeatCushionFinishingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CushionNM {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.CushionNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CushionNM\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.CushionNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionStuffing {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.BackCushionStuffingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionStuffing\' in table \'PLCMng_PLC_ReportView\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.BackCushionStuffingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionWeight {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.BackCushionWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionWeight\' in table \'PLCMng_PLC_ReportView\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.BackCushionWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionParts {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.BackCushionPartsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionParts\' in table \'PLCMng_PLC_ReportView\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.BackCushionPartsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionFinishing {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.BackCushionFinishingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionFinishing\' in table \'PLCMng_PLC_ReportView\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.BackCushionFinishingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.SeatCushionDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionDimL\' in table \'PLCMng_PLC_ReportView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.SeatCushionDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.SeatCushionDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionDimW\' in table \'PLCMng_PLC_ReportView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.SeatCushionDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.SeatCushionDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionDimH\' in table \'PLCMng_PLC_ReportView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.SeatCushionDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.BackCushionDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionDimL\' in table \'PLCMng_PLC_ReportView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.BackCushionDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.BackCushionDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionDimW\' in table \'PLCMng_PLC_ReportView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.BackCushionDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.BackCushionDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionDimH\' in table \'PLCMng_PLC_ReportView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.BackCushionDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CartonBoxDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.CartonBoxDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonBoxDimL\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.CartonBoxDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CartonBoxDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.CartonBoxDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonBoxDimW\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.CartonBoxDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CartonBoxDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.CartonBoxDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonBoxDimH\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.CartonBoxDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string QntInBox {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.QntInBoxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QntInBox\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.QntInBoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CartonThickness {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.CartonThicknessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonThickness\' in table \'PLCMng_PLC_ReportView\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.CartonThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GrossWeight {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.GrossWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossWeight\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.GrossWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Rating {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.RatingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rating\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.RatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RatorName {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.RatorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RatorName\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.RatorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConfirmerName {
                get {
                    try {
                        return ((string)(this[this.tablePLCMng_PLC_ReportView.ConfirmerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfirmerName\' in table \'PLCMng_PLC_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCMng_PLC_ReportView.ConfirmerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFactoryUDNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.FactoryUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFactoryUDNull() {
                this[this.tablePLCMng_PLC_ReportView.FactoryUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientArticleCodeNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.ClientArticleCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientArticleCodeNull() {
                this[this.tablePLCMng_PLC_ReportView.ClientArticleCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientArticleNameNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.ClientArticleNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientArticleNameNull() {
                this[this.tablePLCMng_PLC_ReportView.ClientArticleNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientEANCodeNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.ClientEANCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientEANCodeNull() {
                this[this.tablePLCMng_PLC_ReportView.ClientEANCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientOrderNumberNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.ClientOrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientOrderNumberNull() {
                this[this.tablePLCMng_PLC_ReportView.ClientOrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCachedProformaInvoiceNoNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.CachedProformaInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCachedProformaInvoiceNoNull() {
                this[this.tablePLCMng_PLC_ReportView.CachedProformaInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCachedClientUDNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.CachedClientUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCachedClientUDNull() {
                this[this.tablePLCMng_PLC_ReportView.CachedClientUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArticleCodeNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.ArticleCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArticleCodeNull() {
                this[this.tablePLCMng_PLC_ReportView.ArticleCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tablePLCMng_PLC_ReportView.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialNMNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.MaterialNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialNMNull() {
                this[this.tablePLCMng_PLC_ReportView.MaterialNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialWeightNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.MaterialWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialWeightNull() {
                this[this.tablePLCMng_PLC_ReportView.MaterialWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialColorNMNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.MaterialColorNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialColorNMNull() {
                this[this.tablePLCMng_PLC_ReportView.MaterialColorNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeLegsNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.TypeLegsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeLegsNull() {
                this[this.tablePLCMng_PLC_ReportView.TypeLegsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetWeightNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.NetWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetWeightNull() {
                this[this.tablePLCMng_PLC_ReportView.NetWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverallDimLNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.OverallDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOverallDimLNull() {
                this[this.tablePLCMng_PLC_ReportView.OverallDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverallDimWNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.OverallDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOverallDimWNull() {
                this[this.tablePLCMng_PLC_ReportView.OverallDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverallDimHNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.OverallDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOverallDimHNull() {
                this[this.tablePLCMng_PLC_ReportView.OverallDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatDimLNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.SeatDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatDimLNull() {
                this[this.tablePLCMng_PLC_ReportView.SeatDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatDimWNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.SeatDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatDimWNull() {
                this[this.tablePLCMng_PLC_ReportView.SeatDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatDimHNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.SeatDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatDimHNull() {
                this[this.tablePLCMng_PLC_ReportView.SeatDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArmDimLNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.ArmDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArmDimLNull() {
                this[this.tablePLCMng_PLC_ReportView.ArmDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArmDimWNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.ArmDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArmDimWNull() {
                this[this.tablePLCMng_PLC_ReportView.ArmDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArmDimHNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.ArmDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArmDimHNull() {
                this[this.tablePLCMng_PLC_ReportView.ArmDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherDimLNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.OtherDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherDimLNull() {
                this[this.tablePLCMng_PLC_ReportView.OtherDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherDimWNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.OtherDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherDimWNull() {
                this[this.tablePLCMng_PLC_ReportView.OtherDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherDimHNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.OtherDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherDimHNull() {
                this[this.tablePLCMng_PLC_ReportView.OtherDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFrameMaterialNMNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.FrameMaterialNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFrameMaterialNMNull() {
                this[this.tablePLCMng_PLC_ReportView.FrameMaterialNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFrameMaterialColorNMNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.FrameMaterialColorNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFrameMaterialColorNMNull() {
                this[this.tablePLCMng_PLC_ReportView.FrameMaterialColorNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCushionColorNMNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.CushionColorNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCushionColorNMNull() {
                this[this.tablePLCMng_PLC_ReportView.CushionColorNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFabricWeightNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.FabricWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFabricWeightNull() {
                this[this.tablePLCMng_PLC_ReportView.FabricWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCushionBatchCodeNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.CushionBatchCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCushionBatchCodeNull() {
                this[this.tablePLCMng_PLC_ReportView.CushionBatchCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionStuffingNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.SeatCushionStuffingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionStuffingNull() {
                this[this.tablePLCMng_PLC_ReportView.SeatCushionStuffingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionWeightNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.SeatCushionWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionWeightNull() {
                this[this.tablePLCMng_PLC_ReportView.SeatCushionWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionPartsNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.SeatCushionPartsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionPartsNull() {
                this[this.tablePLCMng_PLC_ReportView.SeatCushionPartsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionFinishingNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.SeatCushionFinishingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionFinishingNull() {
                this[this.tablePLCMng_PLC_ReportView.SeatCushionFinishingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCushionNMNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.CushionNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCushionNMNull() {
                this[this.tablePLCMng_PLC_ReportView.CushionNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionStuffingNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.BackCushionStuffingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionStuffingNull() {
                this[this.tablePLCMng_PLC_ReportView.BackCushionStuffingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionWeightNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.BackCushionWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionWeightNull() {
                this[this.tablePLCMng_PLC_ReportView.BackCushionWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionPartsNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.BackCushionPartsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionPartsNull() {
                this[this.tablePLCMng_PLC_ReportView.BackCushionPartsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionFinishingNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.BackCushionFinishingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionFinishingNull() {
                this[this.tablePLCMng_PLC_ReportView.BackCushionFinishingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionDimLNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.SeatCushionDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionDimLNull() {
                this[this.tablePLCMng_PLC_ReportView.SeatCushionDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionDimWNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.SeatCushionDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionDimWNull() {
                this[this.tablePLCMng_PLC_ReportView.SeatCushionDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionDimHNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.SeatCushionDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionDimHNull() {
                this[this.tablePLCMng_PLC_ReportView.SeatCushionDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionDimLNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.BackCushionDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionDimLNull() {
                this[this.tablePLCMng_PLC_ReportView.BackCushionDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionDimWNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.BackCushionDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionDimWNull() {
                this[this.tablePLCMng_PLC_ReportView.BackCushionDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionDimHNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.BackCushionDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionDimHNull() {
                this[this.tablePLCMng_PLC_ReportView.BackCushionDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCartonBoxDimLNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.CartonBoxDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCartonBoxDimLNull() {
                this[this.tablePLCMng_PLC_ReportView.CartonBoxDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCartonBoxDimWNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.CartonBoxDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCartonBoxDimWNull() {
                this[this.tablePLCMng_PLC_ReportView.CartonBoxDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCartonBoxDimHNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.CartonBoxDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCartonBoxDimHNull() {
                this[this.tablePLCMng_PLC_ReportView.CartonBoxDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQntInBoxNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.QntInBoxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQntInBoxNull() {
                this[this.tablePLCMng_PLC_ReportView.QntInBoxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCartonThicknessNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.CartonThicknessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCartonThicknessNull() {
                this[this.tablePLCMng_PLC_ReportView.CartonThicknessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrossWeightNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.GrossWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrossWeightNull() {
                this[this.tablePLCMng_PLC_ReportView.GrossWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRatingNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.RatingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRatingNull() {
                this[this.tablePLCMng_PLC_ReportView.RatingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRatorNameNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.RatorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRatorNameNull() {
                this[this.tablePLCMng_PLC_ReportView.RatorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfirmerNameNull() {
                return this.IsNull(this.tablePLCMng_PLC_ReportView.ConfirmerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConfirmerNameNull() {
                this[this.tablePLCMng_PLC_ReportView.ConfirmerNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class HeaderRow : global::System.Data.DataRow {
            
            private HeaderDataTable tableHeader;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal HeaderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHeader = ((HeaderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactoryUD {
                get {
                    try {
                        return ((string)(this[this.tableHeader.FactoryUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactoryUD\' in table \'Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHeader.FactoryUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFactoryUDNull() {
                return this.IsNull(this.tableHeader.FactoryUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFactoryUDNull() {
                this[this.tableHeader.FactoryUDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PLCMng_PLC_ImnageReportViewRowChangeEvent : global::System.EventArgs {
            
            private PLCMng_PLC_ImnageReportViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCMng_PLC_ImnageReportViewRowChangeEvent(PLCMng_PLC_ImnageReportViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCMng_PLC_ImnageReportViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PLCMng_PLC_ReportViewRowChangeEvent : global::System.EventArgs {
            
            private PLCMng_PLC_ReportViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCMng_PLC_ReportViewRowChangeEvent(PLCMng_PLC_ReportViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCMng_PLC_ReportViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class HeaderRowChangeEvent : global::System.EventArgs {
            
            private HeaderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HeaderRowChangeEvent(HeaderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public HeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DAL.ReportPlcProducts.ReportDataObjectsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PLCMng_PLC_ImnageReportViewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PLCMng_PLC_ImnageReportViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PLCMng_PLC_ImnageReportView";
            tableMapping.ColumnMappings.Add("PLCImageID", "PLCImageID");
            tableMapping.ColumnMappings.Add("PLCID", "PLCID");
            tableMapping.ColumnMappings.Add("ImageTypeID", "ImageTypeID");
            tableMapping.ColumnMappings.Add("ImageFile", "ImageFile");
            tableMapping.ColumnMappings.Add("ConstantEntryID", "ConstantEntryID");
            tableMapping.ColumnMappings.Add("PLCImageTypeID", "PLCImageTypeID");
            tableMapping.ColumnMappings.Add("PLCImageTypeNM", "PLCImageTypeNM");
            tableMapping.ColumnMappings.Add("DisplayOrder", "DisplayOrder");
            tableMapping.ColumnMappings.Add("FileID", "FileID");
            tableMapping.ColumnMappings.Add("FileUD", "FileUD");
            tableMapping.ColumnMappings.Add("FriendlyName", "FriendlyName");
            tableMapping.ColumnMappings.Add("FileLocation", "FileLocation");
            tableMapping.ColumnMappings.Add("FileExtension", "FileExtension");
            tableMapping.ColumnMappings.Add("ThumbnailLocation", "ThumbnailLocation");
            tableMapping.ColumnMappings.Add("FileSize", "FileSize");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.ReportPlcProducts.Properties.Settings.Default.ReportPlcProductsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM PLCMng_PLC_ImnageReportView";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportDataObjects.PLCMng_PLC_ImnageReportViewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportDataObjects.PLCMng_PLC_ImnageReportViewDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportDataObjects.PLCMng_PLC_ImnageReportViewDataTable dataTable = new ReportDataObjects.PLCMng_PLC_ImnageReportViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PLCMng_PLC_ReportViewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PLCMng_PLC_ReportViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PLCMng_PLC_ReportView";
            tableMapping.ColumnMappings.Add("PLCID", "PLCID");
            tableMapping.ColumnMappings.Add("FactoryUD", "FactoryUD");
            tableMapping.ColumnMappings.Add("ClientArticleCode", "ClientArticleCode");
            tableMapping.ColumnMappings.Add("ClientArticleName", "ClientArticleName");
            tableMapping.ColumnMappings.Add("ClientEANCode", "ClientEANCode");
            tableMapping.ColumnMappings.Add("ClientOrderNumber", "ClientOrderNumber");
            tableMapping.ColumnMappings.Add("CachedProformaInvoiceNo", "CachedProformaInvoiceNo");
            tableMapping.ColumnMappings.Add("CachedClientUD", "CachedClientUD");
            tableMapping.ColumnMappings.Add("ArticleCode", "ArticleCode");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("MaterialNM", "MaterialNM");
            tableMapping.ColumnMappings.Add("MaterialWeight", "MaterialWeight");
            tableMapping.ColumnMappings.Add("MaterialColorNM", "MaterialColorNM");
            tableMapping.ColumnMappings.Add("TypeLegs", "TypeLegs");
            tableMapping.ColumnMappings.Add("NetWeight", "NetWeight");
            tableMapping.ColumnMappings.Add("OverallDimL", "OverallDimL");
            tableMapping.ColumnMappings.Add("OverallDimW", "OverallDimW");
            tableMapping.ColumnMappings.Add("OverallDimH", "OverallDimH");
            tableMapping.ColumnMappings.Add("SeatDimL", "SeatDimL");
            tableMapping.ColumnMappings.Add("SeatDimW", "SeatDimW");
            tableMapping.ColumnMappings.Add("SeatDimH", "SeatDimH");
            tableMapping.ColumnMappings.Add("ArmDimL", "ArmDimL");
            tableMapping.ColumnMappings.Add("ArmDimW", "ArmDimW");
            tableMapping.ColumnMappings.Add("ArmDimH", "ArmDimH");
            tableMapping.ColumnMappings.Add("OtherDimL", "OtherDimL");
            tableMapping.ColumnMappings.Add("OtherDimW", "OtherDimW");
            tableMapping.ColumnMappings.Add("OtherDimH", "OtherDimH");
            tableMapping.ColumnMappings.Add("FrameMaterialNM", "FrameMaterialNM");
            tableMapping.ColumnMappings.Add("FrameMaterialColorNM", "FrameMaterialColorNM");
            tableMapping.ColumnMappings.Add("CushionColorNM", "CushionColorNM");
            tableMapping.ColumnMappings.Add("FabricWeight", "FabricWeight");
            tableMapping.ColumnMappings.Add("CushionBatchCode", "CushionBatchCode");
            tableMapping.ColumnMappings.Add("SeatCushionStuffing", "SeatCushionStuffing");
            tableMapping.ColumnMappings.Add("SeatCushionWeight", "SeatCushionWeight");
            tableMapping.ColumnMappings.Add("SeatCushionParts", "SeatCushionParts");
            tableMapping.ColumnMappings.Add("SeatCushionFinishing", "SeatCushionFinishing");
            tableMapping.ColumnMappings.Add("CushionNM", "CushionNM");
            tableMapping.ColumnMappings.Add("BackCushionStuffing", "BackCushionStuffing");
            tableMapping.ColumnMappings.Add("BackCushionWeight", "BackCushionWeight");
            tableMapping.ColumnMappings.Add("BackCushionParts", "BackCushionParts");
            tableMapping.ColumnMappings.Add("BackCushionFinishing", "BackCushionFinishing");
            tableMapping.ColumnMappings.Add("SeatCushionDimL", "SeatCushionDimL");
            tableMapping.ColumnMappings.Add("SeatCushionDimW", "SeatCushionDimW");
            tableMapping.ColumnMappings.Add("SeatCushionDimH", "SeatCushionDimH");
            tableMapping.ColumnMappings.Add("BackCushionDimL", "BackCushionDimL");
            tableMapping.ColumnMappings.Add("BackCushionDimW", "BackCushionDimW");
            tableMapping.ColumnMappings.Add("BackCushionDimH", "BackCushionDimH");
            tableMapping.ColumnMappings.Add("CartonBoxDimL", "CartonBoxDimL");
            tableMapping.ColumnMappings.Add("CartonBoxDimW", "CartonBoxDimW");
            tableMapping.ColumnMappings.Add("CartonBoxDimH", "CartonBoxDimH");
            tableMapping.ColumnMappings.Add("QntInBox", "QntInBox");
            tableMapping.ColumnMappings.Add("CartonThickness", "CartonThickness");
            tableMapping.ColumnMappings.Add("GrossWeight", "GrossWeight");
            tableMapping.ColumnMappings.Add("Rating", "Rating");
            tableMapping.ColumnMappings.Add("RatorName", "RatorName");
            tableMapping.ColumnMappings.Add("ConfirmerName", "ConfirmerName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.ReportPlcProducts.Properties.Settings.Default.ReportPlcProductsConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * from PLCMng_PLC_ReportView";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportDataObjects.PLCMng_PLC_ReportViewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportDataObjects.PLCMng_PLC_ReportViewDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportDataObjects.PLCMng_PLC_ReportViewDataTable dataTable = new ReportDataObjects.PLCMng_PLC_ReportViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ReportDataObjects dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ReportDataObjects dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ReportDataObjects dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ReportDataObjects dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591