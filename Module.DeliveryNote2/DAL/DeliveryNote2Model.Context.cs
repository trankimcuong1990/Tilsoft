//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.DeliveryNote2.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DeliveryNote2Entities : DbContext
    {
        public DeliveryNote2Entities()
            : base("name=DeliveryNote2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DeliveryNoteMng_DeliveryNoteDetail_View> DeliveryNoteMng_DeliveryNoteDetail_View { get; set; }
        public virtual DbSet<DeliveryNoteMng_WorkCenter_View> DeliveryNoteMng_WorkCenter_View { get; set; }
        public virtual DbSet<DeliveryNoteMng_DeliveryNote_SearchView> DeliveryNoteMng_DeliveryNote_SearchView { get; set; }
        public virtual DbSet<DeliveryNote> DeliveryNote { get; set; }
        public virtual DbSet<SupportMng_SubSupplierQuickSearch_View> SupportMng_SubSupplierQuickSearch_View { get; set; }
        public virtual DbSet<ProductionPrice> ProductionPrice { get; set; }
        public virtual DbSet<DeliveryNoteMng_FactoryWarehouseList_View> DeliveryNoteMng_FactoryWarehouseList_View { get; set; }
        public virtual DbSet<DeliveryNoteMng_SupportFactoryWaseHouseList_View> DeliveryNoteMng_SupportFactoryWaseHouseList_View { get; set; }
        public virtual DbSet<DeliveryNoteMng_DeliveryNote_FormView> DeliveryNoteMng_DeliveryNote_FormView { get; set; }
        public virtual DbSet<DelivetyNoteMng_DeliveryNoteDetail_FormView> DelivetyNoteMng_DeliveryNoteDetail_FormView { get; set; }
        public virtual DbSet<WorkOrder> WorkOrder { get; set; }
        public virtual DbSet<DeliveryNoteMng_QuickSearchFactorySaleOrder_View> DeliveryNoteMng_QuickSearchFactorySaleOrder_View { get; set; }
        public virtual DbSet<DeliveryNoteMng_ListProductionItemUnit_View> DeliveryNoteMng_ListProductionItemUnit_View { get; set; }
        public virtual DbSet<DeliveryNoteMng_WorkOrder_SearchView> DeliveryNoteMng_WorkOrder_SearchView { get; set; }
        public virtual DbSet<ProductionItem> ProductionItem { get; set; }
        public virtual DbSet<DeliveryNoteMng_FactoryWarehouse_View> DeliveryNoteMng_FactoryWarehouse_View { get; set; }
        public virtual DbSet<DeliveryNote2Mng_PurchaseOrder_View> DeliveryNote2Mng_PurchaseOrder_View { get; set; }
        public virtual DbSet<DeliveryNote2Mng_PurchaseOrderDetail_View> DeliveryNote2Mng_PurchaseOrderDetail_View { get; set; }
        public virtual DbSet<SupportMng_NotificationGroup_View> SupportMng_NotificationGroup_View { get; set; }
        public virtual DbSet<EmailNotificationMessage> EmailNotificationMessage { get; set; }
        public virtual DbSet<WorkOrderMng_BOM_View> WorkOrderMng_BOM_View { get; set; }
        public virtual DbSet<DeliveryNoteMng_OutsourcingCost_View> DeliveryNoteMng_OutsourcingCost_View { get; set; }
        public virtual DbSet<DeliveryNoteMng_TransportationService_View> DeliveryNoteMng_TransportationService_View { get; set; }
        public virtual DbSet<DeliveryNoteMng_BOM_View> DeliveryNoteMng_BOM_View { get; set; }
        public virtual DbSet<DeliveryNoteMng_DeliveryNote_View> DeliveryNoteMng_DeliveryNote_View { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<DeliveryNoteMng_SupportProductionItem_View> DeliveryNoteMng_SupportProductionItem_View { get; set; }
        public virtual DbSet<NotificationMessage> NotificationMessage { get; set; }
        public virtual DbSet<DeliveryNoteMng_QuickSearchFactorySaleOrderDetail_View> DeliveryNoteMng_QuickSearchFactorySaleOrderDetail_View { get; set; }
        public virtual DbSet<DeliveryNoteDetail> DeliveryNoteDetail { get; set; }
    
        public virtual ObjectResult<DeliveryNoteMng_DeliveryNote_SearchView> DeliveryNoteMng_function_SearchDeliveryNote(Nullable<int> companyID, string sortedBy, string sortedDirection, string deliveryNoteUD, string deliveryNoteDate, string workCenterNM, string fromProductionTeamNM, string toProductionTeamNM, string workOrderUD, string modelUD, string modelNM, string productArticleCode, string productDescription, string description, string updatedDate, string updatorName, Nullable<int> deliveryNoteTypeID, Nullable<int> factoryWarehouseID, string fromDeliveryNoteDate, string toDeliveryNoteDate, Nullable<int> statusTypeID, string fromUpdatedDate, string toUpdatedDate, Nullable<int> workCenterID, Nullable<int> fromProductionTeamID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var deliveryNoteUDParameter = deliveryNoteUD != null ?
                new ObjectParameter("DeliveryNoteUD", deliveryNoteUD) :
                new ObjectParameter("DeliveryNoteUD", typeof(string));
    
            var deliveryNoteDateParameter = deliveryNoteDate != null ?
                new ObjectParameter("DeliveryNoteDate", deliveryNoteDate) :
                new ObjectParameter("DeliveryNoteDate", typeof(string));
    
            var workCenterNMParameter = workCenterNM != null ?
                new ObjectParameter("WorkCenterNM", workCenterNM) :
                new ObjectParameter("WorkCenterNM", typeof(string));
    
            var fromProductionTeamNMParameter = fromProductionTeamNM != null ?
                new ObjectParameter("FromProductionTeamNM", fromProductionTeamNM) :
                new ObjectParameter("FromProductionTeamNM", typeof(string));
    
            var toProductionTeamNMParameter = toProductionTeamNM != null ?
                new ObjectParameter("ToProductionTeamNM", toProductionTeamNM) :
                new ObjectParameter("ToProductionTeamNM", typeof(string));
    
            var workOrderUDParameter = workOrderUD != null ?
                new ObjectParameter("WorkOrderUD", workOrderUD) :
                new ObjectParameter("WorkOrderUD", typeof(string));
    
            var modelUDParameter = modelUD != null ?
                new ObjectParameter("ModelUD", modelUD) :
                new ObjectParameter("ModelUD", typeof(string));
    
            var modelNMParameter = modelNM != null ?
                new ObjectParameter("ModelNM", modelNM) :
                new ObjectParameter("ModelNM", typeof(string));
    
            var productArticleCodeParameter = productArticleCode != null ?
                new ObjectParameter("ProductArticleCode", productArticleCode) :
                new ObjectParameter("ProductArticleCode", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var updatedDateParameter = updatedDate != null ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(string));
    
            var updatorNameParameter = updatorName != null ?
                new ObjectParameter("UpdatorName", updatorName) :
                new ObjectParameter("UpdatorName", typeof(string));
    
            var deliveryNoteTypeIDParameter = deliveryNoteTypeID.HasValue ?
                new ObjectParameter("DeliveryNoteTypeID", deliveryNoteTypeID) :
                new ObjectParameter("DeliveryNoteTypeID", typeof(int));
    
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("FactoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("FactoryWarehouseID", typeof(int));
    
            var fromDeliveryNoteDateParameter = fromDeliveryNoteDate != null ?
                new ObjectParameter("FromDeliveryNoteDate", fromDeliveryNoteDate) :
                new ObjectParameter("FromDeliveryNoteDate", typeof(string));
    
            var toDeliveryNoteDateParameter = toDeliveryNoteDate != null ?
                new ObjectParameter("ToDeliveryNoteDate", toDeliveryNoteDate) :
                new ObjectParameter("ToDeliveryNoteDate", typeof(string));
    
            var statusTypeIDParameter = statusTypeID.HasValue ?
                new ObjectParameter("StatusTypeID", statusTypeID) :
                new ObjectParameter("StatusTypeID", typeof(int));
    
            var fromUpdatedDateParameter = fromUpdatedDate != null ?
                new ObjectParameter("FromUpdatedDate", fromUpdatedDate) :
                new ObjectParameter("FromUpdatedDate", typeof(string));
    
            var toUpdatedDateParameter = toUpdatedDate != null ?
                new ObjectParameter("ToUpdatedDate", toUpdatedDate) :
                new ObjectParameter("ToUpdatedDate", typeof(string));
    
            var workCenterIDParameter = workCenterID.HasValue ?
                new ObjectParameter("WorkCenterID", workCenterID) :
                new ObjectParameter("WorkCenterID", typeof(int));
    
            var fromProductionTeamIDParameter = fromProductionTeamID.HasValue ?
                new ObjectParameter("FromProductionTeamID", fromProductionTeamID) :
                new ObjectParameter("FromProductionTeamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeliveryNoteMng_DeliveryNote_SearchView>("DeliveryNoteMng_function_SearchDeliveryNote", companyIDParameter, sortedByParameter, sortedDirectionParameter, deliveryNoteUDParameter, deliveryNoteDateParameter, workCenterNMParameter, fromProductionTeamNMParameter, toProductionTeamNMParameter, workOrderUDParameter, modelUDParameter, modelNMParameter, productArticleCodeParameter, productDescriptionParameter, descriptionParameter, updatedDateParameter, updatorNameParameter, deliveryNoteTypeIDParameter, factoryWarehouseIDParameter, fromDeliveryNoteDateParameter, toDeliveryNoteDateParameter, statusTypeIDParameter, fromUpdatedDateParameter, toUpdatedDateParameter, workCenterIDParameter, fromProductionTeamIDParameter);
        }
    
        public virtual ObjectResult<DeliveryNoteMng_DeliveryNote_SearchView> DeliveryNoteMng_function_SearchDeliveryNote(Nullable<int> companyID, string sortedBy, string sortedDirection, string deliveryNoteUD, string deliveryNoteDate, string workCenterNM, string fromProductionTeamNM, string toProductionTeamNM, string workOrderUD, string modelUD, string modelNM, string productArticleCode, string productDescription, string description, string updatedDate, string updatorName, Nullable<int> deliveryNoteTypeID, Nullable<int> factoryWarehouseID, string fromDeliveryNoteDate, string toDeliveryNoteDate, Nullable<int> statusTypeID, string fromUpdatedDate, string toUpdatedDate, Nullable<int> workCenterID, Nullable<int> fromProductionTeamID, MergeOption mergeOption)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var deliveryNoteUDParameter = deliveryNoteUD != null ?
                new ObjectParameter("DeliveryNoteUD", deliveryNoteUD) :
                new ObjectParameter("DeliveryNoteUD", typeof(string));
    
            var deliveryNoteDateParameter = deliveryNoteDate != null ?
                new ObjectParameter("DeliveryNoteDate", deliveryNoteDate) :
                new ObjectParameter("DeliveryNoteDate", typeof(string));
    
            var workCenterNMParameter = workCenterNM != null ?
                new ObjectParameter("WorkCenterNM", workCenterNM) :
                new ObjectParameter("WorkCenterNM", typeof(string));
    
            var fromProductionTeamNMParameter = fromProductionTeamNM != null ?
                new ObjectParameter("FromProductionTeamNM", fromProductionTeamNM) :
                new ObjectParameter("FromProductionTeamNM", typeof(string));
    
            var toProductionTeamNMParameter = toProductionTeamNM != null ?
                new ObjectParameter("ToProductionTeamNM", toProductionTeamNM) :
                new ObjectParameter("ToProductionTeamNM", typeof(string));
    
            var workOrderUDParameter = workOrderUD != null ?
                new ObjectParameter("WorkOrderUD", workOrderUD) :
                new ObjectParameter("WorkOrderUD", typeof(string));
    
            var modelUDParameter = modelUD != null ?
                new ObjectParameter("ModelUD", modelUD) :
                new ObjectParameter("ModelUD", typeof(string));
    
            var modelNMParameter = modelNM != null ?
                new ObjectParameter("ModelNM", modelNM) :
                new ObjectParameter("ModelNM", typeof(string));
    
            var productArticleCodeParameter = productArticleCode != null ?
                new ObjectParameter("ProductArticleCode", productArticleCode) :
                new ObjectParameter("ProductArticleCode", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var updatedDateParameter = updatedDate != null ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(string));
    
            var updatorNameParameter = updatorName != null ?
                new ObjectParameter("UpdatorName", updatorName) :
                new ObjectParameter("UpdatorName", typeof(string));
    
            var deliveryNoteTypeIDParameter = deliveryNoteTypeID.HasValue ?
                new ObjectParameter("DeliveryNoteTypeID", deliveryNoteTypeID) :
                new ObjectParameter("DeliveryNoteTypeID", typeof(int));
    
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("FactoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("FactoryWarehouseID", typeof(int));
    
            var fromDeliveryNoteDateParameter = fromDeliveryNoteDate != null ?
                new ObjectParameter("FromDeliveryNoteDate", fromDeliveryNoteDate) :
                new ObjectParameter("FromDeliveryNoteDate", typeof(string));
    
            var toDeliveryNoteDateParameter = toDeliveryNoteDate != null ?
                new ObjectParameter("ToDeliveryNoteDate", toDeliveryNoteDate) :
                new ObjectParameter("ToDeliveryNoteDate", typeof(string));
    
            var statusTypeIDParameter = statusTypeID.HasValue ?
                new ObjectParameter("StatusTypeID", statusTypeID) :
                new ObjectParameter("StatusTypeID", typeof(int));
    
            var fromUpdatedDateParameter = fromUpdatedDate != null ?
                new ObjectParameter("FromUpdatedDate", fromUpdatedDate) :
                new ObjectParameter("FromUpdatedDate", typeof(string));
    
            var toUpdatedDateParameter = toUpdatedDate != null ?
                new ObjectParameter("ToUpdatedDate", toUpdatedDate) :
                new ObjectParameter("ToUpdatedDate", typeof(string));
    
            var workCenterIDParameter = workCenterID.HasValue ?
                new ObjectParameter("WorkCenterID", workCenterID) :
                new ObjectParameter("WorkCenterID", typeof(int));
    
            var fromProductionTeamIDParameter = fromProductionTeamID.HasValue ?
                new ObjectParameter("FromProductionTeamID", fromProductionTeamID) :
                new ObjectParameter("FromProductionTeamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeliveryNoteMng_DeliveryNote_SearchView>("DeliveryNoteMng_function_SearchDeliveryNote", mergeOption, companyIDParameter, sortedByParameter, sortedDirectionParameter, deliveryNoteUDParameter, deliveryNoteDateParameter, workCenterNMParameter, fromProductionTeamNMParameter, toProductionTeamNMParameter, workOrderUDParameter, modelUDParameter, modelNMParameter, productArticleCodeParameter, productDescriptionParameter, descriptionParameter, updatedDateParameter, updatorNameParameter, deliveryNoteTypeIDParameter, factoryWarehouseIDParameter, fromDeliveryNoteDateParameter, toDeliveryNoteDateParameter, statusTypeIDParameter, fromUpdatedDateParameter, toUpdatedDateParameter, workCenterIDParameter, fromProductionTeamIDParameter);
        }
    
        public virtual int DeliveryNoteMng_function_GenerateDeliveryNoteUD(Nullable<int> deliveryNoteID, Nullable<int> companyID, Nullable<int> deliveryYear, Nullable<int> deliveryMonth)
        {
            var deliveryNoteIDParameter = deliveryNoteID.HasValue ?
                new ObjectParameter("DeliveryNoteID", deliveryNoteID) :
                new ObjectParameter("DeliveryNoteID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var deliveryYearParameter = deliveryYear.HasValue ?
                new ObjectParameter("DeliveryYear", deliveryYear) :
                new ObjectParameter("DeliveryYear", typeof(int));
    
            var deliveryMonthParameter = deliveryMonth.HasValue ?
                new ObjectParameter("DeliveryMonth", deliveryMonth) :
                new ObjectParameter("DeliveryMonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeliveryNoteMng_function_GenerateDeliveryNoteUD", deliveryNoteIDParameter, companyIDParameter, deliveryYearParameter, deliveryMonthParameter);
        }
    
        public virtual ObjectResult<DeliveryNoteMng_BOM_View> DeliveryNoteMng_function_GetBom(string workOrderIDs, Nullable<int> branchID, string deliveryNoteDate)
        {
            var workOrderIDsParameter = workOrderIDs != null ?
                new ObjectParameter("workOrderIDs", workOrderIDs) :
                new ObjectParameter("workOrderIDs", typeof(string));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("branchID", branchID) :
                new ObjectParameter("branchID", typeof(int));
    
            var deliveryNoteDateParameter = deliveryNoteDate != null ?
                new ObjectParameter("deliveryNoteDate", deliveryNoteDate) :
                new ObjectParameter("deliveryNoteDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeliveryNoteMng_BOM_View>("DeliveryNoteMng_function_GetBom", workOrderIDsParameter, branchIDParameter, deliveryNoteDateParameter);
        }
    
        public virtual ObjectResult<DeliveryNoteMng_BOM_View> DeliveryNoteMng_function_GetBom(string workOrderIDs, Nullable<int> branchID, string deliveryNoteDate, MergeOption mergeOption)
        {
            var workOrderIDsParameter = workOrderIDs != null ?
                new ObjectParameter("workOrderIDs", workOrderIDs) :
                new ObjectParameter("workOrderIDs", typeof(string));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("branchID", branchID) :
                new ObjectParameter("branchID", typeof(int));
    
            var deliveryNoteDateParameter = deliveryNoteDate != null ?
                new ObjectParameter("deliveryNoteDate", deliveryNoteDate) :
                new ObjectParameter("deliveryNoteDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeliveryNoteMng_BOM_View>("DeliveryNoteMng_function_GetBom", mergeOption, workOrderIDsParameter, branchIDParameter, deliveryNoteDateParameter);
        }
    
        public virtual ObjectResult<DeliveryNoteMng_WorkCenter_View> DeliveryNoteMng_function_GetWorkCenter(string workOrderIDs)
        {
            var workOrderIDsParameter = workOrderIDs != null ?
                new ObjectParameter("WorkOrderIDs", workOrderIDs) :
                new ObjectParameter("WorkOrderIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeliveryNoteMng_WorkCenter_View>("DeliveryNoteMng_function_GetWorkCenter", workOrderIDsParameter);
        }
    
        public virtual ObjectResult<DeliveryNoteMng_WorkCenter_View> DeliveryNoteMng_function_GetWorkCenter(string workOrderIDs, MergeOption mergeOption)
        {
            var workOrderIDsParameter = workOrderIDs != null ?
                new ObjectParameter("WorkOrderIDs", workOrderIDs) :
                new ObjectParameter("WorkOrderIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeliveryNoteMng_WorkCenter_View>("DeliveryNoteMng_function_GetWorkCenter", mergeOption, workOrderIDsParameter);
        }
    
        public virtual ObjectResult<DeliveryNote2Mng_PurchaseOrderDetail_View> DeliveryNote2Mng_function_PurchaseOrderDetail(Nullable<int> purchaseOrderID, Nullable<int> branchID)
        {
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("PurchaseOrderID", purchaseOrderID) :
                new ObjectParameter("PurchaseOrderID", typeof(int));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeliveryNote2Mng_PurchaseOrderDetail_View>("DeliveryNote2Mng_function_PurchaseOrderDetail", purchaseOrderIDParameter, branchIDParameter);
        }
    
        public virtual ObjectResult<DeliveryNote2Mng_PurchaseOrderDetail_View> DeliveryNote2Mng_function_PurchaseOrderDetail(Nullable<int> purchaseOrderID, Nullable<int> branchID, MergeOption mergeOption)
        {
            var purchaseOrderIDParameter = purchaseOrderID.HasValue ?
                new ObjectParameter("PurchaseOrderID", purchaseOrderID) :
                new ObjectParameter("PurchaseOrderID", typeof(int));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeliveryNote2Mng_PurchaseOrderDetail_View>("DeliveryNote2Mng_function_PurchaseOrderDetail", mergeOption, purchaseOrderIDParameter, branchIDParameter);
        }
    
        public virtual ObjectResult<DeliveryNoteMng_QuickSearchFactorySaleOrderDetail_View> DeliveryNote2Mng_function_FactorySaleOrderDetail(Nullable<int> factorySaleOrderID, Nullable<int> branchID)
        {
            var factorySaleOrderIDParameter = factorySaleOrderID.HasValue ?
                new ObjectParameter("FactorySaleOrderID", factorySaleOrderID) :
                new ObjectParameter("FactorySaleOrderID", typeof(int));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeliveryNoteMng_QuickSearchFactorySaleOrderDetail_View>("DeliveryNote2Mng_function_FactorySaleOrderDetail", factorySaleOrderIDParameter, branchIDParameter);
        }
    
        public virtual ObjectResult<DeliveryNoteMng_QuickSearchFactorySaleOrderDetail_View> DeliveryNote2Mng_function_FactorySaleOrderDetail(Nullable<int> factorySaleOrderID, Nullable<int> branchID, MergeOption mergeOption)
        {
            var factorySaleOrderIDParameter = factorySaleOrderID.HasValue ?
                new ObjectParameter("FactorySaleOrderID", factorySaleOrderID) :
                new ObjectParameter("FactorySaleOrderID", typeof(int));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeliveryNoteMng_QuickSearchFactorySaleOrderDetail_View>("DeliveryNote2Mng_function_FactorySaleOrderDetail", mergeOption, factorySaleOrderIDParameter, branchIDParameter);
        }
    
        public virtual ObjectResult<DeliveryNoteMng_Function_SupportProductionItem_View_Result> DeliveryNoteMng_Function_SupportProductionItem_View(Nullable<int> companyID, string searchQuery, Nullable<int> branchID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var searchQueryParameter = searchQuery != null ?
                new ObjectParameter("SearchQuery", searchQuery) :
                new ObjectParameter("SearchQuery", typeof(string));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeliveryNoteMng_Function_SupportProductionItem_View_Result>("DeliveryNoteMng_Function_SupportProductionItem_View", companyIDParameter, searchQueryParameter, branchIDParameter);
        }
    
        public virtual ObjectResult<DeliveryNoteMng_Function_ProductionItemUnitByValidDate_Result> DeliveryNoteMng_Function_ProductionItemUnitByValidDate(Nullable<System.DateTime> validFrom, Nullable<int> productionItemID)
        {
            var validFromParameter = validFrom.HasValue ?
                new ObjectParameter("ValidFrom", validFrom) :
                new ObjectParameter("ValidFrom", typeof(System.DateTime));
    
            var productionItemIDParameter = productionItemID.HasValue ?
                new ObjectParameter("ProductionItemID", productionItemID) :
                new ObjectParameter("ProductionItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DeliveryNoteMng_Function_ProductionItemUnitByValidDate_Result>("DeliveryNoteMng_Function_ProductionItemUnitByValidDate", validFromParameter, productionItemIDParameter);
        }
    }
}
