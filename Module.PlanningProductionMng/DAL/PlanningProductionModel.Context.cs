//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.PlanningProductionMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PlanningProductionEntities : DbContext
    {
        public PlanningProductionEntities()
            : base("name=PlanningProductionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PlanningProductionMng_PlanningProduction_View> PlanningProductionMng_PlanningProduction_View { get; set; }
        public virtual DbSet<PlanningProductionMng_PlanningProductionSearch_View> PlanningProductionMng_PlanningProductionSearch_View { get; set; }
        public virtual DbSet<PlanningProductionMng_WorkOrder_View> PlanningProductionMng_WorkOrder_View { get; set; }
        public virtual DbSet<WorkOrder> WorkOrder { get; set; }
        public virtual DbSet<PlanningProductionMng_WorkCenter_View> PlanningProductionMng_WorkCenter_View { get; set; }
        public virtual DbSet<PlanningProductionMng_PlanningProductionTeam_View> PlanningProductionMng_PlanningProductionTeam_View { get; set; }
        public virtual DbSet<PlanningProductionMng_ProductionTeam_View> PlanningProductionMng_ProductionTeam_View { get; set; }
        public virtual DbSet<PlanningProductionMng_ArisingProductionTeam_View> PlanningProductionMng_ArisingProductionTeam_View { get; set; }
        public virtual DbSet<PlanningProductionMng_GrantChart_ReceivingDeliveryArisingByDate_View> PlanningProductionMng_GrantChart_ReceivingDeliveryArisingByDate_View { get; set; }
        public virtual DbSet<PlanningProductionTeam> PlanningProductionTeam { get; set; }
        public virtual DbSet<ProductionItem> ProductionItem { get; set; }
        public virtual DbSet<PlanningProduction> PlanningProduction { get; set; }
        public virtual DbSet<PlanningProductionMng_GrantChart_PlanningProductionTeam_View> PlanningProductionMng_GrantChart_PlanningProductionTeam_View { get; set; }
        public virtual DbSet<PlanningProductionMng_GrantChart_ProductionStatisticsDetail_View> PlanningProductionMng_GrantChart_ProductionStatisticsDetail_View { get; set; }
        public virtual DbSet<PlanningProductionMng_GrantChart_PlanningProduction_View> PlanningProductionMng_GrantChart_PlanningProduction_View { get; set; }
        public virtual DbSet<PlanningProductionMng_BOM_ProductionTeam_View> PlanningProductionMng_BOM_ProductionTeam_View { get; set; }
        public virtual DbSet<PlanningProductionMng_BOM_View> PlanningProductionMng_BOM_View { get; set; }
    
        public virtual int PlanningProductionMng_function_DeleteIsDeletedItem()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlanningProductionMng_function_DeleteIsDeletedItem");
        }
    
        public virtual ObjectResult<PlanningProductionMng_PlanningProductionSearch_View> PlanningProductionMng_function_SearchPlanningProduction(string sortedBy, string sortedDirection, Nullable<int> companyID, string workOrderUD, string productArticleCode, string productDescription, string clientUD, string proformaInvoiceNo, Nullable<bool> hasBOM, Nullable<int> workOrderStatusID, string startDate, string finishDate)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var workOrderUDParameter = workOrderUD != null ?
                new ObjectParameter("WorkOrderUD", workOrderUD) :
                new ObjectParameter("WorkOrderUD", typeof(string));
    
            var productArticleCodeParameter = productArticleCode != null ?
                new ObjectParameter("ProductArticleCode", productArticleCode) :
                new ObjectParameter("ProductArticleCode", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var hasBOMParameter = hasBOM.HasValue ?
                new ObjectParameter("HasBOM", hasBOM) :
                new ObjectParameter("HasBOM", typeof(bool));
    
            var workOrderStatusIDParameter = workOrderStatusID.HasValue ?
                new ObjectParameter("WorkOrderStatusID", workOrderStatusID) :
                new ObjectParameter("WorkOrderStatusID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var finishDateParameter = finishDate != null ?
                new ObjectParameter("FinishDate", finishDate) :
                new ObjectParameter("FinishDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanningProductionMng_PlanningProductionSearch_View>("PlanningProductionMng_function_SearchPlanningProduction", sortedByParameter, sortedDirectionParameter, companyIDParameter, workOrderUDParameter, productArticleCodeParameter, productDescriptionParameter, clientUDParameter, proformaInvoiceNoParameter, hasBOMParameter, workOrderStatusIDParameter, startDateParameter, finishDateParameter);
        }
    
        public virtual ObjectResult<PlanningProductionMng_PlanningProductionSearch_View> PlanningProductionMng_function_SearchPlanningProduction(string sortedBy, string sortedDirection, Nullable<int> companyID, string workOrderUD, string productArticleCode, string productDescription, string clientUD, string proformaInvoiceNo, Nullable<bool> hasBOM, Nullable<int> workOrderStatusID, string startDate, string finishDate, MergeOption mergeOption)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var workOrderUDParameter = workOrderUD != null ?
                new ObjectParameter("WorkOrderUD", workOrderUD) :
                new ObjectParameter("WorkOrderUD", typeof(string));
    
            var productArticleCodeParameter = productArticleCode != null ?
                new ObjectParameter("ProductArticleCode", productArticleCode) :
                new ObjectParameter("ProductArticleCode", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var hasBOMParameter = hasBOM.HasValue ?
                new ObjectParameter("HasBOM", hasBOM) :
                new ObjectParameter("HasBOM", typeof(bool));
    
            var workOrderStatusIDParameter = workOrderStatusID.HasValue ?
                new ObjectParameter("WorkOrderStatusID", workOrderStatusID) :
                new ObjectParameter("WorkOrderStatusID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var finishDateParameter = finishDate != null ?
                new ObjectParameter("FinishDate", finishDate) :
                new ObjectParameter("FinishDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanningProductionMng_PlanningProductionSearch_View>("PlanningProductionMng_function_SearchPlanningProduction", mergeOption, sortedByParameter, sortedDirectionParameter, companyIDParameter, workOrderUDParameter, productArticleCodeParameter, productDescriptionParameter, clientUDParameter, proformaInvoiceNoParameter, hasBOMParameter, workOrderStatusIDParameter, startDateParameter, finishDateParameter);
        }
    
        public virtual ObjectResult<PlanningProductionMng_GrantChart_PlanningProduction_View> PlanningProductionMng_function_GetGrantChartPlanningProduction(Nullable<int> planningProductionID)
        {
            var planningProductionIDParameter = planningProductionID.HasValue ?
                new ObjectParameter("PlanningProductionID", planningProductionID) :
                new ObjectParameter("PlanningProductionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanningProductionMng_GrantChart_PlanningProduction_View>("PlanningProductionMng_function_GetGrantChartPlanningProduction", planningProductionIDParameter);
        }
    
        public virtual ObjectResult<PlanningProductionMng_GrantChart_PlanningProduction_View> PlanningProductionMng_function_GetGrantChartPlanningProduction(Nullable<int> planningProductionID, MergeOption mergeOption)
        {
            var planningProductionIDParameter = planningProductionID.HasValue ?
                new ObjectParameter("PlanningProductionID", planningProductionID) :
                new ObjectParameter("PlanningProductionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanningProductionMng_GrantChart_PlanningProduction_View>("PlanningProductionMng_function_GetGrantChartPlanningProduction", mergeOption, planningProductionIDParameter);
        }
    }
}
