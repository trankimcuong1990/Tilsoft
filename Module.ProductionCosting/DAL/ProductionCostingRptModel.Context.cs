//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.ProductionCosting.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProductionCostingRptEntities : DbContext
    {
        public ProductionCostingRptEntities()
            : base("name=ProductionCostingRptEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ProductionCostingRpt_ProductionCosting_View> ProductionCostingRpt_ProductionCosting_View { get; set; }
        public virtual DbSet<BOM> BOM { get; set; }
        public virtual DbSet<ProductionCostingRpt_TotalQntReceivingNote_View> ProductionCostingRpt_TotalQntReceivingNote_View { get; set; }
        public virtual DbSet<ProductionCostingMng_WorkOrder_View> ProductionCostingMng_WorkOrder_View { get; set; }
    
        public virtual ObjectResult<ProductionCostingRpt_ProductionCosting_View> ProductionCostingRpt_function_GetReportData(Nullable<int> workOrderID, Nullable<int> companyID)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductionCostingRpt_ProductionCosting_View>("ProductionCostingRpt_function_GetReportData", workOrderIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<ProductionCostingRpt_ProductionCosting_View> ProductionCostingRpt_function_GetReportData(Nullable<int> workOrderID, Nullable<int> companyID, MergeOption mergeOption)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductionCostingRpt_ProductionCosting_View>("ProductionCostingRpt_function_GetReportData", mergeOption, workOrderIDParameter, companyIDParameter);
        }
    }
}
