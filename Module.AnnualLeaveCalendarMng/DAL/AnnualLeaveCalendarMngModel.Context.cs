//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.AnnualLeaveCalendarMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AnnualLeaveCalendarMngEntities : DbContext
    {
        public AnnualLeaveCalendarMngEntities()
            : base("name=AnnualLeaveCalendarMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AnnualLeaveCalendarMng_Company_View> AnnualLeaveCalendarMng_Company_View { get; set; }
        public virtual DbSet<AnnualLeaveCalendarMng_SearchResult_View> AnnualLeaveCalendarMng_SearchResult_View { get; set; }
    
        public virtual ObjectResult<AnnualLeaveCalendarMng_SearchResult_View> AnnualLeaveCalendarMng_function_SearchResult(string companies, Nullable<int> month, Nullable<int> year, Nullable<int> type)
        {
            var companiesParameter = companies != null ?
                new ObjectParameter("Companies", companies) :
                new ObjectParameter("Companies", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AnnualLeaveCalendarMng_SearchResult_View>("AnnualLeaveCalendarMng_function_SearchResult", companiesParameter, monthParameter, yearParameter, typeParameter);
        }
    
        public virtual ObjectResult<AnnualLeaveCalendarMng_SearchResult_View> AnnualLeaveCalendarMng_function_SearchResult(string companies, Nullable<int> month, Nullable<int> year, Nullable<int> type, MergeOption mergeOption)
        {
            var companiesParameter = companies != null ?
                new ObjectParameter("Companies", companies) :
                new ObjectParameter("Companies", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AnnualLeaveCalendarMng_SearchResult_View>("AnnualLeaveCalendarMng_function_SearchResult", mergeOption, companiesParameter, monthParameter, yearParameter, typeParameter);
        }
    }
}
