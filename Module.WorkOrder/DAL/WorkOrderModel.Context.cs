//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.WorkOrder.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WorkOrderEntities : DbContext
    {
        public WorkOrderEntities()
            : base("name=WorkOrderEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<WorkOrderMng_FactoryOrderDetail_View> WorkOrderMng_FactoryOrderDetail_View { get; set; }
        public virtual DbSet<WorkOrderMng_Product_View> WorkOrderMng_Product_View { get; set; }
        public virtual DbSet<WorkOrderMng_SaleOrder_View> WorkOrderMng_SaleOrder_View { get; set; }
        public virtual DbSet<WorkOrderMng_WorkOrderDetail_View> WorkOrderMng_WorkOrderDetail_View { get; set; }
        public virtual DbSet<WorkOrderMng_SampleOrder_View> WorkOrderMng_SampleOrder_View { get; set; }
        public virtual DbSet<WorkOrderMng_SampleProduct_View> WorkOrderMng_SampleProduct_View { get; set; }
        public virtual DbSet<WorkOrderMng_WorkOrder_View> WorkOrderMng_WorkOrder_View { get; set; }
        public virtual DbSet<WorkOrderMng_WeavingStatus_View> WorkOrderMng_WeavingStatus_View { get; set; }
        public virtual DbSet<SupportMng_WorkCenter_View> SupportMng_WorkCenter_View { get; set; }
        public virtual DbSet<WorkOrderMng_WorkOrderListPreOrder_View> WorkOrderMng_WorkOrderListPreOrder_View { get; set; }
        public virtual DbSet<BOM> BOM { get; set; }
        public virtual DbSet<WorkOrder> WorkOrder { get; set; }
        public virtual DbSet<WorkOrderDetail> WorkOrderDetail { get; set; }
        public virtual DbSet<WorkOrderCost> WorkOrderCost { get; set; }
        public virtual DbSet<WorkOrderMng_PreOrderWorkOrder_View> WorkOrderMng_PreOrderWorkOrder_View { get; set; }
        public virtual DbSet<WorkOrderMng_BOM_View> WorkOrderMng_BOM_View { get; set; }
        public virtual DbSet<WorkOrderOPSequence> WorkOrderOPSequence { get; set; }
        public virtual DbSet<WorkOrderMng_OPSequenceDetail_View> WorkOrderMng_OPSequenceDetail_View { get; set; }
        public virtual DbSet<WorkOrderMng_WorkOrderOPSequence_View> WorkOrderMng_WorkOrderOPSequence_View { get; set; }
        public virtual DbSet<WorkOrderMng_PreOrderWorkOrderManagement_View> WorkOrderMng_PreOrderWorkOrderManagement_View { get; set; }
        public virtual DbSet<WorkOrderMng_PreOrderWorkOrderBaseOnManagement_View> WorkOrderMng_PreOrderWorkOrderBaseOnManagement_View { get; set; }
        public virtual DbSet<WorkOrderMng_WorkOrderBaseOnManagement_View> WorkOrderMng_WorkOrderBaseOnManagement_View { get; set; }
        public virtual DbSet<TransferWorkOrder> TransferWorkOrder { get; set; }
        public virtual DbSet<TransferWorkOrderDetail> TransferWorkOrderDetail { get; set; }
        public virtual DbSet<WorkOrderMng_TransferWorkOrder_View> WorkOrderMng_TransferWorkOrder_View { get; set; }
        public virtual DbSet<WorkOrderMng_TransferWorkOrderDetail_View> WorkOrderMng_TransferWorkOrderDetail_View { get; set; }
        public virtual DbSet<WorkOrderMng_HistoryTransferPreOrderToWorkOrder_View> WorkOrderMng_HistoryTransferPreOrderToWorkOrder_View { get; set; }
        public virtual DbSet<ProductionItemMng_ProductionItemGroup_View> ProductionItemMng_ProductionItemGroup_View { get; set; }
        public virtual DbSet<WorkOrderMng_ProductionItemGroup_View> WorkOrderMng_ProductionItemGroup_View { get; set; }
        public virtual DbSet<WorkOrderMng_WorkOrder_SearchView> WorkOrderMng_WorkOrder_SearchView { get; set; }
        public virtual DbSet<WorkOrderMng_WorkOrderChild_View> WorkOrderMng_WorkOrderChild_View { get; set; }
        public virtual DbSet<WorkOrderMng_ProductionItem_View> WorkOrderMng_ProductionItem_View { get; set; }
        public virtual DbSet<WorkOrderMng_WorkOrderReportHeader_View> WorkOrderMng_WorkOrderReportHeader_View { get; set; }
        public virtual DbSet<WorkOrderMng_DeliveryNote_View> WorkOrderMng_DeliveryNote_View { get; set; }
        public virtual DbSet<WorkOrderMng_ReceivingNote_View> WorkOrderMng_ReceivingNote_View { get; set; }
        public virtual DbSet<WorkOrderMng_ItemNotBOM_View> WorkOrderMng_ItemNotBOM_View { get; set; }
    
        public virtual ObjectResult<WorkOrderMng_WorkOrder_SearchView> WorkOrderMng_function_SearchWorkOrder(string sortedBy, string sortedDirection, Nullable<int> companyID, string workOrderUD, string productArticleCode, string productDescription, string modelUD, string clientUD, string proformaInvoiceNo, string createdDate, Nullable<bool> isCreatedBOM, string createdDateBOM, Nullable<bool> isConfirmed, string startDate, string finishDate, string updatedDate, Nullable<int> workOrderStatusID, string workOrderPreOrderUD, Nullable<int> productionItemGroupID, Nullable<bool> haspurchaseRequest)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var workOrderUDParameter = workOrderUD != null ?
                new ObjectParameter("WorkOrderUD", workOrderUD) :
                new ObjectParameter("WorkOrderUD", typeof(string));
    
            var productArticleCodeParameter = productArticleCode != null ?
                new ObjectParameter("ProductArticleCode", productArticleCode) :
                new ObjectParameter("ProductArticleCode", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var modelUDParameter = modelUD != null ?
                new ObjectParameter("ModelUD", modelUD) :
                new ObjectParameter("ModelUD", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            var isCreatedBOMParameter = isCreatedBOM.HasValue ?
                new ObjectParameter("IsCreatedBOM", isCreatedBOM) :
                new ObjectParameter("IsCreatedBOM", typeof(bool));
    
            var createdDateBOMParameter = createdDateBOM != null ?
                new ObjectParameter("CreatedDateBOM", createdDateBOM) :
                new ObjectParameter("CreatedDateBOM", typeof(string));
    
            var isConfirmedParameter = isConfirmed.HasValue ?
                new ObjectParameter("IsConfirmed", isConfirmed) :
                new ObjectParameter("IsConfirmed", typeof(bool));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var finishDateParameter = finishDate != null ?
                new ObjectParameter("FinishDate", finishDate) :
                new ObjectParameter("FinishDate", typeof(string));
    
            var updatedDateParameter = updatedDate != null ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(string));
    
            var workOrderStatusIDParameter = workOrderStatusID.HasValue ?
                new ObjectParameter("WorkOrderStatusID", workOrderStatusID) :
                new ObjectParameter("WorkOrderStatusID", typeof(int));
    
            var workOrderPreOrderUDParameter = workOrderPreOrderUD != null ?
                new ObjectParameter("WorkOrderPreOrderUD", workOrderPreOrderUD) :
                new ObjectParameter("WorkOrderPreOrderUD", typeof(string));
    
            var productionItemGroupIDParameter = productionItemGroupID.HasValue ?
                new ObjectParameter("ProductionItemGroupID", productionItemGroupID) :
                new ObjectParameter("ProductionItemGroupID", typeof(int));
    
            var haspurchaseRequestParameter = haspurchaseRequest.HasValue ?
                new ObjectParameter("HaspurchaseRequest", haspurchaseRequest) :
                new ObjectParameter("HaspurchaseRequest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_WorkOrder_SearchView>("WorkOrderMng_function_SearchWorkOrder", sortedByParameter, sortedDirectionParameter, companyIDParameter, workOrderUDParameter, productArticleCodeParameter, productDescriptionParameter, modelUDParameter, clientUDParameter, proformaInvoiceNoParameter, createdDateParameter, isCreatedBOMParameter, createdDateBOMParameter, isConfirmedParameter, startDateParameter, finishDateParameter, updatedDateParameter, workOrderStatusIDParameter, workOrderPreOrderUDParameter, productionItemGroupIDParameter, haspurchaseRequestParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_WorkOrder_SearchView> WorkOrderMng_function_SearchWorkOrder(string sortedBy, string sortedDirection, Nullable<int> companyID, string workOrderUD, string productArticleCode, string productDescription, string modelUD, string clientUD, string proformaInvoiceNo, string createdDate, Nullable<bool> isCreatedBOM, string createdDateBOM, Nullable<bool> isConfirmed, string startDate, string finishDate, string updatedDate, Nullable<int> workOrderStatusID, string workOrderPreOrderUD, Nullable<int> productionItemGroupID, Nullable<bool> haspurchaseRequest, MergeOption mergeOption)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var workOrderUDParameter = workOrderUD != null ?
                new ObjectParameter("WorkOrderUD", workOrderUD) :
                new ObjectParameter("WorkOrderUD", typeof(string));
    
            var productArticleCodeParameter = productArticleCode != null ?
                new ObjectParameter("ProductArticleCode", productArticleCode) :
                new ObjectParameter("ProductArticleCode", typeof(string));
    
            var productDescriptionParameter = productDescription != null ?
                new ObjectParameter("ProductDescription", productDescription) :
                new ObjectParameter("ProductDescription", typeof(string));
    
            var modelUDParameter = modelUD != null ?
                new ObjectParameter("ModelUD", modelUD) :
                new ObjectParameter("ModelUD", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            var isCreatedBOMParameter = isCreatedBOM.HasValue ?
                new ObjectParameter("IsCreatedBOM", isCreatedBOM) :
                new ObjectParameter("IsCreatedBOM", typeof(bool));
    
            var createdDateBOMParameter = createdDateBOM != null ?
                new ObjectParameter("CreatedDateBOM", createdDateBOM) :
                new ObjectParameter("CreatedDateBOM", typeof(string));
    
            var isConfirmedParameter = isConfirmed.HasValue ?
                new ObjectParameter("IsConfirmed", isConfirmed) :
                new ObjectParameter("IsConfirmed", typeof(bool));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var finishDateParameter = finishDate != null ?
                new ObjectParameter("FinishDate", finishDate) :
                new ObjectParameter("FinishDate", typeof(string));
    
            var updatedDateParameter = updatedDate != null ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(string));
    
            var workOrderStatusIDParameter = workOrderStatusID.HasValue ?
                new ObjectParameter("WorkOrderStatusID", workOrderStatusID) :
                new ObjectParameter("WorkOrderStatusID", typeof(int));
    
            var workOrderPreOrderUDParameter = workOrderPreOrderUD != null ?
                new ObjectParameter("WorkOrderPreOrderUD", workOrderPreOrderUD) :
                new ObjectParameter("WorkOrderPreOrderUD", typeof(string));
    
            var productionItemGroupIDParameter = productionItemGroupID.HasValue ?
                new ObjectParameter("ProductionItemGroupID", productionItemGroupID) :
                new ObjectParameter("ProductionItemGroupID", typeof(int));
    
            var haspurchaseRequestParameter = haspurchaseRequest.HasValue ?
                new ObjectParameter("HaspurchaseRequest", haspurchaseRequest) :
                new ObjectParameter("HaspurchaseRequest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_WorkOrder_SearchView>("WorkOrderMng_function_SearchWorkOrder", mergeOption, sortedByParameter, sortedDirectionParameter, companyIDParameter, workOrderUDParameter, productArticleCodeParameter, productDescriptionParameter, modelUDParameter, clientUDParameter, proformaInvoiceNoParameter, createdDateParameter, isCreatedBOMParameter, createdDateBOMParameter, isConfirmedParameter, startDateParameter, finishDateParameter, updatedDateParameter, workOrderStatusIDParameter, workOrderPreOrderUDParameter, productionItemGroupIDParameter, haspurchaseRequestParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_FactoryOrderDetail_View> WorkOrderMng_function_GetFactoryOrderDetail(Nullable<int> userID, Nullable<int> clientID, Nullable<int> saleOrderID, Nullable<int> modelID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var saleOrderIDParameter = saleOrderID.HasValue ?
                new ObjectParameter("SaleOrderID", saleOrderID) :
                new ObjectParameter("SaleOrderID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_FactoryOrderDetail_View>("WorkOrderMng_function_GetFactoryOrderDetail", userIDParameter, clientIDParameter, saleOrderIDParameter, modelIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_FactoryOrderDetail_View> WorkOrderMng_function_GetFactoryOrderDetail(Nullable<int> userID, Nullable<int> clientID, Nullable<int> saleOrderID, Nullable<int> modelID, MergeOption mergeOption)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var saleOrderIDParameter = saleOrderID.HasValue ?
                new ObjectParameter("SaleOrderID", saleOrderID) :
                new ObjectParameter("SaleOrderID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_FactoryOrderDetail_View>("WorkOrderMng_function_GetFactoryOrderDetail", mergeOption, userIDParameter, clientIDParameter, saleOrderIDParameter, modelIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_Product_View> WorkOrderMng_function_GetProduct(string searchQuery)
        {
            var searchQueryParameter = searchQuery != null ?
                new ObjectParameter("SearchQuery", searchQuery) :
                new ObjectParameter("SearchQuery", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_Product_View>("WorkOrderMng_function_GetProduct", searchQueryParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_Product_View> WorkOrderMng_function_GetProduct(string searchQuery, MergeOption mergeOption)
        {
            var searchQueryParameter = searchQuery != null ?
                new ObjectParameter("SearchQuery", searchQuery) :
                new ObjectParameter("SearchQuery", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_Product_View>("WorkOrderMng_function_GetProduct", mergeOption, searchQueryParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_SaleOrder_View> WorkOrderMng_function_GetSaleOrder(string searchQuery, Nullable<int> clientID)
        {
            var searchQueryParameter = searchQuery != null ?
                new ObjectParameter("SearchQuery", searchQuery) :
                new ObjectParameter("SearchQuery", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_SaleOrder_View>("WorkOrderMng_function_GetSaleOrder", searchQueryParameter, clientIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_SaleOrder_View> WorkOrderMng_function_GetSaleOrder(string searchQuery, Nullable<int> clientID, MergeOption mergeOption)
        {
            var searchQueryParameter = searchQuery != null ?
                new ObjectParameter("SearchQuery", searchQuery) :
                new ObjectParameter("SearchQuery", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_SaleOrder_View>("WorkOrderMng_function_GetSaleOrder", mergeOption, searchQueryParameter, clientIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> WorkOrderMng_function_CheckCreateDeliveryNoteAndReceivingNoteForWorkOrder(Nullable<int> workOrderID)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("WorkOrderMng_function_CheckCreateDeliveryNoteAndReceivingNoteForWorkOrder", workOrderIDParameter);
        }
    
        public virtual int WorkOrderMng_function_ChangeOPSequence(Nullable<int> workOrderID, Nullable<int> oPSequenceID)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            var oPSequenceIDParameter = oPSequenceID.HasValue ?
                new ObjectParameter("OPSequenceID", oPSequenceID) :
                new ObjectParameter("OPSequenceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WorkOrderMng_function_ChangeOPSequence", workOrderIDParameter, oPSequenceIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_SampleOrder_View> WorkOrderMng_function_GetSampleOrder(Nullable<int> userID, string searchQuery)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var searchQueryParameter = searchQuery != null ?
                new ObjectParameter("SearchQuery", searchQuery) :
                new ObjectParameter("SearchQuery", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_SampleOrder_View>("WorkOrderMng_function_GetSampleOrder", userIDParameter, searchQueryParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_SampleOrder_View> WorkOrderMng_function_GetSampleOrder(Nullable<int> userID, string searchQuery, MergeOption mergeOption)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var searchQueryParameter = searchQuery != null ?
                new ObjectParameter("SearchQuery", searchQuery) :
                new ObjectParameter("SearchQuery", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_SampleOrder_View>("WorkOrderMng_function_GetSampleOrder", mergeOption, userIDParameter, searchQueryParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_PreOrderWorkOrder_View> WorkOrderMng_function_SearchListPreOrder(string workOrderUD)
        {
            var workOrderUDParameter = workOrderUD != null ?
                new ObjectParameter("WorkOrderUD", workOrderUD) :
                new ObjectParameter("WorkOrderUD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_PreOrderWorkOrder_View>("WorkOrderMng_function_SearchListPreOrder", workOrderUDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_PreOrderWorkOrder_View> WorkOrderMng_function_SearchListPreOrder(string workOrderUD, MergeOption mergeOption)
        {
            var workOrderUDParameter = workOrderUD != null ?
                new ObjectParameter("WorkOrderUD", workOrderUD) :
                new ObjectParameter("WorkOrderUD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_PreOrderWorkOrder_View>("WorkOrderMng_function_SearchListPreOrder", mergeOption, workOrderUDParameter);
        }
    
        public virtual int WorkOrderMng_function_Insert_Production2WorkOrderCost(Nullable<int> workOrderID)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WorkOrderMng_function_Insert_Production2WorkOrderCost", workOrderIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_PreOrderWorkOrderManagement_View> WorkOrderMng_function_PreOrderWorkOrderManangement(Nullable<int> preOrderWorkOrderID)
        {
            var preOrderWorkOrderIDParameter = preOrderWorkOrderID.HasValue ?
                new ObjectParameter("preOrderWorkOrderID", preOrderWorkOrderID) :
                new ObjectParameter("preOrderWorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_PreOrderWorkOrderManagement_View>("WorkOrderMng_function_PreOrderWorkOrderManangement", preOrderWorkOrderIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_PreOrderWorkOrderManagement_View> WorkOrderMng_function_PreOrderWorkOrderManangement(Nullable<int> preOrderWorkOrderID, MergeOption mergeOption)
        {
            var preOrderWorkOrderIDParameter = preOrderWorkOrderID.HasValue ?
                new ObjectParameter("preOrderWorkOrderID", preOrderWorkOrderID) :
                new ObjectParameter("preOrderWorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_PreOrderWorkOrderManagement_View>("WorkOrderMng_function_PreOrderWorkOrderManangement", mergeOption, preOrderWorkOrderIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_PreOrderWorkOrderBaseOnManagement_View> WorkOrderMng_function_PreOrderWorkOrderBaseOnManagement(Nullable<int> workOrderID, Nullable<int> preOrderWorkOrderID)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("workOrderID", workOrderID) :
                new ObjectParameter("workOrderID", typeof(int));
    
            var preOrderWorkOrderIDParameter = preOrderWorkOrderID.HasValue ?
                new ObjectParameter("preOrderWorkOrderID", preOrderWorkOrderID) :
                new ObjectParameter("preOrderWorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_PreOrderWorkOrderBaseOnManagement_View>("WorkOrderMng_function_PreOrderWorkOrderBaseOnManagement", workOrderIDParameter, preOrderWorkOrderIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_PreOrderWorkOrderBaseOnManagement_View> WorkOrderMng_function_PreOrderWorkOrderBaseOnManagement(Nullable<int> workOrderID, Nullable<int> preOrderWorkOrderID, MergeOption mergeOption)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("workOrderID", workOrderID) :
                new ObjectParameter("workOrderID", typeof(int));
    
            var preOrderWorkOrderIDParameter = preOrderWorkOrderID.HasValue ?
                new ObjectParameter("preOrderWorkOrderID", preOrderWorkOrderID) :
                new ObjectParameter("preOrderWorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_PreOrderWorkOrderBaseOnManagement_View>("WorkOrderMng_function_PreOrderWorkOrderBaseOnManagement", mergeOption, workOrderIDParameter, preOrderWorkOrderIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_WorkOrderBaseOnManagement_View> WorkOrderMng_function_WorkOrderBaseOnManagement(Nullable<int> workOrderID, Nullable<int> preOrderWorkOrderID)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("workOrderID", workOrderID) :
                new ObjectParameter("workOrderID", typeof(int));
    
            var preOrderWorkOrderIDParameter = preOrderWorkOrderID.HasValue ?
                new ObjectParameter("preOrderWorkOrderID", preOrderWorkOrderID) :
                new ObjectParameter("preOrderWorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_WorkOrderBaseOnManagement_View>("WorkOrderMng_function_WorkOrderBaseOnManagement", workOrderIDParameter, preOrderWorkOrderIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_WorkOrderBaseOnManagement_View> WorkOrderMng_function_WorkOrderBaseOnManagement(Nullable<int> workOrderID, Nullable<int> preOrderWorkOrderID, MergeOption mergeOption)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("workOrderID", workOrderID) :
                new ObjectParameter("workOrderID", typeof(int));
    
            var preOrderWorkOrderIDParameter = preOrderWorkOrderID.HasValue ?
                new ObjectParameter("preOrderWorkOrderID", preOrderWorkOrderID) :
                new ObjectParameter("preOrderWorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_WorkOrderBaseOnManagement_View>("WorkOrderMng_function_WorkOrderBaseOnManagement", mergeOption, workOrderIDParameter, preOrderWorkOrderIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_HistoryTransferPreOrderToWorkOrder_View> WorkOrderMng_function_HistoryTransferPreOrderToWorkOrder(Nullable<int> workOrderID, Nullable<int> preOrderWorkOrderID)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("workOrderID", workOrderID) :
                new ObjectParameter("workOrderID", typeof(int));
    
            var preOrderWorkOrderIDParameter = preOrderWorkOrderID.HasValue ?
                new ObjectParameter("preOrderWorkOrderID", preOrderWorkOrderID) :
                new ObjectParameter("preOrderWorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_HistoryTransferPreOrderToWorkOrder_View>("WorkOrderMng_function_HistoryTransferPreOrderToWorkOrder", workOrderIDParameter, preOrderWorkOrderIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_HistoryTransferPreOrderToWorkOrder_View> WorkOrderMng_function_HistoryTransferPreOrderToWorkOrder(Nullable<int> workOrderID, Nullable<int> preOrderWorkOrderID, MergeOption mergeOption)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("workOrderID", workOrderID) :
                new ObjectParameter("workOrderID", typeof(int));
    
            var preOrderWorkOrderIDParameter = preOrderWorkOrderID.HasValue ?
                new ObjectParameter("preOrderWorkOrderID", preOrderWorkOrderID) :
                new ObjectParameter("preOrderWorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_HistoryTransferPreOrderToWorkOrder_View>("WorkOrderMng_function_HistoryTransferPreOrderToWorkOrder", mergeOption, workOrderIDParameter, preOrderWorkOrderIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> WorkOrderMng_function_GetTransferQuantity(Nullable<int> transferWorkOrderID)
        {
            var transferWorkOrderIDParameter = transferWorkOrderID.HasValue ?
                new ObjectParameter("transferWorkOrderID", transferWorkOrderID) :
                new ObjectParameter("transferWorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("WorkOrderMng_function_GetTransferQuantity", transferWorkOrderIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_function_TransferPreOrderWorkOrder_Result> WorkOrderMng_function_TransferPreOrderWorkOrder(Nullable<int> workOrderID, Nullable<int> preOrderWorkOrderID)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("workOrderID", workOrderID) :
                new ObjectParameter("workOrderID", typeof(int));
    
            var preOrderWorkOrderIDParameter = preOrderWorkOrderID.HasValue ?
                new ObjectParameter("preOrderWorkOrderID", preOrderWorkOrderID) :
                new ObjectParameter("preOrderWorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_function_TransferPreOrderWorkOrder_Result>("WorkOrderMng_function_TransferPreOrderWorkOrder", workOrderIDParameter, preOrderWorkOrderIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_function_TransferWorkOrder_Result> WorkOrderMng_function_TransferWorkOrder(Nullable<int> workOrderID)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("workOrderID", workOrderID) :
                new ObjectParameter("workOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_function_TransferWorkOrder_Result>("WorkOrderMng_function_TransferWorkOrder", workOrderIDParameter);
        }
    
        public virtual int WorkOrderMng_function_GeneratePreWorkOrder(Nullable<int> workOrderID, string createdDate, string yearMonth)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WorkOrderMng_function_GeneratePreWorkOrder", workOrderIDParameter, createdDateParameter, yearMonthParameter);
        }
    
        public virtual int WorkOrderMng_function_GenerateWorkOrder(Nullable<int> workOrderID, string createdDate, string yearMonth, string oneCharFactory)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            var oneCharFactoryParameter = oneCharFactory != null ?
                new ObjectParameter("OneCharFactory", oneCharFactory) :
                new ObjectParameter("OneCharFactory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WorkOrderMng_function_GenerateWorkOrder", workOrderIDParameter, createdDateParameter, yearMonthParameter, oneCharFactoryParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_WorkOrderChild_View> WorkOrderMng_function_WorkOrderChild(Nullable<int> workOrderID)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_WorkOrderChild_View>("WorkOrderMng_function_WorkOrderChild", workOrderIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_WorkOrderChild_View> WorkOrderMng_function_WorkOrderChild(Nullable<int> workOrderID, MergeOption mergeOption)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_WorkOrderChild_View>("WorkOrderMng_function_WorkOrderChild", mergeOption, workOrderIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_WorkOrderReportHeader_View> WorkOrderMng_function_WorkOrderReportHeader(Nullable<int> workOrderID)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_WorkOrderReportHeader_View>("WorkOrderMng_function_WorkOrderReportHeader", workOrderIDParameter);
        }
    
        public virtual ObjectResult<WorkOrderMng_WorkOrderReportHeader_View> WorkOrderMng_function_WorkOrderReportHeader(Nullable<int> workOrderID, MergeOption mergeOption)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkOrderMng_WorkOrderReportHeader_View>("WorkOrderMng_function_WorkOrderReportHeader", mergeOption, workOrderIDParameter);
        }
    
        public virtual ObjectResult<string> WorkOrderMng_function_GenerateWorkOrderUD(Nullable<int> workOrderID)
        {
            var workOrderIDParameter = workOrderID.HasValue ?
                new ObjectParameter("WorkOrderID", workOrderID) :
                new ObjectParameter("WorkOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("WorkOrderMng_function_GenerateWorkOrderUD", workOrderIDParameter);
        }
    }
}
