//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.PurchasingCreditNote.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PurchasingCreditNoteEntities : DbContext
    {
        public PurchasingCreditNoteEntities()
            : base("name=PurchasingCreditNoteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PurchasingCreditNoteDetail> PurchasingCreditNoteDetail { get; set; }
        public virtual DbSet<PurchasingCreditNoteExtendDetail> PurchasingCreditNoteExtendDetail { get; set; }
        public virtual DbSet<PurchasingCreditNoteSparepartDetail> PurchasingCreditNoteSparepartDetail { get; set; }
        public virtual DbSet<PurchasingCreditNoteMng_PurchasingCreditNote_View> PurchasingCreditNoteMng_PurchasingCreditNote_View { get; set; }
        public virtual DbSet<PurchasingCreditNoteMng_PurchasingCreditNoteDetail_View> PurchasingCreditNoteMng_PurchasingCreditNoteDetail_View { get; set; }
        public virtual DbSet<PurchasingCreditNoteMng_PurchasingCreditNoteExtendDetail_View> PurchasingCreditNoteMng_PurchasingCreditNoteExtendDetail_View { get; set; }
        public virtual DbSet<PurchasingCreditNoteMng_PurchasingCreditNoteSparepartDetail_View> PurchasingCreditNoteMng_PurchasingCreditNoteSparepartDetail_View { get; set; }
        public virtual DbSet<PurchasingInvoice_View> PurchasingCreditNoteMng_PurchasingInvoice_View { get; set; }
        public virtual DbSet<PurchasingInvoiceDetail_View> PurchasingCreditNoteMng_PurchasingInvoiceDetail_View { get; set; }
        public virtual DbSet<PurchasingInvoiceSparepartDetail_View> PurchasingCreditNoteMng_PurchasingInvoiceSparepartDetail_View { get; set; }
        public virtual DbSet<PurchasingCreditNote> PurchasingCreditNote { get; set; }
    
        public virtual ObjectResult<PurchasingInvoice_View> PurchasingCreditNoteMng_function_SearchPurchasingInvoice(Nullable<int> iRequesterID, string sortedBy, string sortedDirection, string invoiceQuerySearch)
        {
            var iRequesterIDParameter = iRequesterID.HasValue ?
                new ObjectParameter("iRequesterID", iRequesterID) :
                new ObjectParameter("iRequesterID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var invoiceQuerySearchParameter = invoiceQuerySearch != null ?
                new ObjectParameter("invoiceQuerySearch", invoiceQuerySearch) :
                new ObjectParameter("invoiceQuerySearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchasingInvoice_View>("PurchasingCreditNoteMng_function_SearchPurchasingInvoice", iRequesterIDParameter, sortedByParameter, sortedDirectionParameter, invoiceQuerySearchParameter);
        }
    
        public virtual ObjectResult<PurchasingInvoice_View> PurchasingCreditNoteMng_function_SearchPurchasingInvoice(Nullable<int> iRequesterID, string sortedBy, string sortedDirection, string invoiceQuerySearch, MergeOption mergeOption)
        {
            var iRequesterIDParameter = iRequesterID.HasValue ?
                new ObjectParameter("iRequesterID", iRequesterID) :
                new ObjectParameter("iRequesterID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var invoiceQuerySearchParameter = invoiceQuerySearch != null ?
                new ObjectParameter("invoiceQuerySearch", invoiceQuerySearch) :
                new ObjectParameter("invoiceQuerySearch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchasingInvoice_View>("PurchasingCreditNoteMng_function_SearchPurchasingInvoice", mergeOption, iRequesterIDParameter, sortedByParameter, sortedDirectionParameter, invoiceQuerySearchParameter);
        }
    
        public virtual ObjectResult<PurchasingCreditNoteMng_PurchasingCreditNote_View> PurchasingCreditNoteMng_function_SearchPurchasingCreditNote(Nullable<int> iRequesterID, string sortedBy, string sortedDirection, string invoiceNo, string bLNo, string supplierNM, string creditNoteNo, Nullable<int> factoryID)
        {
            var iRequesterIDParameter = iRequesterID.HasValue ?
                new ObjectParameter("iRequesterID", iRequesterID) :
                new ObjectParameter("iRequesterID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var bLNoParameter = bLNo != null ?
                new ObjectParameter("BLNo", bLNo) :
                new ObjectParameter("BLNo", typeof(string));
    
            var supplierNMParameter = supplierNM != null ?
                new ObjectParameter("SupplierNM", supplierNM) :
                new ObjectParameter("SupplierNM", typeof(string));
    
            var creditNoteNoParameter = creditNoteNo != null ?
                new ObjectParameter("CreditNoteNo", creditNoteNo) :
                new ObjectParameter("CreditNoteNo", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchasingCreditNoteMng_PurchasingCreditNote_View>("PurchasingCreditNoteMng_function_SearchPurchasingCreditNote", iRequesterIDParameter, sortedByParameter, sortedDirectionParameter, invoiceNoParameter, bLNoParameter, supplierNMParameter, creditNoteNoParameter, factoryIDParameter);
        }
    
        public virtual ObjectResult<PurchasingCreditNoteMng_PurchasingCreditNote_View> PurchasingCreditNoteMng_function_SearchPurchasingCreditNote(Nullable<int> iRequesterID, string sortedBy, string sortedDirection, string invoiceNo, string bLNo, string supplierNM, string creditNoteNo, Nullable<int> factoryID, MergeOption mergeOption)
        {
            var iRequesterIDParameter = iRequesterID.HasValue ?
                new ObjectParameter("iRequesterID", iRequesterID) :
                new ObjectParameter("iRequesterID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var bLNoParameter = bLNo != null ?
                new ObjectParameter("BLNo", bLNo) :
                new ObjectParameter("BLNo", typeof(string));
    
            var supplierNMParameter = supplierNM != null ?
                new ObjectParameter("SupplierNM", supplierNM) :
                new ObjectParameter("SupplierNM", typeof(string));
    
            var creditNoteNoParameter = creditNoteNo != null ?
                new ObjectParameter("CreditNoteNo", creditNoteNo) :
                new ObjectParameter("CreditNoteNo", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchasingCreditNoteMng_PurchasingCreditNote_View>("PurchasingCreditNoteMng_function_SearchPurchasingCreditNote", mergeOption, iRequesterIDParameter, sortedByParameter, sortedDirectionParameter, invoiceNoParameter, bLNoParameter, supplierNMParameter, creditNoteNoParameter, factoryIDParameter);
        }
    
        public virtual int PurchasingCreditNoteMng_function_SetStatus(Nullable<int> purchasingCreditNoteID, Nullable<int> confirmedBy, Nullable<bool> status)
        {
            var purchasingCreditNoteIDParameter = purchasingCreditNoteID.HasValue ?
                new ObjectParameter("PurchasingCreditNoteID", purchasingCreditNoteID) :
                new ObjectParameter("PurchasingCreditNoteID", typeof(int));
    
            var confirmedByParameter = confirmedBy.HasValue ?
                new ObjectParameter("ConfirmedBy", confirmedBy) :
                new ObjectParameter("ConfirmedBy", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurchasingCreditNoteMng_function_SetStatus", purchasingCreditNoteIDParameter, confirmedByParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PurchasingCreditNoteMng_function_CheckCreditNotePutInBalance(Nullable<int> purchasingInvoiceID, Nullable<int> factoryID, string season)
        {
            var purchasingInvoiceIDParameter = purchasingInvoiceID.HasValue ?
                new ObjectParameter("PurchasingInvoiceID", purchasingInvoiceID) :
                new ObjectParameter("PurchasingInvoiceID", typeof(int));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PurchasingCreditNoteMng_function_CheckCreditNotePutInBalance", purchasingInvoiceIDParameter, factoryIDParameter, seasonParameter);
        }
    }
}
