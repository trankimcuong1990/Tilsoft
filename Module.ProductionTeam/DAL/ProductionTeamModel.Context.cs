//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.ProductionTeam.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProductionTeamEntities : DbContext
    {
        public ProductionTeamEntities()
            : base("name=ProductionTeamEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ProductionTeam> ProductionTeam { get; set; }
        public virtual DbSet<ProductionTeam_ProductionTeam_View> ProductionTeam_ProductionTeam_View { get; set; }
        public virtual DbSet<ProductionTeam_ProductionTeamSearch_View> ProductionTeam_ProductionTeamSearch_View { get; set; }
    
        public virtual ObjectResult<ProductionTeam_ProductionTeamSearch_View> ProductionTeam_function_ProductionTeamSearchResult(string productionTeamUD, string productionTeamNM, Nullable<int> workCenterID, string companyID, string sortedBy, string sortedDirection)
        {
            var productionTeamUDParameter = productionTeamUD != null ?
                new ObjectParameter("ProductionTeamUD", productionTeamUD) :
                new ObjectParameter("ProductionTeamUD", typeof(string));
    
            var productionTeamNMParameter = productionTeamNM != null ?
                new ObjectParameter("ProductionTeamNM", productionTeamNM) :
                new ObjectParameter("ProductionTeamNM", typeof(string));
    
            var workCenterIDParameter = workCenterID.HasValue ?
                new ObjectParameter("WorkCenterID", workCenterID) :
                new ObjectParameter("WorkCenterID", typeof(int));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductionTeam_ProductionTeamSearch_View>("ProductionTeam_function_ProductionTeamSearchResult", productionTeamUDParameter, productionTeamNMParameter, workCenterIDParameter, companyIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ProductionTeam_ProductionTeamSearch_View> ProductionTeam_function_ProductionTeamSearchResult(string productionTeamUD, string productionTeamNM, Nullable<int> workCenterID, string companyID, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var productionTeamUDParameter = productionTeamUD != null ?
                new ObjectParameter("ProductionTeamUD", productionTeamUD) :
                new ObjectParameter("ProductionTeamUD", typeof(string));
    
            var productionTeamNMParameter = productionTeamNM != null ?
                new ObjectParameter("ProductionTeamNM", productionTeamNM) :
                new ObjectParameter("ProductionTeamNM", typeof(string));
    
            var workCenterIDParameter = workCenterID.HasValue ?
                new ObjectParameter("WorkCenterID", workCenterID) :
                new ObjectParameter("WorkCenterID", typeof(int));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductionTeam_ProductionTeamSearch_View>("ProductionTeam_function_ProductionTeamSearchResult", mergeOption, productionTeamUDParameter, productionTeamNMParameter, workCenterIDParameter, companyIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    }
}
