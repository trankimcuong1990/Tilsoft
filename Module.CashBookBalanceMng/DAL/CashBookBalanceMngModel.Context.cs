//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.CashBookBalanceMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CashBookBalanceMngEntities : DbContext
    {
        public CashBookBalanceMngEntities()
            : base("name=CashBookBalanceMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CashBook> CashBook { get; set; }
        public virtual DbSet<CashBookBalance> CashBookBalance { get; set; }
        public virtual DbSet<CashBookBalanceDetail> CashBookBalanceDetail { get; set; }
        public virtual DbSet<CashBookBalanceMng_CashBookBalance_View> CashBookBalanceMng_CashBookBalance_View { get; set; }
        public virtual DbSet<CashBookBalanceMng_CashBookBalanceDetail_View> CashBookBalanceMng_CashBookBalanceDetail_View { get; set; }
        public virtual DbSet<CashBookBalanceMng_CashBookBalanceDetailData_View> CashBookBalanceMng_CashBookBalanceDetailData_View { get; set; }
    
        public virtual ObjectResult<CashBookBalanceMng_CashBookBalance_View> CashBookBalanceMng_function_SearchCashBookBalance(Nullable<int> balanceMonth, Nullable<int> balanceYear, string sortedBy, string sortedDirection)
        {
            var balanceMonthParameter = balanceMonth.HasValue ?
                new ObjectParameter("BalanceMonth", balanceMonth) :
                new ObjectParameter("BalanceMonth", typeof(int));
    
            var balanceYearParameter = balanceYear.HasValue ?
                new ObjectParameter("BalanceYear", balanceYear) :
                new ObjectParameter("BalanceYear", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashBookBalanceMng_CashBookBalance_View>("CashBookBalanceMng_function_SearchCashBookBalance", balanceMonthParameter, balanceYearParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<CashBookBalanceMng_CashBookBalance_View> CashBookBalanceMng_function_SearchCashBookBalance(Nullable<int> balanceMonth, Nullable<int> balanceYear, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var balanceMonthParameter = balanceMonth.HasValue ?
                new ObjectParameter("BalanceMonth", balanceMonth) :
                new ObjectParameter("BalanceMonth", typeof(int));
    
            var balanceYearParameter = balanceYear.HasValue ?
                new ObjectParameter("BalanceYear", balanceYear) :
                new ObjectParameter("BalanceYear", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashBookBalanceMng_CashBookBalance_View>("CashBookBalanceMng_function_SearchCashBookBalance", mergeOption, balanceMonthParameter, balanceYearParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<CashBookBalanceMng_CashBookBalanceDetailData_View> CashBookBalanceMng_function_CloseEntryCashBookBalance(Nullable<int> month, Nullable<int> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashBookBalanceMng_CashBookBalanceDetailData_View>("CashBookBalanceMng_function_CloseEntryCashBookBalance", monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<CashBookBalanceMng_CashBookBalanceDetailData_View> CashBookBalanceMng_function_CloseEntryCashBookBalance(Nullable<int> month, Nullable<int> year, MergeOption mergeOption)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashBookBalanceMng_CashBookBalanceDetailData_View>("CashBookBalanceMng_function_CloseEntryCashBookBalance", mergeOption, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CashBookBalanceMng_function_CloseEntryCashBookBalance2(Nullable<int> month, Nullable<int> year, Nullable<int> userId)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CashBookBalanceMng_function_CloseEntryCashBookBalance2", monthParameter, yearParameter, userIdParameter);
        }
    }
}
