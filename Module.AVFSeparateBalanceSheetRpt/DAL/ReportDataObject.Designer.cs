//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Module.AVFSeparateBalanceSheetRpt.DAL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ReportDataObject")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ReportDataObject : global::System.Data.DataSet {
        
        private AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable tableAVFSeparateBalanceSheetRpt_function_GetReportData;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ReportDataObject() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ReportDataObject(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["AVFSeparateBalanceSheetRpt_function_GetReportData"] != null)) {
                    base.Tables.Add(new AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable(ds.Tables["AVFSeparateBalanceSheetRpt_function_GetReportData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable AVFSeparateBalanceSheetRpt_function_GetReportData {
            get {
                return this.tableAVFSeparateBalanceSheetRpt_function_GetReportData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ReportDataObject cln = ((ReportDataObject)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AVFSeparateBalanceSheetRpt_function_GetReportData"] != null)) {
                    base.Tables.Add(new AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable(ds.Tables["AVFSeparateBalanceSheetRpt_function_GetReportData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableAVFSeparateBalanceSheetRpt_function_GetReportData = ((AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable)(base.Tables["AVFSeparateBalanceSheetRpt_function_GetReportData"]));
            if ((initTable == true)) {
                if ((this.tableAVFSeparateBalanceSheetRpt_function_GetReportData != null)) {
                    this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ReportDataObject";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ReportDataObject.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAVFSeparateBalanceSheetRpt_function_GetReportData = new AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable();
            base.Tables.Add(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAVFSeparateBalanceSheetRpt_function_GetReportData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ReportDataObject ds = new ReportDataObject();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AVFSeparateBalanceSheetRpt_function_GetReportDataRowChangeEventHandler(object sender, AVFSeparateBalanceSheetRpt_function_GetReportDataRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable : global::System.Data.TypedTableBase<AVFSeparateBalanceSheetRpt_function_GetReportDataRow> {
            
            private global::System.Data.DataColumn columnCash;
            
            private global::System.Data.DataColumn columnCashEquivalents;
            
            private global::System.Data.DataColumn columnShortTermInvestment;
            
            private global::System.Data.DataColumn columnProvisionShortTermInvestment;
            
            private global::System.Data.DataColumn columnReceivablesFromDebitors;
            
            private global::System.Data.DataColumn columnDepositToCreditors;
            
            private global::System.Data.DataColumn columnShortTermInternalReceivables;
            
            private global::System.Data.DataColumn columnOtherReceivables;
            
            private global::System.Data.DataColumn columnProvisionForBadShortTermReceivables;
            
            private global::System.Data.DataColumn columnGoodsInStock;
            
            private global::System.Data.DataColumn columnProvisionForDevaluationOfGoodsInStock;
            
            private global::System.Data.DataColumn columnShortTermPrepaidExpenses;
            
            private global::System.Data.DataColumn columnVATTaxRefund;
            
            private global::System.Data.DataColumn columnTaxesAndOtherReceivablesFromTheState;
            
            private global::System.Data.DataColumn columnTangibleFixedAssetCosts;
            
            private global::System.Data.DataColumn columnCumulativeTangibleFixedAssetsDepreciation;
            
            private global::System.Data.DataColumn columnIntangibleFixedAssetsCosts;
            
            private global::System.Data.DataColumn columnCumulativeRealEstateInvestment;
            
            private global::System.Data.DataColumn columnConstructionInProgress;
            
            private global::System.Data.DataColumn columnShortTermPayablesToCreditors;
            
            private global::System.Data.DataColumn columnDepositFromDebitors;
            
            private global::System.Data.DataColumn columnTaxesAndOtherPayablesToTheState;
            
            private global::System.Data.DataColumn columnPayablesToEmployee;
            
            private global::System.Data.DataColumn columnPayableExpenses;
            
            private global::System.Data.DataColumn columnInternalPayables;
            
            private global::System.Data.DataColumn columnOtherShortTermPayables;
            
            private global::System.Data.DataColumn columnLongTermLoanAndLiabilities;
            
            private global::System.Data.DataColumn columnPaidInCapital;
            
            private global::System.Data.DataColumn columnLastUndistributedAfterTaxEarnings;
            
            private global::System.Data.DataColumn columnCurrentUndistributedAfterTaxEarnings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable() {
                this.TableName = "AVFSeparateBalanceSheetRpt_function_GetReportData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CashColumn {
                get {
                    return this.columnCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CashEquivalentsColumn {
                get {
                    return this.columnCashEquivalents;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortTermInvestmentColumn {
                get {
                    return this.columnShortTermInvestment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProvisionShortTermInvestmentColumn {
                get {
                    return this.columnProvisionShortTermInvestment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceivablesFromDebitorsColumn {
                get {
                    return this.columnReceivablesFromDebitors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepositToCreditorsColumn {
                get {
                    return this.columnDepositToCreditors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortTermInternalReceivablesColumn {
                get {
                    return this.columnShortTermInternalReceivables;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherReceivablesColumn {
                get {
                    return this.columnOtherReceivables;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProvisionForBadShortTermReceivablesColumn {
                get {
                    return this.columnProvisionForBadShortTermReceivables;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodsInStockColumn {
                get {
                    return this.columnGoodsInStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProvisionForDevaluationOfGoodsInStockColumn {
                get {
                    return this.columnProvisionForDevaluationOfGoodsInStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortTermPrepaidExpensesColumn {
                get {
                    return this.columnShortTermPrepaidExpenses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VATTaxRefundColumn {
                get {
                    return this.columnVATTaxRefund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxesAndOtherReceivablesFromTheStateColumn {
                get {
                    return this.columnTaxesAndOtherReceivablesFromTheState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TangibleFixedAssetCostsColumn {
                get {
                    return this.columnTangibleFixedAssetCosts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CumulativeTangibleFixedAssetsDepreciationColumn {
                get {
                    return this.columnCumulativeTangibleFixedAssetsDepreciation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IntangibleFixedAssetsCostsColumn {
                get {
                    return this.columnIntangibleFixedAssetsCosts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CumulativeRealEstateInvestmentColumn {
                get {
                    return this.columnCumulativeRealEstateInvestment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConstructionInProgressColumn {
                get {
                    return this.columnConstructionInProgress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortTermPayablesToCreditorsColumn {
                get {
                    return this.columnShortTermPayablesToCreditors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepositFromDebitorsColumn {
                get {
                    return this.columnDepositFromDebitors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxesAndOtherPayablesToTheStateColumn {
                get {
                    return this.columnTaxesAndOtherPayablesToTheState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayablesToEmployeeColumn {
                get {
                    return this.columnPayablesToEmployee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayableExpensesColumn {
                get {
                    return this.columnPayableExpenses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InternalPayablesColumn {
                get {
                    return this.columnInternalPayables;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherShortTermPayablesColumn {
                get {
                    return this.columnOtherShortTermPayables;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LongTermLoanAndLiabilitiesColumn {
                get {
                    return this.columnLongTermLoanAndLiabilities;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaidInCapitalColumn {
                get {
                    return this.columnPaidInCapital;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastUndistributedAfterTaxEarningsColumn {
                get {
                    return this.columnLastUndistributedAfterTaxEarnings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentUndistributedAfterTaxEarningsColumn {
                get {
                    return this.columnCurrentUndistributedAfterTaxEarnings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AVFSeparateBalanceSheetRpt_function_GetReportDataRow this[int index] {
                get {
                    return ((AVFSeparateBalanceSheetRpt_function_GetReportDataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AVFSeparateBalanceSheetRpt_function_GetReportDataRowChangeEventHandler AVFSeparateBalanceSheetRpt_function_GetReportDataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AVFSeparateBalanceSheetRpt_function_GetReportDataRowChangeEventHandler AVFSeparateBalanceSheetRpt_function_GetReportDataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AVFSeparateBalanceSheetRpt_function_GetReportDataRowChangeEventHandler AVFSeparateBalanceSheetRpt_function_GetReportDataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AVFSeparateBalanceSheetRpt_function_GetReportDataRowChangeEventHandler AVFSeparateBalanceSheetRpt_function_GetReportDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAVFSeparateBalanceSheetRpt_function_GetReportDataRow(AVFSeparateBalanceSheetRpt_function_GetReportDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AVFSeparateBalanceSheetRpt_function_GetReportDataRow AddAVFSeparateBalanceSheetRpt_function_GetReportDataRow(
                        decimal Cash, 
                        decimal CashEquivalents, 
                        decimal ShortTermInvestment, 
                        decimal ProvisionShortTermInvestment, 
                        decimal ReceivablesFromDebitors, 
                        decimal DepositToCreditors, 
                        decimal ShortTermInternalReceivables, 
                        decimal OtherReceivables, 
                        decimal ProvisionForBadShortTermReceivables, 
                        decimal GoodsInStock, 
                        decimal ProvisionForDevaluationOfGoodsInStock, 
                        decimal ShortTermPrepaidExpenses, 
                        decimal VATTaxRefund, 
                        decimal TaxesAndOtherReceivablesFromTheState, 
                        decimal TangibleFixedAssetCosts, 
                        decimal CumulativeTangibleFixedAssetsDepreciation, 
                        decimal IntangibleFixedAssetsCosts, 
                        decimal CumulativeRealEstateInvestment, 
                        decimal ConstructionInProgress, 
                        decimal ShortTermPayablesToCreditors, 
                        decimal DepositFromDebitors, 
                        decimal TaxesAndOtherPayablesToTheState, 
                        decimal PayablesToEmployee, 
                        decimal PayableExpenses, 
                        decimal InternalPayables, 
                        decimal OtherShortTermPayables, 
                        decimal LongTermLoanAndLiabilities, 
                        decimal PaidInCapital, 
                        decimal LastUndistributedAfterTaxEarnings, 
                        decimal CurrentUndistributedAfterTaxEarnings) {
                AVFSeparateBalanceSheetRpt_function_GetReportDataRow rowAVFSeparateBalanceSheetRpt_function_GetReportDataRow = ((AVFSeparateBalanceSheetRpt_function_GetReportDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Cash,
                        CashEquivalents,
                        ShortTermInvestment,
                        ProvisionShortTermInvestment,
                        ReceivablesFromDebitors,
                        DepositToCreditors,
                        ShortTermInternalReceivables,
                        OtherReceivables,
                        ProvisionForBadShortTermReceivables,
                        GoodsInStock,
                        ProvisionForDevaluationOfGoodsInStock,
                        ShortTermPrepaidExpenses,
                        VATTaxRefund,
                        TaxesAndOtherReceivablesFromTheState,
                        TangibleFixedAssetCosts,
                        CumulativeTangibleFixedAssetsDepreciation,
                        IntangibleFixedAssetsCosts,
                        CumulativeRealEstateInvestment,
                        ConstructionInProgress,
                        ShortTermPayablesToCreditors,
                        DepositFromDebitors,
                        TaxesAndOtherPayablesToTheState,
                        PayablesToEmployee,
                        PayableExpenses,
                        InternalPayables,
                        OtherShortTermPayables,
                        LongTermLoanAndLiabilities,
                        PaidInCapital,
                        LastUndistributedAfterTaxEarnings,
                        CurrentUndistributedAfterTaxEarnings};
                rowAVFSeparateBalanceSheetRpt_function_GetReportDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAVFSeparateBalanceSheetRpt_function_GetReportDataRow);
                return rowAVFSeparateBalanceSheetRpt_function_GetReportDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable cln = ((AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCash = base.Columns["Cash"];
                this.columnCashEquivalents = base.Columns["CashEquivalents"];
                this.columnShortTermInvestment = base.Columns["ShortTermInvestment"];
                this.columnProvisionShortTermInvestment = base.Columns["ProvisionShortTermInvestment"];
                this.columnReceivablesFromDebitors = base.Columns["ReceivablesFromDebitors"];
                this.columnDepositToCreditors = base.Columns["DepositToCreditors"];
                this.columnShortTermInternalReceivables = base.Columns["ShortTermInternalReceivables"];
                this.columnOtherReceivables = base.Columns["OtherReceivables"];
                this.columnProvisionForBadShortTermReceivables = base.Columns["ProvisionForBadShortTermReceivables"];
                this.columnGoodsInStock = base.Columns["GoodsInStock"];
                this.columnProvisionForDevaluationOfGoodsInStock = base.Columns["ProvisionForDevaluationOfGoodsInStock"];
                this.columnShortTermPrepaidExpenses = base.Columns["ShortTermPrepaidExpenses"];
                this.columnVATTaxRefund = base.Columns["VATTaxRefund"];
                this.columnTaxesAndOtherReceivablesFromTheState = base.Columns["TaxesAndOtherReceivablesFromTheState"];
                this.columnTangibleFixedAssetCosts = base.Columns["TangibleFixedAssetCosts"];
                this.columnCumulativeTangibleFixedAssetsDepreciation = base.Columns["CumulativeTangibleFixedAssetsDepreciation"];
                this.columnIntangibleFixedAssetsCosts = base.Columns["IntangibleFixedAssetsCosts"];
                this.columnCumulativeRealEstateInvestment = base.Columns["CumulativeRealEstateInvestment"];
                this.columnConstructionInProgress = base.Columns["ConstructionInProgress"];
                this.columnShortTermPayablesToCreditors = base.Columns["ShortTermPayablesToCreditors"];
                this.columnDepositFromDebitors = base.Columns["DepositFromDebitors"];
                this.columnTaxesAndOtherPayablesToTheState = base.Columns["TaxesAndOtherPayablesToTheState"];
                this.columnPayablesToEmployee = base.Columns["PayablesToEmployee"];
                this.columnPayableExpenses = base.Columns["PayableExpenses"];
                this.columnInternalPayables = base.Columns["InternalPayables"];
                this.columnOtherShortTermPayables = base.Columns["OtherShortTermPayables"];
                this.columnLongTermLoanAndLiabilities = base.Columns["LongTermLoanAndLiabilities"];
                this.columnPaidInCapital = base.Columns["PaidInCapital"];
                this.columnLastUndistributedAfterTaxEarnings = base.Columns["LastUndistributedAfterTaxEarnings"];
                this.columnCurrentUndistributedAfterTaxEarnings = base.Columns["CurrentUndistributedAfterTaxEarnings"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCash = new global::System.Data.DataColumn("Cash", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCash);
                this.columnCashEquivalents = new global::System.Data.DataColumn("CashEquivalents", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCashEquivalents);
                this.columnShortTermInvestment = new global::System.Data.DataColumn("ShortTermInvestment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortTermInvestment);
                this.columnProvisionShortTermInvestment = new global::System.Data.DataColumn("ProvisionShortTermInvestment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvisionShortTermInvestment);
                this.columnReceivablesFromDebitors = new global::System.Data.DataColumn("ReceivablesFromDebitors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivablesFromDebitors);
                this.columnDepositToCreditors = new global::System.Data.DataColumn("DepositToCreditors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositToCreditors);
                this.columnShortTermInternalReceivables = new global::System.Data.DataColumn("ShortTermInternalReceivables", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortTermInternalReceivables);
                this.columnOtherReceivables = new global::System.Data.DataColumn("OtherReceivables", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherReceivables);
                this.columnProvisionForBadShortTermReceivables = new global::System.Data.DataColumn("ProvisionForBadShortTermReceivables", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvisionForBadShortTermReceivables);
                this.columnGoodsInStock = new global::System.Data.DataColumn("GoodsInStock", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsInStock);
                this.columnProvisionForDevaluationOfGoodsInStock = new global::System.Data.DataColumn("ProvisionForDevaluationOfGoodsInStock", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvisionForDevaluationOfGoodsInStock);
                this.columnShortTermPrepaidExpenses = new global::System.Data.DataColumn("ShortTermPrepaidExpenses", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortTermPrepaidExpenses);
                this.columnVATTaxRefund = new global::System.Data.DataColumn("VATTaxRefund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATTaxRefund);
                this.columnTaxesAndOtherReceivablesFromTheState = new global::System.Data.DataColumn("TaxesAndOtherReceivablesFromTheState", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxesAndOtherReceivablesFromTheState);
                this.columnTangibleFixedAssetCosts = new global::System.Data.DataColumn("TangibleFixedAssetCosts", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTangibleFixedAssetCosts);
                this.columnCumulativeTangibleFixedAssetsDepreciation = new global::System.Data.DataColumn("CumulativeTangibleFixedAssetsDepreciation", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCumulativeTangibleFixedAssetsDepreciation);
                this.columnIntangibleFixedAssetsCosts = new global::System.Data.DataColumn("IntangibleFixedAssetsCosts", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntangibleFixedAssetsCosts);
                this.columnCumulativeRealEstateInvestment = new global::System.Data.DataColumn("CumulativeRealEstateInvestment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCumulativeRealEstateInvestment);
                this.columnConstructionInProgress = new global::System.Data.DataColumn("ConstructionInProgress", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstructionInProgress);
                this.columnShortTermPayablesToCreditors = new global::System.Data.DataColumn("ShortTermPayablesToCreditors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortTermPayablesToCreditors);
                this.columnDepositFromDebitors = new global::System.Data.DataColumn("DepositFromDebitors", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepositFromDebitors);
                this.columnTaxesAndOtherPayablesToTheState = new global::System.Data.DataColumn("TaxesAndOtherPayablesToTheState", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxesAndOtherPayablesToTheState);
                this.columnPayablesToEmployee = new global::System.Data.DataColumn("PayablesToEmployee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayablesToEmployee);
                this.columnPayableExpenses = new global::System.Data.DataColumn("PayableExpenses", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayableExpenses);
                this.columnInternalPayables = new global::System.Data.DataColumn("InternalPayables", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInternalPayables);
                this.columnOtherShortTermPayables = new global::System.Data.DataColumn("OtherShortTermPayables", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherShortTermPayables);
                this.columnLongTermLoanAndLiabilities = new global::System.Data.DataColumn("LongTermLoanAndLiabilities", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongTermLoanAndLiabilities);
                this.columnPaidInCapital = new global::System.Data.DataColumn("PaidInCapital", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidInCapital);
                this.columnLastUndistributedAfterTaxEarnings = new global::System.Data.DataColumn("LastUndistributedAfterTaxEarnings", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastUndistributedAfterTaxEarnings);
                this.columnCurrentUndistributedAfterTaxEarnings = new global::System.Data.DataColumn("CurrentUndistributedAfterTaxEarnings", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentUndistributedAfterTaxEarnings);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AVFSeparateBalanceSheetRpt_function_GetReportDataRow NewAVFSeparateBalanceSheetRpt_function_GetReportDataRow() {
                return ((AVFSeparateBalanceSheetRpt_function_GetReportDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AVFSeparateBalanceSheetRpt_function_GetReportDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AVFSeparateBalanceSheetRpt_function_GetReportDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AVFSeparateBalanceSheetRpt_function_GetReportDataRowChanged != null)) {
                    this.AVFSeparateBalanceSheetRpt_function_GetReportDataRowChanged(this, new AVFSeparateBalanceSheetRpt_function_GetReportDataRowChangeEvent(((AVFSeparateBalanceSheetRpt_function_GetReportDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AVFSeparateBalanceSheetRpt_function_GetReportDataRowChanging != null)) {
                    this.AVFSeparateBalanceSheetRpt_function_GetReportDataRowChanging(this, new AVFSeparateBalanceSheetRpt_function_GetReportDataRowChangeEvent(((AVFSeparateBalanceSheetRpt_function_GetReportDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AVFSeparateBalanceSheetRpt_function_GetReportDataRowDeleted != null)) {
                    this.AVFSeparateBalanceSheetRpt_function_GetReportDataRowDeleted(this, new AVFSeparateBalanceSheetRpt_function_GetReportDataRowChangeEvent(((AVFSeparateBalanceSheetRpt_function_GetReportDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AVFSeparateBalanceSheetRpt_function_GetReportDataRowDeleting != null)) {
                    this.AVFSeparateBalanceSheetRpt_function_GetReportDataRowDeleting(this, new AVFSeparateBalanceSheetRpt_function_GetReportDataRowChangeEvent(((AVFSeparateBalanceSheetRpt_function_GetReportDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAVFSeparateBalanceSheetRpt_function_GetReportDataRow(AVFSeparateBalanceSheetRpt_function_GetReportDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDataObject ds = new ReportDataObject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AVFSeparateBalanceSheetRpt_function_GetReportDataRow : global::System.Data.DataRow {
            
            private AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable tableAVFSeparateBalanceSheetRpt_function_GetReportData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AVFSeparateBalanceSheetRpt_function_GetReportDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAVFSeparateBalanceSheetRpt_function_GetReportData = ((AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Cash {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cash\' in table \'AVFSeparateBalanceSheetRpt_function_GetRepo" +
                                "rtData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CashEquivalents {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CashEquivalentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CashEquivalents\' in table \'AVFSeparateBalanceSheetRpt_funct" +
                                "ion_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CashEquivalentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ShortTermInvestment {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermInvestmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortTermInvestment\' in table \'AVFSeparateBalanceSheetRpt_f" +
                                "unction_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermInvestmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ProvisionShortTermInvestment {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ProvisionShortTermInvestmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvisionShortTermInvestment\' in table \'AVFSeparateBalanceS" +
                                "heetRpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ProvisionShortTermInvestmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReceivablesFromDebitors {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ReceivablesFromDebitorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivablesFromDebitors\' in table \'AVFSeparateBalanceSheetR" +
                                "pt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ReceivablesFromDebitorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DepositToCreditors {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.DepositToCreditorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepositToCreditors\' in table \'AVFSeparateBalanceSheetRpt_fu" +
                                "nction_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.DepositToCreditorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ShortTermInternalReceivables {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermInternalReceivablesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortTermInternalReceivables\' in table \'AVFSeparateBalanceS" +
                                "heetRpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermInternalReceivablesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OtherReceivables {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.OtherReceivablesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherReceivables\' in table \'AVFSeparateBalanceSheetRpt_func" +
                                "tion_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.OtherReceivablesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ProvisionForBadShortTermReceivables {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ProvisionForBadShortTermReceivablesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvisionForBadShortTermReceivables\' in table \'AVFSeparateB" +
                                "alanceSheetRpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ProvisionForBadShortTermReceivablesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GoodsInStock {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.GoodsInStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoodsInStock\' in table \'AVFSeparateBalanceSheetRpt_function" +
                                "_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.GoodsInStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ProvisionForDevaluationOfGoodsInStock {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ProvisionForDevaluationOfGoodsInStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvisionForDevaluationOfGoodsInStock\' in table \'AVFSeparat" +
                                "eBalanceSheetRpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ProvisionForDevaluationOfGoodsInStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ShortTermPrepaidExpenses {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermPrepaidExpensesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortTermPrepaidExpenses\' in table \'AVFSeparateBalanceSheet" +
                                "Rpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermPrepaidExpensesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VATTaxRefund {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.VATTaxRefundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATTaxRefund\' in table \'AVFSeparateBalanceSheetRpt_function" +
                                "_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.VATTaxRefundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TaxesAndOtherReceivablesFromTheState {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.TaxesAndOtherReceivablesFromTheStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxesAndOtherReceivablesFromTheState\' in table \'AVFSeparate" +
                                "BalanceSheetRpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.TaxesAndOtherReceivablesFromTheStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TangibleFixedAssetCosts {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.TangibleFixedAssetCostsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TangibleFixedAssetCosts\' in table \'AVFSeparateBalanceSheetR" +
                                "pt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.TangibleFixedAssetCostsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CumulativeTangibleFixedAssetsDepreciation {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CumulativeTangibleFixedAssetsDepreciationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CumulativeTangibleFixedAssetsDepreciation\' in table \'AVFSep" +
                                "arateBalanceSheetRpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CumulativeTangibleFixedAssetsDepreciationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal IntangibleFixedAssetsCosts {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.IntangibleFixedAssetsCostsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntangibleFixedAssetsCosts\' in table \'AVFSeparateBalanceShe" +
                                "etRpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.IntangibleFixedAssetsCostsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CumulativeRealEstateInvestment {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CumulativeRealEstateInvestmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CumulativeRealEstateInvestment\' in table \'AVFSeparateBalanc" +
                                "eSheetRpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CumulativeRealEstateInvestmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ConstructionInProgress {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ConstructionInProgressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConstructionInProgress\' in table \'AVFSeparateBalanceSheetRp" +
                                "t_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ConstructionInProgressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ShortTermPayablesToCreditors {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermPayablesToCreditorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortTermPayablesToCreditors\' in table \'AVFSeparateBalanceS" +
                                "heetRpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermPayablesToCreditorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DepositFromDebitors {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.DepositFromDebitorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepositFromDebitors\' in table \'AVFSeparateBalanceSheetRpt_f" +
                                "unction_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.DepositFromDebitorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TaxesAndOtherPayablesToTheState {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.TaxesAndOtherPayablesToTheStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxesAndOtherPayablesToTheState\' in table \'AVFSeparateBalan" +
                                "ceSheetRpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.TaxesAndOtherPayablesToTheStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PayablesToEmployee {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.PayablesToEmployeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayablesToEmployee\' in table \'AVFSeparateBalanceSheetRpt_fu" +
                                "nction_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.PayablesToEmployeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PayableExpenses {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.PayableExpensesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayableExpenses\' in table \'AVFSeparateBalanceSheetRpt_funct" +
                                "ion_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.PayableExpensesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal InternalPayables {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.InternalPayablesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InternalPayables\' in table \'AVFSeparateBalanceSheetRpt_func" +
                                "tion_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.InternalPayablesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OtherShortTermPayables {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.OtherShortTermPayablesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherShortTermPayables\' in table \'AVFSeparateBalanceSheetRp" +
                                "t_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.OtherShortTermPayablesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LongTermLoanAndLiabilities {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.LongTermLoanAndLiabilitiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongTermLoanAndLiabilities\' in table \'AVFSeparateBalanceShe" +
                                "etRpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.LongTermLoanAndLiabilitiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PaidInCapital {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.PaidInCapitalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidInCapital\' in table \'AVFSeparateBalanceSheetRpt_functio" +
                                "n_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.PaidInCapitalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LastUndistributedAfterTaxEarnings {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.LastUndistributedAfterTaxEarningsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastUndistributedAfterTaxEarnings\' in table \'AVFSeparateBal" +
                                "anceSheetRpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.LastUndistributedAfterTaxEarningsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CurrentUndistributedAfterTaxEarnings {
                get {
                    try {
                        return ((decimal)(this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CurrentUndistributedAfterTaxEarningsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentUndistributedAfterTaxEarnings\' in table \'AVFSeparate" +
                                "BalanceSheetRpt_function_GetReportData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CurrentUndistributedAfterTaxEarningsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCashNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCashNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCashEquivalentsNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CashEquivalentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCashEquivalentsNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CashEquivalentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortTermInvestmentNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermInvestmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortTermInvestmentNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermInvestmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProvisionShortTermInvestmentNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ProvisionShortTermInvestmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProvisionShortTermInvestmentNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ProvisionShortTermInvestmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceivablesFromDebitorsNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ReceivablesFromDebitorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceivablesFromDebitorsNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ReceivablesFromDebitorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepositToCreditorsNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.DepositToCreditorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepositToCreditorsNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.DepositToCreditorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortTermInternalReceivablesNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermInternalReceivablesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortTermInternalReceivablesNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermInternalReceivablesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherReceivablesNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.OtherReceivablesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherReceivablesNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.OtherReceivablesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProvisionForBadShortTermReceivablesNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ProvisionForBadShortTermReceivablesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProvisionForBadShortTermReceivablesNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ProvisionForBadShortTermReceivablesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGoodsInStockNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.GoodsInStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGoodsInStockNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.GoodsInStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProvisionForDevaluationOfGoodsInStockNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ProvisionForDevaluationOfGoodsInStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProvisionForDevaluationOfGoodsInStockNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ProvisionForDevaluationOfGoodsInStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortTermPrepaidExpensesNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermPrepaidExpensesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortTermPrepaidExpensesNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermPrepaidExpensesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVATTaxRefundNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.VATTaxRefundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVATTaxRefundNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.VATTaxRefundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxesAndOtherReceivablesFromTheStateNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.TaxesAndOtherReceivablesFromTheStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxesAndOtherReceivablesFromTheStateNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.TaxesAndOtherReceivablesFromTheStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTangibleFixedAssetCostsNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.TangibleFixedAssetCostsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTangibleFixedAssetCostsNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.TangibleFixedAssetCostsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCumulativeTangibleFixedAssetsDepreciationNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CumulativeTangibleFixedAssetsDepreciationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCumulativeTangibleFixedAssetsDepreciationNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CumulativeTangibleFixedAssetsDepreciationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIntangibleFixedAssetsCostsNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.IntangibleFixedAssetsCostsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIntangibleFixedAssetsCostsNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.IntangibleFixedAssetsCostsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCumulativeRealEstateInvestmentNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CumulativeRealEstateInvestmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCumulativeRealEstateInvestmentNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CumulativeRealEstateInvestmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConstructionInProgressNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ConstructionInProgressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConstructionInProgressNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ConstructionInProgressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortTermPayablesToCreditorsNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermPayablesToCreditorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortTermPayablesToCreditorsNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.ShortTermPayablesToCreditorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDepositFromDebitorsNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.DepositFromDebitorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDepositFromDebitorsNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.DepositFromDebitorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxesAndOtherPayablesToTheStateNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.TaxesAndOtherPayablesToTheStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTaxesAndOtherPayablesToTheStateNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.TaxesAndOtherPayablesToTheStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPayablesToEmployeeNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.PayablesToEmployeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPayablesToEmployeeNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.PayablesToEmployeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPayableExpensesNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.PayableExpensesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPayableExpensesNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.PayableExpensesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInternalPayablesNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.InternalPayablesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInternalPayablesNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.InternalPayablesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherShortTermPayablesNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.OtherShortTermPayablesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherShortTermPayablesNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.OtherShortTermPayablesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLongTermLoanAndLiabilitiesNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.LongTermLoanAndLiabilitiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLongTermLoanAndLiabilitiesNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.LongTermLoanAndLiabilitiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaidInCapitalNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.PaidInCapitalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaidInCapitalNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.PaidInCapitalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastUndistributedAfterTaxEarningsNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.LastUndistributedAfterTaxEarningsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastUndistributedAfterTaxEarningsNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.LastUndistributedAfterTaxEarningsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentUndistributedAfterTaxEarningsNull() {
                return this.IsNull(this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CurrentUndistributedAfterTaxEarningsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentUndistributedAfterTaxEarningsNull() {
                this[this.tableAVFSeparateBalanceSheetRpt_function_GetReportData.CurrentUndistributedAfterTaxEarningsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AVFSeparateBalanceSheetRpt_function_GetReportDataRowChangeEvent : global::System.EventArgs {
            
            private AVFSeparateBalanceSheetRpt_function_GetReportDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AVFSeparateBalanceSheetRpt_function_GetReportDataRowChangeEvent(AVFSeparateBalanceSheetRpt_function_GetReportDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AVFSeparateBalanceSheetRpt_function_GetReportDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Module.AVFSeparateBalanceSheetRpt.DAL.ReportDataObjectTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AVFSeparateBalanceSheetRpt_function_GetReportDataTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AVFSeparateBalanceSheetRpt_function_GetReportDataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AVFSeparateBalanceSheetRpt_function_GetReportData";
            tableMapping.ColumnMappings.Add("Cash", "Cash");
            tableMapping.ColumnMappings.Add("CashEquivalents", "CashEquivalents");
            tableMapping.ColumnMappings.Add("ShortTermInvestment", "ShortTermInvestment");
            tableMapping.ColumnMappings.Add("ProvisionShortTermInvestment", "ProvisionShortTermInvestment");
            tableMapping.ColumnMappings.Add("ReceivablesFromDebitors", "ReceivablesFromDebitors");
            tableMapping.ColumnMappings.Add("DepositToCreditors", "DepositToCreditors");
            tableMapping.ColumnMappings.Add("ShortTermInternalReceivables", "ShortTermInternalReceivables");
            tableMapping.ColumnMappings.Add("OtherReceivables", "OtherReceivables");
            tableMapping.ColumnMappings.Add("ProvisionForBadShortTermReceivables", "ProvisionForBadShortTermReceivables");
            tableMapping.ColumnMappings.Add("GoodsInStock", "GoodsInStock");
            tableMapping.ColumnMappings.Add("ProvisionForDevaluationOfGoodsInStock", "ProvisionForDevaluationOfGoodsInStock");
            tableMapping.ColumnMappings.Add("ShortTermPrepaidExpenses", "ShortTermPrepaidExpenses");
            tableMapping.ColumnMappings.Add("VATTaxRefund", "VATTaxRefund");
            tableMapping.ColumnMappings.Add("TaxesAndOtherReceivablesFromTheState", "TaxesAndOtherReceivablesFromTheState");
            tableMapping.ColumnMappings.Add("TangibleFixedAssetCosts", "TangibleFixedAssetCosts");
            tableMapping.ColumnMappings.Add("CumulativeTangibleFixedAssetsDepreciation", "CumulativeTangibleFixedAssetsDepreciation");
            tableMapping.ColumnMappings.Add("IntangibleFixedAssetsCosts", "IntangibleFixedAssetsCosts");
            tableMapping.ColumnMappings.Add("CumulativeRealEstateInvestment", "CumulativeRealEstateInvestment");
            tableMapping.ColumnMappings.Add("ConstructionInProgress", "ConstructionInProgress");
            tableMapping.ColumnMappings.Add("ShortTermPayablesToCreditors", "ShortTermPayablesToCreditors");
            tableMapping.ColumnMappings.Add("DepositFromDebitors", "DepositFromDebitors");
            tableMapping.ColumnMappings.Add("TaxesAndOtherPayablesToTheState", "TaxesAndOtherPayablesToTheState");
            tableMapping.ColumnMappings.Add("PayablesToEmployee", "PayablesToEmployee");
            tableMapping.ColumnMappings.Add("PayableExpenses", "PayableExpenses");
            tableMapping.ColumnMappings.Add("InternalPayables", "InternalPayables");
            tableMapping.ColumnMappings.Add("OtherShortTermPayables", "OtherShortTermPayables");
            tableMapping.ColumnMappings.Add("LongTermLoanAndLiabilities", "LongTermLoanAndLiabilities");
            tableMapping.ColumnMappings.Add("PaidInCapital", "PaidInCapital");
            tableMapping.ColumnMappings.Add("LastUndistributedAfterTaxEarnings", "LastUndistributedAfterTaxEarnings");
            tableMapping.ColumnMappings.Add("CurrentUndistributedAfterTaxEarnings", "CurrentUndistributedAfterTaxEarnings");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=RT;Initial Catalog=TILSOFT;Persist Security Info=True;User ID=sa;Mult" +
                "ipleActiveResultSets=True;Application Name=EntityFramework";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.AVFSeparateBalanceSheetRpt_function_GetReportData";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportDataObject.AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportDataObject.AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportDataObject.AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable dataTable = new ReportDataObject.AVFSeparateBalanceSheetRpt_function_GetReportDataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ReportDataObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ReportDataObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ReportDataObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ReportDataObject dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591