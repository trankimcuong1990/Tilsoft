//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.ReportStockList
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ReportStockListEntities : DbContext
    {
        public ReportStockListEntities()
            : base("name=ReportStockListEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<ReportMng_StockList_Reservation_View> ReportMng_StockList_Reservation_View { get; set; }
        public virtual DbSet<ReportMng_StockList_View> ReportMng_StockList_View { get; set; }
        public virtual DbSet<ReportMng_StockList_LoadingPlanDetail_View> ReportMng_StockList_LoadingPlanDetail_View { get; set; }
        public virtual DbSet<ReportMng_StockList_SaleOrderDetail_View> ReportMng_StockList_SaleOrderDetail_View { get; set; }
        public virtual DbSet<ReportMng_StockList_WarehouseImportDetail_View> ReportMng_StockList_WarehouseImportDetail_View { get; set; }
        public virtual DbSet<ReportMng_StockList_WarehousePickingListDetail_View> ReportMng_StockList_WarehousePickingListDetail_View { get; set; }
        public virtual DbSet<ReportMng_StockList_PhysicalStockByWarehouseArea_View> ReportMng_StockList_PhysicalStockByWarehouseArea_View { get; set; }
        public virtual DbSet<ReportMng_StockList_ProductSetEANCode_View> ReportMng_StockList_ProductSetEANCode_View { get; set; }
    
        public virtual ObjectResult<ReportMng_StockList_View> ReportMng_action_GetSearchStockList(string sortedBy, string sortedDirection, string productStatusIDs, Nullable<bool> isMatchedImage, Nullable<bool> isHaveImage, string articleCode, string description, Nullable<int> qnt40HC, Nullable<int> physicalQnt, Nullable<decimal> physicalQntIn40HC, string wareHouseAreaIDs, string qntPerWarehouseArea, Nullable<int> onSeaQnt, Nullable<int> tobeShippedQnt, Nullable<int> reservationQnt, Nullable<int> fTSQnt, Nullable<bool> isActiveFreeToSale, string eANCode, string freeToSaleCategoryIDs)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var productStatusIDsParameter = productStatusIDs != null ?
                new ObjectParameter("ProductStatusIDs", productStatusIDs) :
                new ObjectParameter("ProductStatusIDs", typeof(string));
    
            var isMatchedImageParameter = isMatchedImage.HasValue ?
                new ObjectParameter("IsMatchedImage", isMatchedImage) :
                new ObjectParameter("IsMatchedImage", typeof(bool));
    
            var isHaveImageParameter = isHaveImage.HasValue ?
                new ObjectParameter("IsHaveImage", isHaveImage) :
                new ObjectParameter("IsHaveImage", typeof(bool));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var qnt40HCParameter = qnt40HC.HasValue ?
                new ObjectParameter("Qnt40HC", qnt40HC) :
                new ObjectParameter("Qnt40HC", typeof(int));
    
            var physicalQntParameter = physicalQnt.HasValue ?
                new ObjectParameter("PhysicalQnt", physicalQnt) :
                new ObjectParameter("PhysicalQnt", typeof(int));
    
            var physicalQntIn40HCParameter = physicalQntIn40HC.HasValue ?
                new ObjectParameter("PhysicalQntIn40HC", physicalQntIn40HC) :
                new ObjectParameter("PhysicalQntIn40HC", typeof(decimal));
    
            var wareHouseAreaIDsParameter = wareHouseAreaIDs != null ?
                new ObjectParameter("WareHouseAreaIDs", wareHouseAreaIDs) :
                new ObjectParameter("WareHouseAreaIDs", typeof(string));
    
            var qntPerWarehouseAreaParameter = qntPerWarehouseArea != null ?
                new ObjectParameter("QntPerWarehouseArea", qntPerWarehouseArea) :
                new ObjectParameter("QntPerWarehouseArea", typeof(string));
    
            var onSeaQntParameter = onSeaQnt.HasValue ?
                new ObjectParameter("OnSeaQnt", onSeaQnt) :
                new ObjectParameter("OnSeaQnt", typeof(int));
    
            var tobeShippedQntParameter = tobeShippedQnt.HasValue ?
                new ObjectParameter("TobeShippedQnt", tobeShippedQnt) :
                new ObjectParameter("TobeShippedQnt", typeof(int));
    
            var reservationQntParameter = reservationQnt.HasValue ?
                new ObjectParameter("ReservationQnt", reservationQnt) :
                new ObjectParameter("ReservationQnt", typeof(int));
    
            var fTSQntParameter = fTSQnt.HasValue ?
                new ObjectParameter("FTSQnt", fTSQnt) :
                new ObjectParameter("FTSQnt", typeof(int));
    
            var isActiveFreeToSaleParameter = isActiveFreeToSale.HasValue ?
                new ObjectParameter("IsActiveFreeToSale", isActiveFreeToSale) :
                new ObjectParameter("IsActiveFreeToSale", typeof(bool));
    
            var eANCodeParameter = eANCode != null ?
                new ObjectParameter("EANCode", eANCode) :
                new ObjectParameter("EANCode", typeof(string));
    
            var freeToSaleCategoryIDsParameter = freeToSaleCategoryIDs != null ?
                new ObjectParameter("FreeToSaleCategoryIDs", freeToSaleCategoryIDs) :
                new ObjectParameter("FreeToSaleCategoryIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMng_StockList_View>("ReportMng_action_GetSearchStockList", sortedByParameter, sortedDirectionParameter, productStatusIDsParameter, isMatchedImageParameter, isHaveImageParameter, articleCodeParameter, descriptionParameter, qnt40HCParameter, physicalQntParameter, physicalQntIn40HCParameter, wareHouseAreaIDsParameter, qntPerWarehouseAreaParameter, onSeaQntParameter, tobeShippedQntParameter, reservationQntParameter, fTSQntParameter, isActiveFreeToSaleParameter, eANCodeParameter, freeToSaleCategoryIDsParameter);
        }
    
        public virtual ObjectResult<ReportMng_StockList_View> ReportMng_action_GetSearchStockList(string sortedBy, string sortedDirection, string productStatusIDs, Nullable<bool> isMatchedImage, Nullable<bool> isHaveImage, string articleCode, string description, Nullable<int> qnt40HC, Nullable<int> physicalQnt, Nullable<decimal> physicalQntIn40HC, string wareHouseAreaIDs, string qntPerWarehouseArea, Nullable<int> onSeaQnt, Nullable<int> tobeShippedQnt, Nullable<int> reservationQnt, Nullable<int> fTSQnt, Nullable<bool> isActiveFreeToSale, string eANCode, string freeToSaleCategoryIDs, MergeOption mergeOption)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var productStatusIDsParameter = productStatusIDs != null ?
                new ObjectParameter("ProductStatusIDs", productStatusIDs) :
                new ObjectParameter("ProductStatusIDs", typeof(string));
    
            var isMatchedImageParameter = isMatchedImage.HasValue ?
                new ObjectParameter("IsMatchedImage", isMatchedImage) :
                new ObjectParameter("IsMatchedImage", typeof(bool));
    
            var isHaveImageParameter = isHaveImage.HasValue ?
                new ObjectParameter("IsHaveImage", isHaveImage) :
                new ObjectParameter("IsHaveImage", typeof(bool));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var qnt40HCParameter = qnt40HC.HasValue ?
                new ObjectParameter("Qnt40HC", qnt40HC) :
                new ObjectParameter("Qnt40HC", typeof(int));
    
            var physicalQntParameter = physicalQnt.HasValue ?
                new ObjectParameter("PhysicalQnt", physicalQnt) :
                new ObjectParameter("PhysicalQnt", typeof(int));
    
            var physicalQntIn40HCParameter = physicalQntIn40HC.HasValue ?
                new ObjectParameter("PhysicalQntIn40HC", physicalQntIn40HC) :
                new ObjectParameter("PhysicalQntIn40HC", typeof(decimal));
    
            var wareHouseAreaIDsParameter = wareHouseAreaIDs != null ?
                new ObjectParameter("WareHouseAreaIDs", wareHouseAreaIDs) :
                new ObjectParameter("WareHouseAreaIDs", typeof(string));
    
            var qntPerWarehouseAreaParameter = qntPerWarehouseArea != null ?
                new ObjectParameter("QntPerWarehouseArea", qntPerWarehouseArea) :
                new ObjectParameter("QntPerWarehouseArea", typeof(string));
    
            var onSeaQntParameter = onSeaQnt.HasValue ?
                new ObjectParameter("OnSeaQnt", onSeaQnt) :
                new ObjectParameter("OnSeaQnt", typeof(int));
    
            var tobeShippedQntParameter = tobeShippedQnt.HasValue ?
                new ObjectParameter("TobeShippedQnt", tobeShippedQnt) :
                new ObjectParameter("TobeShippedQnt", typeof(int));
    
            var reservationQntParameter = reservationQnt.HasValue ?
                new ObjectParameter("ReservationQnt", reservationQnt) :
                new ObjectParameter("ReservationQnt", typeof(int));
    
            var fTSQntParameter = fTSQnt.HasValue ?
                new ObjectParameter("FTSQnt", fTSQnt) :
                new ObjectParameter("FTSQnt", typeof(int));
    
            var isActiveFreeToSaleParameter = isActiveFreeToSale.HasValue ?
                new ObjectParameter("IsActiveFreeToSale", isActiveFreeToSale) :
                new ObjectParameter("IsActiveFreeToSale", typeof(bool));
    
            var eANCodeParameter = eANCode != null ?
                new ObjectParameter("EANCode", eANCode) :
                new ObjectParameter("EANCode", typeof(string));
    
            var freeToSaleCategoryIDsParameter = freeToSaleCategoryIDs != null ?
                new ObjectParameter("FreeToSaleCategoryIDs", freeToSaleCategoryIDs) :
                new ObjectParameter("FreeToSaleCategoryIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportMng_StockList_View>("ReportMng_action_GetSearchStockList", mergeOption, sortedByParameter, sortedDirectionParameter, productStatusIDsParameter, isMatchedImageParameter, isHaveImageParameter, articleCodeParameter, descriptionParameter, qnt40HCParameter, physicalQntParameter, physicalQntIn40HCParameter, wareHouseAreaIDsParameter, qntPerWarehouseAreaParameter, onSeaQntParameter, tobeShippedQntParameter, reservationQntParameter, fTSQntParameter, isActiveFreeToSaleParameter, eANCodeParameter, freeToSaleCategoryIDsParameter);
        }
    }
}
