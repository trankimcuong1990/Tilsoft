//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.FactoryMng2.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FactoryMng2Entities : DbContext
    {
        public FactoryMng2Entities()
            : base("name=FactoryMng2Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FactoryMng2_Factory_View> FactoryMng2_Factory_View { get; set; }
        public virtual DbSet<FactoryMng2_FactorySearchResult_View> FactoryMng2_FactorySearchResult_View { get; set; }
        public virtual DbSet<FactoryMng2_FactoryImage_View> FactoryMng2_FactoryImage_View { get; set; }
        public virtual DbSet<FactoryMng2_FactoryInHouseTest_View> FactoryMng2_FactoryInHouseTest_View { get; set; }
        public virtual DbSet<FactoryDirector> FactoryDirector { get; set; }
        public virtual DbSet<FactoryImage> FactoryImage { get; set; }
        public virtual DbSet<FactoryInHouseTest> FactoryInHouseTest { get; set; }
        public virtual DbSet<FactoryResponsiblePerson> FactoryResponsiblePerson { get; set; }
        public virtual DbSet<FactorySampleTechnical> FactorySampleTechnical { get; set; }
        public virtual DbSet<FactoryExpectedCapacity> FactoryExpectedCapacity { get; set; }
        public virtual DbSet<FactoryMng2_FactoryExpectedCapacity_View> FactoryMng2_FactoryExpectedCapacity_View { get; set; }
        public virtual DbSet<FactoryMng2_MonthlyCapacityCurrentSeason_View> FactoryMng2_MonthlyCapacityCurrentSeason_View { get; set; }
        public virtual DbSet<FactoryMng2_MonthlyCapacityPreviousSeason_View> FactoryMng2_MonthlyCapacityPreviousSeason_View { get; set; }
        public virtual DbSet<FactoryMng2_FactoryDirector_View> FactoryMng2_FactoryDirector_View { get; set; }
        public virtual DbSet<FactoryMng2_FactoryResponsiblePerson_View> FactoryMng2_FactoryResponsiblePerson_View { get; set; }
        public virtual DbSet<FactoryMng2_FactorySampleTechnical_View> FactoryMng2_FactorySampleTechnical_View { get; set; }
        public virtual DbSet<FactoryTurnover> FactoryTurnover { get; set; }
        public virtual DbSet<FactoryMng2_FactoryTurnover_View> FactoryMng2_FactoryTurnover_View { get; set; }
        public virtual DbSet<FactoryCertificate> FactoryCertificate { get; set; }
        public virtual DbSet<Factory> Factory { get; set; }
        public virtual DbSet<FactoryMng2_List_FactoryRawMaterialSupplier> FactoryMng2_List_FactoryRawMaterialSupplier { get; set; }
        public virtual DbSet<FactoryRawMaterialSupplier> FactoryRawMaterialSupplier { get; set; }
        public virtual DbSet<FactoryMng2_FactoryRawMaterialSupplier_View> FactoryMng2_FactoryRawMaterialSupplier_View { get; set; }
        public virtual DbSet<FactoryMng2_Appointment_View> FactoryMng2_Appointment_View { get; set; }
        public virtual DbSet<FactoryCapacity> FactoryCapacity { get; set; }
        public virtual DbSet<FactoryMng2_FactoryCapacityByWeek_View> FactoryMng2_FactoryCapacityByWeek_View { get; set; }
        public virtual DbSet<FactoryMng2_WeekInforRange_View> FactoryMng2_WeekInforRange_View { get; set; }
        public virtual DbSet<FactoryMng2_FactoryCertificate_View> FactoryMng2_FactoryCertificate_View { get; set; }
        public virtual DbSet<FactoryMng2_List_Supplier> FactoryMng2_List_Supplier { get; set; }
        public virtual DbSet<FactoryMng2_FactorySupplier_View> FactoryMng2_FactorySupplier_View { get; set; }
        public virtual DbSet<FactorySupplier> FactorySupplier { get; set; }
        public virtual DbSet<FactoryMng2_FactoryOrderTurnover_View> FactoryMng2_FactoryOrderTurnover_View { get; set; }
        public virtual DbSet<FactoryGallery> FactoryGallery { get; set; }
        public virtual DbSet<FactoryMng2_FactoryGallery_View> FactoryMng2_FactoryGallery_View { get; set; }
        public virtual DbSet<FactoryBusinessCard> FactoryBusinessCard { get; set; }
        public virtual DbSet<FactoryMng2_FactoryBusinessCard_View> FactoryMng2_FactoryBusinessCard_View { get; set; }
        public virtual DbSet<FactoryContactQuickInfo> FactoryContactQuickInfo { get; set; }
        public virtual DbSet<FactoryMng2_FactoryContactQuickInfo_View> FactoryMng2_FactoryContactQuickInfo_View { get; set; }
        public virtual DbSet<FactoryMng2_FactoryExpectedCapacitySearch_View> FactoryMng2_FactoryExpectedCapacitySearch_View { get; set; }
        public virtual DbSet<FactoryDocument> FactoryDocument { get; set; }
        public virtual DbSet<FactoryMng2_FactoryDocument_View> FactoryMng2_FactoryDocument_View { get; set; }
        public virtual DbSet<FactoryMng2_FactoryProductGroup_View> FactoryMng2_FactoryProductGroup_View { get; set; }
        public virtual DbSet<SupportMng_ProductGroup_View> SupportMng_ProductGroup_View { get; set; }
        public virtual DbSet<FactoryProductGroup> FactoryProductGroup { get; set; }
        public virtual DbSet<FactoryMng2_Employee_View> FactoryMng2_Employee_View { get; set; }
        public virtual DbSet<FactoryManager> FactoryManager { get; set; }
        public virtual DbSet<FactoryMng2_FactoryManager_View> FactoryMng2_FactoryManager_View { get; set; }
        public virtual DbSet<FactoryPricing> FactoryPricing { get; set; }
        public virtual DbSet<FactoryMng2_FactoryPricing_View> FactoryMng2_FactoryPricing_View { get; set; }
        public virtual DbSet<Factory2Mng_PersonInCharge_View> Factory2Mng_PersonInCharge_View { get; set; }
        public virtual DbSet<SupportMng_User2_View> SupportMng_User2_View { get; set; }
    
        public virtual ObjectResult<FactoryMng2_FactorySearchResult_View> FactoryMng2_function_SearchFactory(Nullable<int> factoryID, string factoryOfficialName, string factoryName, Nullable<int> factoryRawMaterialID, Nullable<int> locationID, Nullable<int> userID, Nullable<bool> isActive, Nullable<bool> isPotential, string sortedBy, string sortedDirection)
        {
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var factoryOfficialNameParameter = factoryOfficialName != null ?
                new ObjectParameter("FactoryOfficialName", factoryOfficialName) :
                new ObjectParameter("FactoryOfficialName", typeof(string));
    
            var factoryNameParameter = factoryName != null ?
                new ObjectParameter("FactoryName", factoryName) :
                new ObjectParameter("FactoryName", typeof(string));
    
            var factoryRawMaterialIDParameter = factoryRawMaterialID.HasValue ?
                new ObjectParameter("FactoryRawMaterialID", factoryRawMaterialID) :
                new ObjectParameter("FactoryRawMaterialID", typeof(int));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var isPotentialParameter = isPotential.HasValue ?
                new ObjectParameter("IsPotential", isPotential) :
                new ObjectParameter("IsPotential", typeof(bool));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryMng2_FactorySearchResult_View>("FactoryMng2_function_SearchFactory", factoryIDParameter, factoryOfficialNameParameter, factoryNameParameter, factoryRawMaterialIDParameter, locationIDParameter, userIDParameter, isActiveParameter, isPotentialParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<FactoryMng2_FactorySearchResult_View> FactoryMng2_function_SearchFactory(Nullable<int> factoryID, string factoryOfficialName, string factoryName, Nullable<int> factoryRawMaterialID, Nullable<int> locationID, Nullable<int> userID, Nullable<bool> isActive, Nullable<bool> isPotential, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var factoryOfficialNameParameter = factoryOfficialName != null ?
                new ObjectParameter("FactoryOfficialName", factoryOfficialName) :
                new ObjectParameter("FactoryOfficialName", typeof(string));
    
            var factoryNameParameter = factoryName != null ?
                new ObjectParameter("FactoryName", factoryName) :
                new ObjectParameter("FactoryName", typeof(string));
    
            var factoryRawMaterialIDParameter = factoryRawMaterialID.HasValue ?
                new ObjectParameter("FactoryRawMaterialID", factoryRawMaterialID) :
                new ObjectParameter("FactoryRawMaterialID", typeof(int));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var isPotentialParameter = isPotential.HasValue ?
                new ObjectParameter("IsPotential", isPotential) :
                new ObjectParameter("IsPotential", typeof(bool));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryMng2_FactorySearchResult_View>("FactoryMng2_function_SearchFactory", mergeOption, factoryIDParameter, factoryOfficialNameParameter, factoryNameParameter, factoryRawMaterialIDParameter, locationIDParameter, userIDParameter, isActiveParameter, isPotentialParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<FactoryMng2_FactoryCapacityByWeek_View> FactoryMng2_function_FactoryCapacityByWeek(Nullable<int> factoryID)
        {
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryMng2_FactoryCapacityByWeek_View>("FactoryMng2_function_FactoryCapacityByWeek", factoryIDParameter);
        }
    
        public virtual ObjectResult<FactoryMng2_FactoryCapacityByWeek_View> FactoryMng2_function_FactoryCapacityByWeek(Nullable<int> factoryID, MergeOption mergeOption)
        {
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryMng2_FactoryCapacityByWeek_View>("FactoryMng2_function_FactoryCapacityByWeek", mergeOption, factoryIDParameter);
        }
    
        public virtual int FactoryMng2_InsertDataForFactoryCaspacity_Function()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FactoryMng2_InsertDataForFactoryCaspacity_Function");
        }
    
        public virtual ObjectResult<FactoryMng2_FactoryOrderTurnover_View> FactoryMng2_function_GetFactoryOrderTurnover(Nullable<int> factoryID, string season, string clientUD, string factoryOrderUD, string trackingStatusNM, string orderBy, string orderDirection)
        {
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var factoryOrderUDParameter = factoryOrderUD != null ?
                new ObjectParameter("FactoryOrderUD", factoryOrderUD) :
                new ObjectParameter("FactoryOrderUD", typeof(string));
    
            var trackingStatusNMParameter = trackingStatusNM != null ?
                new ObjectParameter("TrackingStatusNM", trackingStatusNM) :
                new ObjectParameter("TrackingStatusNM", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var orderDirectionParameter = orderDirection != null ?
                new ObjectParameter("OrderDirection", orderDirection) :
                new ObjectParameter("OrderDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryMng2_FactoryOrderTurnover_View>("FactoryMng2_function_GetFactoryOrderTurnover", factoryIDParameter, seasonParameter, clientUDParameter, factoryOrderUDParameter, trackingStatusNMParameter, orderByParameter, orderDirectionParameter);
        }
    
        public virtual ObjectResult<FactoryMng2_FactoryOrderTurnover_View> FactoryMng2_function_GetFactoryOrderTurnover(Nullable<int> factoryID, string season, string clientUD, string factoryOrderUD, string trackingStatusNM, string orderBy, string orderDirection, MergeOption mergeOption)
        {
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var factoryOrderUDParameter = factoryOrderUD != null ?
                new ObjectParameter("FactoryOrderUD", factoryOrderUD) :
                new ObjectParameter("FactoryOrderUD", typeof(string));
    
            var trackingStatusNMParameter = trackingStatusNM != null ?
                new ObjectParameter("TrackingStatusNM", trackingStatusNM) :
                new ObjectParameter("TrackingStatusNM", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var orderDirectionParameter = orderDirection != null ?
                new ObjectParameter("OrderDirection", orderDirection) :
                new ObjectParameter("OrderDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryMng2_FactoryOrderTurnover_View>("FactoryMng2_function_GetFactoryOrderTurnover", mergeOption, factoryIDParameter, seasonParameter, clientUDParameter, factoryOrderUDParameter, trackingStatusNMParameter, orderByParameter, orderDirectionParameter);
        }
    
        public virtual int Factory2Mng_function_AddFactoryPermissionNew(Nullable<int> factoryID)
        {
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Factory2Mng_function_AddFactoryPermissionNew", factoryIDParameter);
        }
    
        public virtual ObjectResult<Factory2Mng_PersonInCharge_View> Factory2Mng_function_getEmployeeBySupplier(Nullable<int> supplierID)
        {
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Factory2Mng_PersonInCharge_View>("Factory2Mng_function_getEmployeeBySupplier", supplierIDParameter);
        }
    
        public virtual ObjectResult<Factory2Mng_PersonInCharge_View> Factory2Mng_function_getEmployeeBySupplier(Nullable<int> supplierID, MergeOption mergeOption)
        {
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Factory2Mng_PersonInCharge_View>("Factory2Mng_function_getEmployeeBySupplier", mergeOption, supplierIDParameter);
        }
    }
}
