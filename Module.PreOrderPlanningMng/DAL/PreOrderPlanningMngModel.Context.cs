//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.PreOrderPlanningMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PreOrderPlanningMngEntities : DbContext
    {
        public PreOrderPlanningMngEntities()
            : base("name=PreOrderPlanningMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FactoryPlanning> FactoryPlanning { get; set; }
        public virtual DbSet<PreOrderPlanningMng_FactoryPlanning_View> PreOrderPlanningMng_FactoryPlanning_View { get; set; }
    
        public virtual int FactoryPlanningMng_function_AddFactoryPlanningData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FactoryPlanningMng_function_AddFactoryPlanningData");
        }
    
        public virtual ObjectResult<PreOrderPlanningMng_FactoryPlanning_View> PreOrderPlanningMng_function_FactoryPlanningSearchResult(string paramSeason, Nullable<int> paramFactoryID, string paramOrderBy, string paramOrderDirection)
        {
            var paramSeasonParameter = paramSeason != null ?
                new ObjectParameter("paramSeason", paramSeason) :
                new ObjectParameter("paramSeason", typeof(string));
    
            var paramFactoryIDParameter = paramFactoryID.HasValue ?
                new ObjectParameter("paramFactoryID", paramFactoryID) :
                new ObjectParameter("paramFactoryID", typeof(int));
    
            var paramOrderByParameter = paramOrderBy != null ?
                new ObjectParameter("paramOrderBy", paramOrderBy) :
                new ObjectParameter("paramOrderBy", typeof(string));
    
            var paramOrderDirectionParameter = paramOrderDirection != null ?
                new ObjectParameter("paramOrderDirection", paramOrderDirection) :
                new ObjectParameter("paramOrderDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PreOrderPlanningMng_FactoryPlanning_View>("PreOrderPlanningMng_function_FactoryPlanningSearchResult", paramSeasonParameter, paramFactoryIDParameter, paramOrderByParameter, paramOrderDirectionParameter);
        }
    
        public virtual ObjectResult<PreOrderPlanningMng_FactoryPlanning_View> PreOrderPlanningMng_function_FactoryPlanningSearchResult(string paramSeason, Nullable<int> paramFactoryID, string paramOrderBy, string paramOrderDirection, MergeOption mergeOption)
        {
            var paramSeasonParameter = paramSeason != null ?
                new ObjectParameter("paramSeason", paramSeason) :
                new ObjectParameter("paramSeason", typeof(string));
    
            var paramFactoryIDParameter = paramFactoryID.HasValue ?
                new ObjectParameter("paramFactoryID", paramFactoryID) :
                new ObjectParameter("paramFactoryID", typeof(int));
    
            var paramOrderByParameter = paramOrderBy != null ?
                new ObjectParameter("paramOrderBy", paramOrderBy) :
                new ObjectParameter("paramOrderBy", typeof(string));
    
            var paramOrderDirectionParameter = paramOrderDirection != null ?
                new ObjectParameter("paramOrderDirection", paramOrderDirection) :
                new ObjectParameter("paramOrderDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PreOrderPlanningMng_FactoryPlanning_View>("PreOrderPlanningMng_function_FactoryPlanningSearchResult", mergeOption, paramSeasonParameter, paramFactoryIDParameter, paramOrderByParameter, paramOrderDirectionParameter);
        }
    }
}
