//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.PurchasingPriceOverview2Rpt.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PurchasingPriceOverview2RptEntities : DbContext
    {
        public PurchasingPriceOverview2RptEntities()
            : base("name=PurchasingPriceOverview2RptEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PurchasingPriceOverview2Rpt_HTMLReportData_View> PurchasingPriceOverview2Rpt_HTMLReportData_View { get; set; }
    
        public virtual ObjectResult<PurchasingPriceOverview2Rpt_HTMLReportData_View> PurchasingPriceOverview2Rpt_function_GetHTMLReportData(Nullable<int> factoryID, string clientUD, string season, string sortedBy, string sortedDirection)
        {
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchasingPriceOverview2Rpt_HTMLReportData_View>("PurchasingPriceOverview2Rpt_function_GetHTMLReportData", factoryIDParameter, clientUDParameter, seasonParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<PurchasingPriceOverview2Rpt_HTMLReportData_View> PurchasingPriceOverview2Rpt_function_GetHTMLReportData(Nullable<int> factoryID, string clientUD, string season, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchasingPriceOverview2Rpt_HTMLReportData_View>("PurchasingPriceOverview2Rpt_function_GetHTMLReportData", mergeOption, factoryIDParameter, clientUDParameter, seasonParameter, sortedByParameter, sortedDirectionParameter);
        }
    }
}
