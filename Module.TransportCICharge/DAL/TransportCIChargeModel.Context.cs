//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.TransportCICharge.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TransportCIChargeEntities : DbContext
    {
        public TransportCIChargeEntities()
            : base("name=TransportCIChargeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TransportCICharge> TransportCICharge { get; set; }
        public virtual DbSet<TransportCIChargeDetail> TransportCIChargeDetail { get; set; }
        public virtual DbSet<TransportCICharge_TransportCICharge_View> TransportCICharge_TransportCICharge_View { get; set; }
        public virtual DbSet<TransportCICharge_TransportCIChargeDetail_View> TransportCICharge_TransportCIChargeDetail_View { get; set; }
        public virtual DbSet<TransportCICharge_TransportCIChargeSearch_View> TransportCICharge_TransportCIChargeSearch_View { get; set; }
        public virtual DbSet<SupportMng_BookingForClient_View> SupportMng_BookingForClient_View { get; set; }
        public virtual DbSet<SupportMng_Container_View> SupportMng_Container_View { get; set; }
        public virtual DbSet<TransportCICharge_PriceListClientCharge_View> TransportCICharge_PriceListClientCharge_View { get; set; }
    
        public virtual ObjectResult<TransportCICharge_TransportCIChargeSearch_View> TransportCICharge_function_TransportCIChargeSearch(string clientNM, string bookingUD, string eurofarInvoiceNo, string currencyID, string paymentTermID, string sortedBy, string sortedDirection)
        {
            var clientNMParameter = clientNM != null ?
                new ObjectParameter("ClientNM", clientNM) :
                new ObjectParameter("ClientNM", typeof(string));
    
            var bookingUDParameter = bookingUD != null ?
                new ObjectParameter("BookingUD", bookingUD) :
                new ObjectParameter("BookingUD", typeof(string));
    
            var eurofarInvoiceNoParameter = eurofarInvoiceNo != null ?
                new ObjectParameter("EurofarInvoiceNo", eurofarInvoiceNo) :
                new ObjectParameter("EurofarInvoiceNo", typeof(string));
    
            var currencyIDParameter = currencyID != null ?
                new ObjectParameter("CurrencyID", currencyID) :
                new ObjectParameter("CurrencyID", typeof(string));
    
            var paymentTermIDParameter = paymentTermID != null ?
                new ObjectParameter("PaymentTermID", paymentTermID) :
                new ObjectParameter("PaymentTermID", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransportCICharge_TransportCIChargeSearch_View>("TransportCICharge_function_TransportCIChargeSearch", clientNMParameter, bookingUDParameter, eurofarInvoiceNoParameter, currencyIDParameter, paymentTermIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<TransportCICharge_TransportCIChargeSearch_View> TransportCICharge_function_TransportCIChargeSearch(string clientNM, string bookingUD, string eurofarInvoiceNo, string currencyID, string paymentTermID, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var clientNMParameter = clientNM != null ?
                new ObjectParameter("ClientNM", clientNM) :
                new ObjectParameter("ClientNM", typeof(string));
    
            var bookingUDParameter = bookingUD != null ?
                new ObjectParameter("BookingUD", bookingUD) :
                new ObjectParameter("BookingUD", typeof(string));
    
            var eurofarInvoiceNoParameter = eurofarInvoiceNo != null ?
                new ObjectParameter("EurofarInvoiceNo", eurofarInvoiceNo) :
                new ObjectParameter("EurofarInvoiceNo", typeof(string));
    
            var currencyIDParameter = currencyID != null ?
                new ObjectParameter("CurrencyID", currencyID) :
                new ObjectParameter("CurrencyID", typeof(string));
    
            var paymentTermIDParameter = paymentTermID != null ?
                new ObjectParameter("PaymentTermID", paymentTermID) :
                new ObjectParameter("PaymentTermID", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransportCICharge_TransportCIChargeSearch_View>("TransportCICharge_function_TransportCIChargeSearch", mergeOption, clientNMParameter, bookingUDParameter, eurofarInvoiceNoParameter, currencyIDParameter, paymentTermIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<SupportMng_BookingForClient_View> SupportMng_function_QuickSearchBookingForClient(string bookingUD, string clientID, string sortedBy, string sortedDirection)
        {
            var bookingUDParameter = bookingUD != null ?
                new ObjectParameter("BookingUD", bookingUD) :
                new ObjectParameter("BookingUD", typeof(string));
    
            var clientIDParameter = clientID != null ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SupportMng_BookingForClient_View>("SupportMng_function_QuickSearchBookingForClient", bookingUDParameter, clientIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<SupportMng_BookingForClient_View> SupportMng_function_QuickSearchBookingForClient(string bookingUD, string clientID, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var bookingUDParameter = bookingUD != null ?
                new ObjectParameter("BookingUD", bookingUD) :
                new ObjectParameter("BookingUD", typeof(string));
    
            var clientIDParameter = clientID != null ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SupportMng_BookingForClient_View>("SupportMng_function_QuickSearchBookingForClient", mergeOption, bookingUDParameter, clientIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<SupportMng_Container_View> Support_function_DropDownContainer(string bLNo, string sortedBy, string sortedDirection)
        {
            var bLNoParameter = bLNo != null ?
                new ObjectParameter("BLNo", bLNo) :
                new ObjectParameter("BLNo", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SupportMng_Container_View>("Support_function_DropDownContainer", bLNoParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<SupportMng_Container_View> Support_function_DropDownContainer(string bLNo, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var bLNoParameter = bLNo != null ?
                new ObjectParameter("BLNo", bLNo) :
                new ObjectParameter("BLNo", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SupportMng_Container_View>("Support_function_DropDownContainer", mergeOption, bLNoParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<TransportCICharge_PriceListClientCharge_View> TransportCICharge_function_GetPricePerUnit(string clientID, string poLID, string eTD, string containerTypeID, string chargeTypeID)
        {
            var clientIDParameter = clientID != null ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(string));
    
            var poLIDParameter = poLID != null ?
                new ObjectParameter("PoLID", poLID) :
                new ObjectParameter("PoLID", typeof(string));
    
            var eTDParameter = eTD != null ?
                new ObjectParameter("ETD", eTD) :
                new ObjectParameter("ETD", typeof(string));
    
            var containerTypeIDParameter = containerTypeID != null ?
                new ObjectParameter("ContainerTypeID", containerTypeID) :
                new ObjectParameter("ContainerTypeID", typeof(string));
    
            var chargeTypeIDParameter = chargeTypeID != null ?
                new ObjectParameter("ChargeTypeID", chargeTypeID) :
                new ObjectParameter("ChargeTypeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransportCICharge_PriceListClientCharge_View>("TransportCICharge_function_GetPricePerUnit", clientIDParameter, poLIDParameter, eTDParameter, containerTypeIDParameter, chargeTypeIDParameter);
        }
    
        public virtual ObjectResult<TransportCICharge_PriceListClientCharge_View> TransportCICharge_function_GetPricePerUnit(string clientID, string poLID, string eTD, string containerTypeID, string chargeTypeID, MergeOption mergeOption)
        {
            var clientIDParameter = clientID != null ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(string));
    
            var poLIDParameter = poLID != null ?
                new ObjectParameter("PoLID", poLID) :
                new ObjectParameter("PoLID", typeof(string));
    
            var eTDParameter = eTD != null ?
                new ObjectParameter("ETD", eTD) :
                new ObjectParameter("ETD", typeof(string));
    
            var containerTypeIDParameter = containerTypeID != null ?
                new ObjectParameter("ContainerTypeID", containerTypeID) :
                new ObjectParameter("ContainerTypeID", typeof(string));
    
            var chargeTypeIDParameter = chargeTypeID != null ?
                new ObjectParameter("ChargeTypeID", chargeTypeID) :
                new ObjectParameter("ChargeTypeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransportCICharge_PriceListClientCharge_View>("TransportCICharge_function_GetPricePerUnit", mergeOption, clientIDParameter, poLIDParameter, eTDParameter, containerTypeIDParameter, chargeTypeIDParameter);
        }
    }
}
