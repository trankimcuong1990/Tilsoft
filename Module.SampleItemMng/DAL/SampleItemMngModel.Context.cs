//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.SampleItemMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SampleItemMngEntities : DbContext
    {
        public SampleItemMngEntities()
            : base("name=SampleItemMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SampleItemMng_SampleItemSearchResult_View> SampleItemMng_SampleItemSearchResult_View { get; set; }
        public virtual DbSet<SampleItemMng_SampleProductStatus_View> SampleItemMng_SampleProductStatus_View { get; set; }
        public virtual DbSet<SampleItemMng_SampleProduct_View> SampleItemMng_SampleProduct_View { get; set; }
        public virtual DbSet<SampleProduct> SampleProduct { get; set; }
        public virtual DbSet<FactoryBreakdown> FactoryBreakdown { get; set; }
        public virtual DbSet<FactoryBreakdownDetail> FactoryBreakdownDetail { get; set; }
        public virtual DbSet<SampleItemMng_FactoryBreakdown_View> SampleItemMng_FactoryBreakdown_View { get; set; }
        public virtual DbSet<SampleItemMng_FactoryBreakdownDetail_View> SampleItemMng_FactoryBreakdownDetail_View { get; set; }
        public virtual DbSet<SampleItemMng_SampleProgress_View> SampleItemMng_SampleProgress_View { get; set; }
        public virtual DbSet<SampleItemMng_SampleProgressImage_View> SampleItemMng_SampleProgressImage_View { get; set; }
        public virtual DbSet<SampleProgress> SampleProgress { get; set; }
        public virtual DbSet<SampleProgressImage> SampleProgressImage { get; set; }
        public virtual DbSet<SampleQARemark> SampleQARemark { get; set; }
        public virtual DbSet<SampleQARemarkImage> SampleQARemarkImage { get; set; }
        public virtual DbSet<SampleItemMng_SampleQARemark_View> SampleItemMng_SampleQARemark_View { get; set; }
        public virtual DbSet<SampleItemMng_SampleQARemarkImage_View> SampleItemMng_SampleQARemarkImage_View { get; set; }
        public virtual DbSet<SampleProductItem> SampleProductItem { get; set; }
    
        public virtual ObjectResult<SampleItemMng_SampleItemSearchResult_View> SampleItemMng_function_SearchSampleItem(string sampleOrderUD, string season, string clientUD, Nullable<int> sampleProductStatusID, Nullable<int> userID, string sortedBy, string sortedDirection, string sampleItemCode, string sampleItemName)
        {
            var sampleOrderUDParameter = sampleOrderUD != null ?
                new ObjectParameter("SampleOrderUD", sampleOrderUD) :
                new ObjectParameter("SampleOrderUD", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var sampleProductStatusIDParameter = sampleProductStatusID.HasValue ?
                new ObjectParameter("SampleProductStatusID", sampleProductStatusID) :
                new ObjectParameter("SampleProductStatusID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var sampleItemCodeParameter = sampleItemCode != null ?
                new ObjectParameter("SampleItemCode", sampleItemCode) :
                new ObjectParameter("SampleItemCode", typeof(string));
    
            var sampleItemNameParameter = sampleItemName != null ?
                new ObjectParameter("SampleItemName", sampleItemName) :
                new ObjectParameter("SampleItemName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SampleItemMng_SampleItemSearchResult_View>("SampleItemMng_function_SearchSampleItem", sampleOrderUDParameter, seasonParameter, clientUDParameter, sampleProductStatusIDParameter, userIDParameter, sortedByParameter, sortedDirectionParameter, sampleItemCodeParameter, sampleItemNameParameter);
        }
    
        public virtual ObjectResult<SampleItemMng_SampleItemSearchResult_View> SampleItemMng_function_SearchSampleItem(string sampleOrderUD, string season, string clientUD, Nullable<int> sampleProductStatusID, Nullable<int> userID, string sortedBy, string sortedDirection, string sampleItemCode, string sampleItemName, MergeOption mergeOption)
        {
            var sampleOrderUDParameter = sampleOrderUD != null ?
                new ObjectParameter("SampleOrderUD", sampleOrderUD) :
                new ObjectParameter("SampleOrderUD", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var sampleProductStatusIDParameter = sampleProductStatusID.HasValue ?
                new ObjectParameter("SampleProductStatusID", sampleProductStatusID) :
                new ObjectParameter("SampleProductStatusID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var sampleItemCodeParameter = sampleItemCode != null ?
                new ObjectParameter("SampleItemCode", sampleItemCode) :
                new ObjectParameter("SampleItemCode", typeof(string));
    
            var sampleItemNameParameter = sampleItemName != null ?
                new ObjectParameter("SampleItemName", sampleItemName) :
                new ObjectParameter("SampleItemName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SampleItemMng_SampleItemSearchResult_View>("SampleItemMng_function_SearchSampleItem", mergeOption, sampleOrderUDParameter, seasonParameter, clientUDParameter, sampleProductStatusIDParameter, userIDParameter, sortedByParameter, sortedDirectionParameter, sampleItemCodeParameter, sampleItemNameParameter);
        }
    
        public virtual int FW_Quotation_function_AddSampleItem(Nullable<int> sampleOrderID, Nullable<int> sampleProductID)
        {
            var sampleOrderIDParameter = sampleOrderID.HasValue ?
                new ObjectParameter("SampleOrderID", sampleOrderID) :
                new ObjectParameter("SampleOrderID", typeof(int));
    
            var sampleProductIDParameter = sampleProductID.HasValue ?
                new ObjectParameter("SampleProductID", sampleProductID) :
                new ObjectParameter("SampleProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FW_Quotation_function_AddSampleItem", sampleOrderIDParameter, sampleProductIDParameter);
        }
    }
}
