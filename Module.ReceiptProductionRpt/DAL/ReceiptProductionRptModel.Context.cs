//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.ReceiptProductionRpt.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ReceiptProductionRptEntities : DbContext
    {
        public ReceiptProductionRptEntities()
            : base("name=ReceiptProductionRptEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ReceiptProductionRpt_ReceiptProduction_View> ReceiptProductionRpt_ReceiptProduction_View { get; set; }
        public virtual DbSet<ReceiptProductionRpt_ReceiptProductionDetail_View> ReceiptProductionRpt_ReceiptProductionDetail_View { get; set; }
        public virtual DbSet<SupportMng_WorkOrder_View> SupportMng_WorkOrder_View { get; set; }
        public virtual DbSet<SupportMng_OPSequenceDetail_View> SupportMng_OPSequenceDetail_View { get; set; }
        public virtual DbSet<ReceiptProductionRpt_ReceivingNoteQuantity_View> ReceiptProductionRpt_ReceivingNoteQuantity_View { get; set; }
        public virtual DbSet<ReceivingNote> ReceivingNote { get; set; }
        public virtual DbSet<ReceivingNoteDetail> ReceivingNoteDetail { get; set; }
    
        public virtual ObjectResult<ReceiptProductionRpt_ReceiptProduction_View> ReceiptProductionRpt_function_SearchResult(string workOrderUD, Nullable<int> workCenterID, string sortedOrder, string sortedDirection)
        {
            var workOrderUDParameter = workOrderUD != null ?
                new ObjectParameter("WorkOrderUD", workOrderUD) :
                new ObjectParameter("WorkOrderUD", typeof(string));
    
            var workCenterIDParameter = workCenterID.HasValue ?
                new ObjectParameter("WorkCenterID", workCenterID) :
                new ObjectParameter("WorkCenterID", typeof(int));
    
            var sortedOrderParameter = sortedOrder != null ?
                new ObjectParameter("SortedOrder", sortedOrder) :
                new ObjectParameter("SortedOrder", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReceiptProductionRpt_ReceiptProduction_View>("ReceiptProductionRpt_function_SearchResult", workOrderUDParameter, workCenterIDParameter, sortedOrderParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ReceiptProductionRpt_ReceiptProduction_View> ReceiptProductionRpt_function_SearchResult(string workOrderUD, Nullable<int> workCenterID, string sortedOrder, string sortedDirection, MergeOption mergeOption)
        {
            var workOrderUDParameter = workOrderUD != null ?
                new ObjectParameter("WorkOrderUD", workOrderUD) :
                new ObjectParameter("WorkOrderUD", typeof(string));
    
            var workCenterIDParameter = workCenterID.HasValue ?
                new ObjectParameter("WorkCenterID", workCenterID) :
                new ObjectParameter("WorkCenterID", typeof(int));
    
            var sortedOrderParameter = sortedOrder != null ?
                new ObjectParameter("SortedOrder", sortedOrder) :
                new ObjectParameter("SortedOrder", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReceiptProductionRpt_ReceiptProduction_View>("ReceiptProductionRpt_function_SearchResult", mergeOption, workOrderUDParameter, workCenterIDParameter, sortedOrderParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ReceiptProductionRpt_ReceivingNoteQuantity_View> ReceiptProductionRpt_function_SearchResultProductionTeam(Nullable<int> productionTeamID, string sortedOrder, string sortedDirection)
        {
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("ProductionTeamID", productionTeamID) :
                new ObjectParameter("ProductionTeamID", typeof(int));
    
            var sortedOrderParameter = sortedOrder != null ?
                new ObjectParameter("SortedOrder", sortedOrder) :
                new ObjectParameter("SortedOrder", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReceiptProductionRpt_ReceivingNoteQuantity_View>("ReceiptProductionRpt_function_SearchResultProductionTeam", productionTeamIDParameter, sortedOrderParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ReceiptProductionRpt_ReceivingNoteQuantity_View> ReceiptProductionRpt_function_SearchResultProductionTeam(Nullable<int> productionTeamID, string sortedOrder, string sortedDirection, MergeOption mergeOption)
        {
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("ProductionTeamID", productionTeamID) :
                new ObjectParameter("ProductionTeamID", typeof(int));
    
            var sortedOrderParameter = sortedOrder != null ?
                new ObjectParameter("SortedOrder", sortedOrder) :
                new ObjectParameter("SortedOrder", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReceiptProductionRpt_ReceivingNoteQuantity_View>("ReceiptProductionRpt_function_SearchResultProductionTeam", mergeOption, productionTeamIDParameter, sortedOrderParameter, sortedDirectionParameter);
        }
    
        public virtual int ReceivingNoteMng_function_GenerateReceivingNoteUD(Nullable<int> receivingNoteID, Nullable<int> companyID, Nullable<int> receivingYear, Nullable<int> receivingMonth)
        {
            var receivingNoteIDParameter = receivingNoteID.HasValue ?
                new ObjectParameter("ReceivingNoteID", receivingNoteID) :
                new ObjectParameter("ReceivingNoteID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var receivingYearParameter = receivingYear.HasValue ?
                new ObjectParameter("ReceivingYear", receivingYear) :
                new ObjectParameter("ReceivingYear", typeof(int));
    
            var receivingMonthParameter = receivingMonth.HasValue ?
                new ObjectParameter("ReceivingMonth", receivingMonth) :
                new ObjectParameter("ReceivingMonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReceivingNoteMng_function_GenerateReceivingNoteUD", receivingNoteIDParameter, companyIDParameter, receivingYearParameter, receivingMonthParameter);
        }
    }
}
