//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.AnnualLeaveMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AnnualLeaveMngEntities : DbContext
    {
        public AnnualLeaveMngEntities()
            : base("name=AnnualLeaveMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AnnualLeaveTracking> AnnualLeaveTrackings { get; set; }
        public virtual DbSet<AnnualLeaveMng_AnnualLeaveStatus_View> AnnualLeaveMng_AnnualLeaveStatus_View { get; set; }
        public virtual DbSet<AnnualLeaveMng_AnnualLeaveType_View> AnnualLeaveMng_AnnualLeaveType_View { get; set; }
        public virtual DbSet<AnnualLeaveTrackingDetail> AnnualLeaveTrackingDetail { get; set; }
        public virtual DbSet<AnnualLeaveMng_AnnualLeaveTrackingDetail_View> AnnualLeaveMng_AnnualLeaveTrackingDetail_View { get; set; }
        public virtual DbSet<AnnualLeaveMng_Employee_View> AnnualLeaveMng_Employee_View { get; set; }
        public virtual DbSet<AnnualLeaveMng_Company_View> AnnualLeaveMng_Company_View { get; set; }
        public virtual DbSet<AnnualLeaveMng_AnnualLeaveTrackingDetailSearchResult_View> AnnualLeaveMng_AnnualLeaveTrackingDetailSearchResult_View { get; set; }
        public virtual DbSet<EmailNotificationMessage> EmailNotificationMessage { get; set; }
        public virtual DbSet<NotificationMessage> NotificationMessage { get; set; }
        public virtual DbSet<AnnualLeaveMng_Email_View> AnnualLeaveMng_Email_View { get; set; }
        public virtual DbSet<AnnualLeaveMng_AnnualLeaveTracking_View> AnnualLeaveMng_AnnualLeaveTracking_View { get; set; }
    
        public virtual ObjectResult<AnnualLeaveMng_AnnualLeaveTrackingDetailSearchResult_View> AnnualLeaveMng_function_SearchAnnualLeave(string employeeNM, Nullable<int> statusID, string companyNM, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> hasleft, string sortedBy, string sortedDirection)
        {
            var employeeNMParameter = employeeNM != null ?
                new ObjectParameter("EmployeeNM", employeeNM) :
                new ObjectParameter("EmployeeNM", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var companyNMParameter = companyNM != null ?
                new ObjectParameter("CompanyNM", companyNM) :
                new ObjectParameter("CompanyNM", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var hasleftParameter = hasleft.HasValue ?
                new ObjectParameter("Hasleft", hasleft) :
                new ObjectParameter("Hasleft", typeof(bool));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AnnualLeaveMng_AnnualLeaveTrackingDetailSearchResult_View>("AnnualLeaveMng_function_SearchAnnualLeave", employeeNMParameter, statusIDParameter, companyNMParameter, fromDateParameter, toDateParameter, hasleftParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<AnnualLeaveMng_AnnualLeaveTrackingDetailSearchResult_View> AnnualLeaveMng_function_SearchAnnualLeave(string employeeNM, Nullable<int> statusID, string companyNM, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> hasleft, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var employeeNMParameter = employeeNM != null ?
                new ObjectParameter("EmployeeNM", employeeNM) :
                new ObjectParameter("EmployeeNM", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var companyNMParameter = companyNM != null ?
                new ObjectParameter("CompanyNM", companyNM) :
                new ObjectParameter("CompanyNM", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var hasleftParameter = hasleft.HasValue ?
                new ObjectParameter("Hasleft", hasleft) :
                new ObjectParameter("Hasleft", typeof(bool));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AnnualLeaveMng_AnnualLeaveTrackingDetailSearchResult_View>("AnnualLeaveMng_function_SearchAnnualLeave", mergeOption, employeeNMParameter, statusIDParameter, companyNMParameter, fromDateParameter, toDateParameter, hasleftParameter, sortedByParameter, sortedDirectionParameter);
        }
    }
}
