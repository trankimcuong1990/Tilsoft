//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.FactorySalesOrderMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FactorySalesOrderMngEntities : DbContext
    {
        public FactorySalesOrderMngEntities()
            : base("name=FactorySalesOrderMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FactorySaleOrderMng_FactorySaleOrderAttachedFile_View> FactorySaleOrderMng_FactorySaleOrderAttachedFile_View { get; set; }
        public virtual DbSet<FactorySaleOrderMng_FactorySaleOrderDetail_View> FactorySaleOrderMng_FactorySaleOrderDetail_View { get; set; }
        public virtual DbSet<FactorySaleQuotationMng_FactorySaleQuotation_ListPaymentTearm_View> FactorySaleQuotationMng_FactorySaleQuotation_ListPaymentTearm_View { get; set; }
        public virtual DbSet<SupportMng_FactorySaleQuotationStatus_View> SupportMng_FactorySaleQuotationStatus_View { get; set; }
        public virtual DbSet<SupportMng_ShipmentToOption_View> SupportMng_ShipmentToOption_View { get; set; }
        public virtual DbSet<SupportMng_ShipmentTypeOption_View> SupportMng_ShipmentTypeOption_View { get; set; }
        public virtual DbSet<FactorySaleOrderAttachedFile> FactorySaleOrderAttachedFile { get; set; }
        public virtual DbSet<FactorySaleOrderDetail> FactorySaleOrderDetail { get; set; }
        public virtual DbSet<FactorySaleOrder> FactorySaleOrder { get; set; }
        public virtual DbSet<FactorySaleOrderMng_FactorySaleOrder_View> FactorySaleOrderMng_FactorySaleOrder_View { get; set; }
        public virtual DbSet<FactorySaleOrderMng_SearchResult_View> FactorySaleOrderMng_SearchResult_View { get; set; }
        public virtual DbSet<FactorySaleQuotationMng_FactorySaleQuotationSearchResult_View> FactorySaleQuotationMng_FactorySaleQuotationSearchResult_View { get; set; }
        public virtual DbSet<FactorySaleOrderMng_ListFactorySaleQuotion_View> FactorySaleOrderMng_ListFactorySaleQuotion_View { get; set; }
        public virtual DbSet<FactorySaleQuotationMng_Employee_View> FactorySaleQuotationMng_Employee_View { get; set; }
        public virtual DbSet<FactorySaleQuotationMng_FactorySaleQuotation_ClientContact_View> FactorySaleQuotationMng_FactorySaleQuotation_ClientContact_View { get; set; }
        public virtual DbSet<FactorySaleQuotationMng_FactorySaleQuotation_ListProductionItem_View> FactorySaleQuotationMng_FactorySaleQuotation_ListProductionItem_View { get; set; }
        public virtual DbSet<FactorySaleQuotationMng_FactorySaleQuotation_ListRawMaterial_View> FactorySaleQuotationMng_FactorySaleQuotation_ListRawMaterial_View { get; set; }
        public virtual DbSet<FactorySaleQuotationMng_FactorySaleQuotation_ListWarehouse_View> FactorySaleQuotationMng_FactorySaleQuotation_ListWarehouse_View { get; set; }
        public virtual DbSet<FactorySaleQuotationMng_TypeOfCurrency_View> FactorySaleQuotationMng_TypeOfCurrency_View { get; set; }
        public virtual DbSet<FactorySaleOrderMng_FilterSaleOrder_View> FactorySaleOrderMng_FilterSaleOrder_View { get; set; }
        public virtual DbSet<FactorySaleOrderMng_QuickSearchFactorySaleQuotation_View> FactorySaleOrderMng_QuickSearchFactorySaleQuotation_View { get; set; }
        public virtual DbSet<FactorySaleOrderMng_QuickSearchFactorySaleQuotationDetail_View> FactorySaleOrderMng_QuickSearchFactorySaleQuotationDetail_View { get; set; }
        public virtual DbSet<FactorySaleOrderMng_QuickSearhFactorySaleQuotationAttachedFile_View> FactorySaleOrderMng_QuickSearhFactorySaleQuotationAttachedFile_View { get; set; }
        public virtual DbSet<FactoryRawMaterialMng_SupplierContactQuickInfo_View> FactoryRawMaterialMng_SupplierContactQuickInfo_View { get; set; }
    
        public virtual ObjectResult<FactorySaleOrderMng_SearchResult_View> FactorySaleOrderMng_function_SearchResult(string factorySaleOrderUD, Nullable<int> factoryRawMaterialID, string factorySaleQuotationUD, Nullable<int> factorySaleOrderStatusID, Nullable<System.DateTime> postingDate, Nullable<System.DateTime> expectedPaidDate, Nullable<System.DateTime> documentDate, string sortedBy, string sortedDirection)
        {
            var factorySaleOrderUDParameter = factorySaleOrderUD != null ?
                new ObjectParameter("FactorySaleOrderUD", factorySaleOrderUD) :
                new ObjectParameter("FactorySaleOrderUD", typeof(string));
    
            var factoryRawMaterialIDParameter = factoryRawMaterialID.HasValue ?
                new ObjectParameter("FactoryRawMaterialID", factoryRawMaterialID) :
                new ObjectParameter("FactoryRawMaterialID", typeof(int));
    
            var factorySaleQuotationUDParameter = factorySaleQuotationUD != null ?
                new ObjectParameter("FactorySaleQuotationUD", factorySaleQuotationUD) :
                new ObjectParameter("FactorySaleQuotationUD", typeof(string));
    
            var factorySaleOrderStatusIDParameter = factorySaleOrderStatusID.HasValue ?
                new ObjectParameter("FactorySaleOrderStatusID", factorySaleOrderStatusID) :
                new ObjectParameter("FactorySaleOrderStatusID", typeof(int));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var expectedPaidDateParameter = expectedPaidDate.HasValue ?
                new ObjectParameter("ExpectedPaidDate", expectedPaidDate) :
                new ObjectParameter("ExpectedPaidDate", typeof(System.DateTime));
    
            var documentDateParameter = documentDate.HasValue ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(System.DateTime));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactorySaleOrderMng_SearchResult_View>("FactorySaleOrderMng_function_SearchResult", factorySaleOrderUDParameter, factoryRawMaterialIDParameter, factorySaleQuotationUDParameter, factorySaleOrderStatusIDParameter, postingDateParameter, expectedPaidDateParameter, documentDateParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<FactorySaleOrderMng_SearchResult_View> FactorySaleOrderMng_function_SearchResult(string factorySaleOrderUD, Nullable<int> factoryRawMaterialID, string factorySaleQuotationUD, Nullable<int> factorySaleOrderStatusID, Nullable<System.DateTime> postingDate, Nullable<System.DateTime> expectedPaidDate, Nullable<System.DateTime> documentDate, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var factorySaleOrderUDParameter = factorySaleOrderUD != null ?
                new ObjectParameter("FactorySaleOrderUD", factorySaleOrderUD) :
                new ObjectParameter("FactorySaleOrderUD", typeof(string));
    
            var factoryRawMaterialIDParameter = factoryRawMaterialID.HasValue ?
                new ObjectParameter("FactoryRawMaterialID", factoryRawMaterialID) :
                new ObjectParameter("FactoryRawMaterialID", typeof(int));
    
            var factorySaleQuotationUDParameter = factorySaleQuotationUD != null ?
                new ObjectParameter("FactorySaleQuotationUD", factorySaleQuotationUD) :
                new ObjectParameter("FactorySaleQuotationUD", typeof(string));
    
            var factorySaleOrderStatusIDParameter = factorySaleOrderStatusID.HasValue ?
                new ObjectParameter("FactorySaleOrderStatusID", factorySaleOrderStatusID) :
                new ObjectParameter("FactorySaleOrderStatusID", typeof(int));
    
            var postingDateParameter = postingDate.HasValue ?
                new ObjectParameter("PostingDate", postingDate) :
                new ObjectParameter("PostingDate", typeof(System.DateTime));
    
            var expectedPaidDateParameter = expectedPaidDate.HasValue ?
                new ObjectParameter("ExpectedPaidDate", expectedPaidDate) :
                new ObjectParameter("ExpectedPaidDate", typeof(System.DateTime));
    
            var documentDateParameter = documentDate.HasValue ?
                new ObjectParameter("DocumentDate", documentDate) :
                new ObjectParameter("DocumentDate", typeof(System.DateTime));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactorySaleOrderMng_SearchResult_View>("FactorySaleOrderMng_function_SearchResult", mergeOption, factorySaleOrderUDParameter, factoryRawMaterialIDParameter, factorySaleQuotationUDParameter, factorySaleOrderStatusIDParameter, postingDateParameter, expectedPaidDateParameter, documentDateParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual int FactorySaleOrderMng_function_GenerateFactorySaleOrderUD(Nullable<int> factorySaleOrderID, Nullable<int> factorySaleOrderYear, Nullable<int> factorySaleOrderMonth)
        {
            var factorySaleOrderIDParameter = factorySaleOrderID.HasValue ?
                new ObjectParameter("FactorySaleOrderID", factorySaleOrderID) :
                new ObjectParameter("FactorySaleOrderID", typeof(int));
    
            var factorySaleOrderYearParameter = factorySaleOrderYear.HasValue ?
                new ObjectParameter("FactorySaleOrderYear", factorySaleOrderYear) :
                new ObjectParameter("FactorySaleOrderYear", typeof(int));
    
            var factorySaleOrderMonthParameter = factorySaleOrderMonth.HasValue ?
                new ObjectParameter("FactorySaleOrderMonth", factorySaleOrderMonth) :
                new ObjectParameter("FactorySaleOrderMonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FactorySaleOrderMng_function_GenerateFactorySaleOrderUD", factorySaleOrderIDParameter, factorySaleOrderYearParameter, factorySaleOrderMonthParameter);
        }
    }
}
