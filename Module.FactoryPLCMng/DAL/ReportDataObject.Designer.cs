//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Module.FactoryPLCMng.DAL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ReportDataObject")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ReportDataObject : global::System.Data.DataSet {
        
        private PLCManagement2_PLCReport_ViewDataTable tablePLCManagement2_PLCReport_View;
        
        private PLCManagement2_PLCImageReport_ViewDataTable tablePLCManagement2_PLCImageReport_View;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ReportDataObject() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ReportDataObject(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PLCManagement2_PLCReport_View"] != null)) {
                    base.Tables.Add(new PLCManagement2_PLCReport_ViewDataTable(ds.Tables["PLCManagement2_PLCReport_View"]));
                }
                if ((ds.Tables["PLCManagement2_PLCImageReport_View"] != null)) {
                    base.Tables.Add(new PLCManagement2_PLCImageReport_ViewDataTable(ds.Tables["PLCManagement2_PLCImageReport_View"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PLCManagement2_PLCReport_ViewDataTable PLCManagement2_PLCReport_View {
            get {
                return this.tablePLCManagement2_PLCReport_View;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PLCManagement2_PLCImageReport_ViewDataTable PLCManagement2_PLCImageReport_View {
            get {
                return this.tablePLCManagement2_PLCImageReport_View;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ReportDataObject cln = ((ReportDataObject)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PLCManagement2_PLCReport_View"] != null)) {
                    base.Tables.Add(new PLCManagement2_PLCReport_ViewDataTable(ds.Tables["PLCManagement2_PLCReport_View"]));
                }
                if ((ds.Tables["PLCManagement2_PLCImageReport_View"] != null)) {
                    base.Tables.Add(new PLCManagement2_PLCImageReport_ViewDataTable(ds.Tables["PLCManagement2_PLCImageReport_View"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablePLCManagement2_PLCReport_View = ((PLCManagement2_PLCReport_ViewDataTable)(base.Tables["PLCManagement2_PLCReport_View"]));
            if ((initTable == true)) {
                if ((this.tablePLCManagement2_PLCReport_View != null)) {
                    this.tablePLCManagement2_PLCReport_View.InitVars();
                }
            }
            this.tablePLCManagement2_PLCImageReport_View = ((PLCManagement2_PLCImageReport_ViewDataTable)(base.Tables["PLCManagement2_PLCImageReport_View"]));
            if ((initTable == true)) {
                if ((this.tablePLCManagement2_PLCImageReport_View != null)) {
                    this.tablePLCManagement2_PLCImageReport_View.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ReportDataObject";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ReportDataObject.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePLCManagement2_PLCReport_View = new PLCManagement2_PLCReport_ViewDataTable();
            base.Tables.Add(this.tablePLCManagement2_PLCReport_View);
            this.tablePLCManagement2_PLCImageReport_View = new PLCManagement2_PLCImageReport_ViewDataTable();
            base.Tables.Add(this.tablePLCManagement2_PLCImageReport_View);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePLCManagement2_PLCReport_View() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePLCManagement2_PLCImageReport_View() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ReportDataObject ds = new ReportDataObject();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PLCManagement2_PLCReport_ViewRowChangeEventHandler(object sender, PLCManagement2_PLCReport_ViewRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PLCManagement2_PLCImageReport_ViewRowChangeEventHandler(object sender, PLCManagement2_PLCImageReport_ViewRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PLCManagement2_PLCReport_ViewDataTable : global::System.Data.TypedTableBase<PLCManagement2_PLCReport_ViewRow> {
            
            private global::System.Data.DataColumn columnPLCID;
            
            private global::System.Data.DataColumn columnFactoryUD;
            
            private global::System.Data.DataColumn columnCurrentUserName;
            
            private global::System.Data.DataColumn columnProfomaInvoiceNo;
            
            private global::System.Data.DataColumn columnBuyerUD;
            
            private global::System.Data.DataColumn columnArticleCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnMaterialNM;
            
            private global::System.Data.DataColumn columnMaterialWeight;
            
            private global::System.Data.DataColumn columnMaterialColorNM;
            
            private global::System.Data.DataColumn columnTypeLegs;
            
            private global::System.Data.DataColumn columnNetWeight;
            
            private global::System.Data.DataColumn columnOverallDimL;
            
            private global::System.Data.DataColumn columnOverallDimW;
            
            private global::System.Data.DataColumn columnOverallDimH;
            
            private global::System.Data.DataColumn columnSeatDimL;
            
            private global::System.Data.DataColumn columnSeatDimW;
            
            private global::System.Data.DataColumn columnSeatDimH;
            
            private global::System.Data.DataColumn columnArmDimL;
            
            private global::System.Data.DataColumn columnArmDimW;
            
            private global::System.Data.DataColumn columnArmDimH;
            
            private global::System.Data.DataColumn columnOtherDimL;
            
            private global::System.Data.DataColumn columnOtherDimW;
            
            private global::System.Data.DataColumn columnOtherDimH;
            
            private global::System.Data.DataColumn columnFrameMaterialNM;
            
            private global::System.Data.DataColumn columnFrameMaterialColorNM;
            
            private global::System.Data.DataColumn columnRating;
            
            private global::System.Data.DataColumn columnRatingComment;
            
            private global::System.Data.DataColumn columnRatorName;
            
            private global::System.Data.DataColumn columnRatedDate;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnCushionColorNM;
            
            private global::System.Data.DataColumn columnFabricWeight;
            
            private global::System.Data.DataColumn columnCushionBatchCode;
            
            private global::System.Data.DataColumn columnSeatCushionStuffing;
            
            private global::System.Data.DataColumn columnSeatCushionWeight;
            
            private global::System.Data.DataColumn columnSeatCushionParts;
            
            private global::System.Data.DataColumn columnSeatCushionFinishing;
            
            private global::System.Data.DataColumn columnCushionTypeNM;
            
            private global::System.Data.DataColumn columnBackCushionStuffing;
            
            private global::System.Data.DataColumn columnBackCushionWeight;
            
            private global::System.Data.DataColumn columnBackCushionParts;
            
            private global::System.Data.DataColumn columnBackCushionFinishing;
            
            private global::System.Data.DataColumn columnSeatCushionDimL;
            
            private global::System.Data.DataColumn columnSeatCushionDimW;
            
            private global::System.Data.DataColumn columnSeatCushionDimH;
            
            private global::System.Data.DataColumn columnBackCushionDimL;
            
            private global::System.Data.DataColumn columnBackCushionDimW;
            
            private global::System.Data.DataColumn columnBackCushionDimH;
            
            private global::System.Data.DataColumn columnCartonBoxDimL;
            
            private global::System.Data.DataColumn columnCartonBoxDimW;
            
            private global::System.Data.DataColumn columnCartonBoxDimH;
            
            private global::System.Data.DataColumn columnQntInBox;
            
            private global::System.Data.DataColumn columnCartonThickness;
            
            private global::System.Data.DataColumn columnGrossWeight;
            
            private global::System.Data.DataColumn columnConfirmerName;
            
            private global::System.Data.DataColumn columnConfirmedDate;
            
            private global::System.Data.DataColumn columnClientArticleCode;
            
            private global::System.Data.DataColumn columnClientArticleName;
            
            private global::System.Data.DataColumn columnClientOrderNumber;
            
            private global::System.Data.DataColumn columnClientEANCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCManagement2_PLCReport_ViewDataTable() {
                this.TableName = "PLCManagement2_PLCReport_View";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PLCManagement2_PLCReport_ViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PLCManagement2_PLCReport_ViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLCIDColumn {
                get {
                    return this.columnPLCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactoryUDColumn {
                get {
                    return this.columnFactoryUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentUserNameColumn {
                get {
                    return this.columnCurrentUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProfomaInvoiceNoColumn {
                get {
                    return this.columnProfomaInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BuyerUDColumn {
                get {
                    return this.columnBuyerUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArticleCodeColumn {
                get {
                    return this.columnArticleCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialNMColumn {
                get {
                    return this.columnMaterialNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialWeightColumn {
                get {
                    return this.columnMaterialWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaterialColorNMColumn {
                get {
                    return this.columnMaterialColorNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeLegsColumn {
                get {
                    return this.columnTypeLegs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetWeightColumn {
                get {
                    return this.columnNetWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverallDimLColumn {
                get {
                    return this.columnOverallDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverallDimWColumn {
                get {
                    return this.columnOverallDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverallDimHColumn {
                get {
                    return this.columnOverallDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatDimLColumn {
                get {
                    return this.columnSeatDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatDimWColumn {
                get {
                    return this.columnSeatDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatDimHColumn {
                get {
                    return this.columnSeatDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArmDimLColumn {
                get {
                    return this.columnArmDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArmDimWColumn {
                get {
                    return this.columnArmDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArmDimHColumn {
                get {
                    return this.columnArmDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherDimLColumn {
                get {
                    return this.columnOtherDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherDimWColumn {
                get {
                    return this.columnOtherDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherDimHColumn {
                get {
                    return this.columnOtherDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrameMaterialNMColumn {
                get {
                    return this.columnFrameMaterialNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FrameMaterialColorNMColumn {
                get {
                    return this.columnFrameMaterialColorNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RatingColumn {
                get {
                    return this.columnRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RatingCommentColumn {
                get {
                    return this.columnRatingComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RatorNameColumn {
                get {
                    return this.columnRatorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RatedDateColumn {
                get {
                    return this.columnRatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CushionColorNMColumn {
                get {
                    return this.columnCushionColorNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FabricWeightColumn {
                get {
                    return this.columnFabricWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CushionBatchCodeColumn {
                get {
                    return this.columnCushionBatchCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionStuffingColumn {
                get {
                    return this.columnSeatCushionStuffing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionWeightColumn {
                get {
                    return this.columnSeatCushionWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionPartsColumn {
                get {
                    return this.columnSeatCushionParts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionFinishingColumn {
                get {
                    return this.columnSeatCushionFinishing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CushionTypeNMColumn {
                get {
                    return this.columnCushionTypeNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionStuffingColumn {
                get {
                    return this.columnBackCushionStuffing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionWeightColumn {
                get {
                    return this.columnBackCushionWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionPartsColumn {
                get {
                    return this.columnBackCushionParts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionFinishingColumn {
                get {
                    return this.columnBackCushionFinishing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionDimLColumn {
                get {
                    return this.columnSeatCushionDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionDimWColumn {
                get {
                    return this.columnSeatCushionDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeatCushionDimHColumn {
                get {
                    return this.columnSeatCushionDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionDimLColumn {
                get {
                    return this.columnBackCushionDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionDimWColumn {
                get {
                    return this.columnBackCushionDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackCushionDimHColumn {
                get {
                    return this.columnBackCushionDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CartonBoxDimLColumn {
                get {
                    return this.columnCartonBoxDimL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CartonBoxDimWColumn {
                get {
                    return this.columnCartonBoxDimW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CartonBoxDimHColumn {
                get {
                    return this.columnCartonBoxDimH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QntInBoxColumn {
                get {
                    return this.columnQntInBox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CartonThicknessColumn {
                get {
                    return this.columnCartonThickness;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrossWeightColumn {
                get {
                    return this.columnGrossWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConfirmerNameColumn {
                get {
                    return this.columnConfirmerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConfirmedDateColumn {
                get {
                    return this.columnConfirmedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientArticleCodeColumn {
                get {
                    return this.columnClientArticleCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientArticleNameColumn {
                get {
                    return this.columnClientArticleName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientOrderNumberColumn {
                get {
                    return this.columnClientOrderNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientEANCodeColumn {
                get {
                    return this.columnClientEANCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCManagement2_PLCReport_ViewRow this[int index] {
                get {
                    return ((PLCManagement2_PLCReport_ViewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCManagement2_PLCReport_ViewRowChangeEventHandler PLCManagement2_PLCReport_ViewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCManagement2_PLCReport_ViewRowChangeEventHandler PLCManagement2_PLCReport_ViewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCManagement2_PLCReport_ViewRowChangeEventHandler PLCManagement2_PLCReport_ViewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCManagement2_PLCReport_ViewRowChangeEventHandler PLCManagement2_PLCReport_ViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPLCManagement2_PLCReport_ViewRow(PLCManagement2_PLCReport_ViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCManagement2_PLCReport_ViewRow AddPLCManagement2_PLCReport_ViewRow(
                        int PLCID, 
                        string FactoryUD, 
                        string CurrentUserName, 
                        string ProfomaInvoiceNo, 
                        string BuyerUD, 
                        string ArticleCode, 
                        string Description, 
                        int Quantity, 
                        string MaterialNM, 
                        string MaterialWeight, 
                        string MaterialColorNM, 
                        string TypeLegs, 
                        string NetWeight, 
                        string OverallDimL, 
                        string OverallDimW, 
                        string OverallDimH, 
                        string SeatDimL, 
                        string SeatDimW, 
                        string SeatDimH, 
                        string ArmDimL, 
                        string ArmDimW, 
                        string ArmDimH, 
                        string OtherDimL, 
                        string OtherDimW, 
                        string OtherDimH, 
                        string FrameMaterialNM, 
                        string FrameMaterialColorNM, 
                        string Rating, 
                        string RatingComment, 
                        string RatorName, 
                        string RatedDate, 
                        string Remark, 
                        string CushionColorNM, 
                        string FabricWeight, 
                        string CushionBatchCode, 
                        string SeatCushionStuffing, 
                        string SeatCushionWeight, 
                        string SeatCushionParts, 
                        string SeatCushionFinishing, 
                        string CushionTypeNM, 
                        string BackCushionStuffing, 
                        string BackCushionWeight, 
                        string BackCushionParts, 
                        string BackCushionFinishing, 
                        string SeatCushionDimL, 
                        string SeatCushionDimW, 
                        string SeatCushionDimH, 
                        string BackCushionDimL, 
                        string BackCushionDimW, 
                        string BackCushionDimH, 
                        string CartonBoxDimL, 
                        string CartonBoxDimW, 
                        string CartonBoxDimH, 
                        string QntInBox, 
                        string CartonThickness, 
                        string GrossWeight, 
                        string ConfirmerName, 
                        string ConfirmedDate, 
                        string ClientArticleCode, 
                        string ClientArticleName, 
                        string ClientOrderNumber, 
                        string ClientEANCode) {
                PLCManagement2_PLCReport_ViewRow rowPLCManagement2_PLCReport_ViewRow = ((PLCManagement2_PLCReport_ViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PLCID,
                        FactoryUD,
                        CurrentUserName,
                        ProfomaInvoiceNo,
                        BuyerUD,
                        ArticleCode,
                        Description,
                        Quantity,
                        MaterialNM,
                        MaterialWeight,
                        MaterialColorNM,
                        TypeLegs,
                        NetWeight,
                        OverallDimL,
                        OverallDimW,
                        OverallDimH,
                        SeatDimL,
                        SeatDimW,
                        SeatDimH,
                        ArmDimL,
                        ArmDimW,
                        ArmDimH,
                        OtherDimL,
                        OtherDimW,
                        OtherDimH,
                        FrameMaterialNM,
                        FrameMaterialColorNM,
                        Rating,
                        RatingComment,
                        RatorName,
                        RatedDate,
                        Remark,
                        CushionColorNM,
                        FabricWeight,
                        CushionBatchCode,
                        SeatCushionStuffing,
                        SeatCushionWeight,
                        SeatCushionParts,
                        SeatCushionFinishing,
                        CushionTypeNM,
                        BackCushionStuffing,
                        BackCushionWeight,
                        BackCushionParts,
                        BackCushionFinishing,
                        SeatCushionDimL,
                        SeatCushionDimW,
                        SeatCushionDimH,
                        BackCushionDimL,
                        BackCushionDimW,
                        BackCushionDimH,
                        CartonBoxDimL,
                        CartonBoxDimW,
                        CartonBoxDimH,
                        QntInBox,
                        CartonThickness,
                        GrossWeight,
                        ConfirmerName,
                        ConfirmedDate,
                        ClientArticleCode,
                        ClientArticleName,
                        ClientOrderNumber,
                        ClientEANCode};
                rowPLCManagement2_PLCReport_ViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPLCManagement2_PLCReport_ViewRow);
                return rowPLCManagement2_PLCReport_ViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCManagement2_PLCReport_ViewRow FindByPLCID(int PLCID) {
                return ((PLCManagement2_PLCReport_ViewRow)(this.Rows.Find(new object[] {
                            PLCID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PLCManagement2_PLCReport_ViewDataTable cln = ((PLCManagement2_PLCReport_ViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PLCManagement2_PLCReport_ViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPLCID = base.Columns["PLCID"];
                this.columnFactoryUD = base.Columns["FactoryUD"];
                this.columnCurrentUserName = base.Columns["CurrentUserName"];
                this.columnProfomaInvoiceNo = base.Columns["ProfomaInvoiceNo"];
                this.columnBuyerUD = base.Columns["BuyerUD"];
                this.columnArticleCode = base.Columns["ArticleCode"];
                this.columnDescription = base.Columns["Description"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnMaterialNM = base.Columns["MaterialNM"];
                this.columnMaterialWeight = base.Columns["MaterialWeight"];
                this.columnMaterialColorNM = base.Columns["MaterialColorNM"];
                this.columnTypeLegs = base.Columns["TypeLegs"];
                this.columnNetWeight = base.Columns["NetWeight"];
                this.columnOverallDimL = base.Columns["OverallDimL"];
                this.columnOverallDimW = base.Columns["OverallDimW"];
                this.columnOverallDimH = base.Columns["OverallDimH"];
                this.columnSeatDimL = base.Columns["SeatDimL"];
                this.columnSeatDimW = base.Columns["SeatDimW"];
                this.columnSeatDimH = base.Columns["SeatDimH"];
                this.columnArmDimL = base.Columns["ArmDimL"];
                this.columnArmDimW = base.Columns["ArmDimW"];
                this.columnArmDimH = base.Columns["ArmDimH"];
                this.columnOtherDimL = base.Columns["OtherDimL"];
                this.columnOtherDimW = base.Columns["OtherDimW"];
                this.columnOtherDimH = base.Columns["OtherDimH"];
                this.columnFrameMaterialNM = base.Columns["FrameMaterialNM"];
                this.columnFrameMaterialColorNM = base.Columns["FrameMaterialColorNM"];
                this.columnRating = base.Columns["Rating"];
                this.columnRatingComment = base.Columns["RatingComment"];
                this.columnRatorName = base.Columns["RatorName"];
                this.columnRatedDate = base.Columns["RatedDate"];
                this.columnRemark = base.Columns["Remark"];
                this.columnCushionColorNM = base.Columns["CushionColorNM"];
                this.columnFabricWeight = base.Columns["FabricWeight"];
                this.columnCushionBatchCode = base.Columns["CushionBatchCode"];
                this.columnSeatCushionStuffing = base.Columns["SeatCushionStuffing"];
                this.columnSeatCushionWeight = base.Columns["SeatCushionWeight"];
                this.columnSeatCushionParts = base.Columns["SeatCushionParts"];
                this.columnSeatCushionFinishing = base.Columns["SeatCushionFinishing"];
                this.columnCushionTypeNM = base.Columns["CushionTypeNM"];
                this.columnBackCushionStuffing = base.Columns["BackCushionStuffing"];
                this.columnBackCushionWeight = base.Columns["BackCushionWeight"];
                this.columnBackCushionParts = base.Columns["BackCushionParts"];
                this.columnBackCushionFinishing = base.Columns["BackCushionFinishing"];
                this.columnSeatCushionDimL = base.Columns["SeatCushionDimL"];
                this.columnSeatCushionDimW = base.Columns["SeatCushionDimW"];
                this.columnSeatCushionDimH = base.Columns["SeatCushionDimH"];
                this.columnBackCushionDimL = base.Columns["BackCushionDimL"];
                this.columnBackCushionDimW = base.Columns["BackCushionDimW"];
                this.columnBackCushionDimH = base.Columns["BackCushionDimH"];
                this.columnCartonBoxDimL = base.Columns["CartonBoxDimL"];
                this.columnCartonBoxDimW = base.Columns["CartonBoxDimW"];
                this.columnCartonBoxDimH = base.Columns["CartonBoxDimH"];
                this.columnQntInBox = base.Columns["QntInBox"];
                this.columnCartonThickness = base.Columns["CartonThickness"];
                this.columnGrossWeight = base.Columns["GrossWeight"];
                this.columnConfirmerName = base.Columns["ConfirmerName"];
                this.columnConfirmedDate = base.Columns["ConfirmedDate"];
                this.columnClientArticleCode = base.Columns["ClientArticleCode"];
                this.columnClientArticleName = base.Columns["ClientArticleName"];
                this.columnClientOrderNumber = base.Columns["ClientOrderNumber"];
                this.columnClientEANCode = base.Columns["ClientEANCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPLCID = new global::System.Data.DataColumn("PLCID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLCID);
                this.columnFactoryUD = new global::System.Data.DataColumn("FactoryUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactoryUD);
                this.columnCurrentUserName = new global::System.Data.DataColumn("CurrentUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentUserName);
                this.columnProfomaInvoiceNo = new global::System.Data.DataColumn("ProfomaInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfomaInvoiceNo);
                this.columnBuyerUD = new global::System.Data.DataColumn("BuyerUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyerUD);
                this.columnArticleCode = new global::System.Data.DataColumn("ArticleCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArticleCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnMaterialNM = new global::System.Data.DataColumn("MaterialNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialNM);
                this.columnMaterialWeight = new global::System.Data.DataColumn("MaterialWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialWeight);
                this.columnMaterialColorNM = new global::System.Data.DataColumn("MaterialColorNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialColorNM);
                this.columnTypeLegs = new global::System.Data.DataColumn("TypeLegs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeLegs);
                this.columnNetWeight = new global::System.Data.DataColumn("NetWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetWeight);
                this.columnOverallDimL = new global::System.Data.DataColumn("OverallDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverallDimL);
                this.columnOverallDimW = new global::System.Data.DataColumn("OverallDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverallDimW);
                this.columnOverallDimH = new global::System.Data.DataColumn("OverallDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverallDimH);
                this.columnSeatDimL = new global::System.Data.DataColumn("SeatDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatDimL);
                this.columnSeatDimW = new global::System.Data.DataColumn("SeatDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatDimW);
                this.columnSeatDimH = new global::System.Data.DataColumn("SeatDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatDimH);
                this.columnArmDimL = new global::System.Data.DataColumn("ArmDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArmDimL);
                this.columnArmDimW = new global::System.Data.DataColumn("ArmDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArmDimW);
                this.columnArmDimH = new global::System.Data.DataColumn("ArmDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArmDimH);
                this.columnOtherDimL = new global::System.Data.DataColumn("OtherDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDimL);
                this.columnOtherDimW = new global::System.Data.DataColumn("OtherDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDimW);
                this.columnOtherDimH = new global::System.Data.DataColumn("OtherDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherDimH);
                this.columnFrameMaterialNM = new global::System.Data.DataColumn("FrameMaterialNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrameMaterialNM);
                this.columnFrameMaterialColorNM = new global::System.Data.DataColumn("FrameMaterialColorNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrameMaterialColorNM);
                this.columnRating = new global::System.Data.DataColumn("Rating", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRating);
                this.columnRatingComment = new global::System.Data.DataColumn("RatingComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRatingComment);
                this.columnRatorName = new global::System.Data.DataColumn("RatorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRatorName);
                this.columnRatedDate = new global::System.Data.DataColumn("RatedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRatedDate);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnCushionColorNM = new global::System.Data.DataColumn("CushionColorNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCushionColorNM);
                this.columnFabricWeight = new global::System.Data.DataColumn("FabricWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFabricWeight);
                this.columnCushionBatchCode = new global::System.Data.DataColumn("CushionBatchCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCushionBatchCode);
                this.columnSeatCushionStuffing = new global::System.Data.DataColumn("SeatCushionStuffing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionStuffing);
                this.columnSeatCushionWeight = new global::System.Data.DataColumn("SeatCushionWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionWeight);
                this.columnSeatCushionParts = new global::System.Data.DataColumn("SeatCushionParts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionParts);
                this.columnSeatCushionFinishing = new global::System.Data.DataColumn("SeatCushionFinishing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionFinishing);
                this.columnCushionTypeNM = new global::System.Data.DataColumn("CushionTypeNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCushionTypeNM);
                this.columnBackCushionStuffing = new global::System.Data.DataColumn("BackCushionStuffing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionStuffing);
                this.columnBackCushionWeight = new global::System.Data.DataColumn("BackCushionWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionWeight);
                this.columnBackCushionParts = new global::System.Data.DataColumn("BackCushionParts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionParts);
                this.columnBackCushionFinishing = new global::System.Data.DataColumn("BackCushionFinishing", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionFinishing);
                this.columnSeatCushionDimL = new global::System.Data.DataColumn("SeatCushionDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionDimL);
                this.columnSeatCushionDimW = new global::System.Data.DataColumn("SeatCushionDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionDimW);
                this.columnSeatCushionDimH = new global::System.Data.DataColumn("SeatCushionDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeatCushionDimH);
                this.columnBackCushionDimL = new global::System.Data.DataColumn("BackCushionDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionDimL);
                this.columnBackCushionDimW = new global::System.Data.DataColumn("BackCushionDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionDimW);
                this.columnBackCushionDimH = new global::System.Data.DataColumn("BackCushionDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackCushionDimH);
                this.columnCartonBoxDimL = new global::System.Data.DataColumn("CartonBoxDimL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonBoxDimL);
                this.columnCartonBoxDimW = new global::System.Data.DataColumn("CartonBoxDimW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonBoxDimW);
                this.columnCartonBoxDimH = new global::System.Data.DataColumn("CartonBoxDimH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonBoxDimH);
                this.columnQntInBox = new global::System.Data.DataColumn("QntInBox", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQntInBox);
                this.columnCartonThickness = new global::System.Data.DataColumn("CartonThickness", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCartonThickness);
                this.columnGrossWeight = new global::System.Data.DataColumn("GrossWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossWeight);
                this.columnConfirmerName = new global::System.Data.DataColumn("ConfirmerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmerName);
                this.columnConfirmedDate = new global::System.Data.DataColumn("ConfirmedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmedDate);
                this.columnClientArticleCode = new global::System.Data.DataColumn("ClientArticleCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientArticleCode);
                this.columnClientArticleName = new global::System.Data.DataColumn("ClientArticleName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientArticleName);
                this.columnClientOrderNumber = new global::System.Data.DataColumn("ClientOrderNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientOrderNumber);
                this.columnClientEANCode = new global::System.Data.DataColumn("ClientEANCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientEANCode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPLCID}, true));
                this.columnPLCID.AllowDBNull = false;
                this.columnPLCID.Unique = true;
                this.columnFactoryUD.MaxLength = 10;
                this.columnCurrentUserName.MaxLength = 255;
                this.columnProfomaInvoiceNo.MaxLength = 255;
                this.columnBuyerUD.MaxLength = 255;
                this.columnArticleCode.MaxLength = 26;
                this.columnDescription.MaxLength = 500;
                this.columnMaterialNM.MaxLength = 255;
                this.columnMaterialWeight.MaxLength = 50;
                this.columnMaterialColorNM.MaxLength = 255;
                this.columnTypeLegs.MaxLength = 255;
                this.columnNetWeight.MaxLength = 50;
                this.columnOverallDimL.MaxLength = 50;
                this.columnOverallDimW.MaxLength = 50;
                this.columnOverallDimH.MaxLength = 50;
                this.columnSeatDimL.MaxLength = 50;
                this.columnSeatDimW.MaxLength = 50;
                this.columnSeatDimH.MaxLength = 50;
                this.columnArmDimL.MaxLength = 50;
                this.columnArmDimW.MaxLength = 50;
                this.columnArmDimH.MaxLength = 50;
                this.columnOtherDimL.MaxLength = 50;
                this.columnOtherDimW.MaxLength = 50;
                this.columnOtherDimH.MaxLength = 50;
                this.columnFrameMaterialNM.MaxLength = 255;
                this.columnFrameMaterialColorNM.MaxLength = 255;
                this.columnRating.MaxLength = 1;
                this.columnRatingComment.MaxLength = 500;
                this.columnRatorName.MaxLength = 50;
                this.columnRatedDate.MaxLength = 8000;
                this.columnRemark.MaxLength = 30;
                this.columnCushionColorNM.MaxLength = 255;
                this.columnFabricWeight.MaxLength = 50;
                this.columnCushionBatchCode.MaxLength = 255;
                this.columnSeatCushionStuffing.MaxLength = 50;
                this.columnSeatCushionWeight.MaxLength = 255;
                this.columnSeatCushionParts.MaxLength = 50;
                this.columnSeatCushionFinishing.MaxLength = 255;
                this.columnCushionTypeNM.MaxLength = 255;
                this.columnBackCushionStuffing.MaxLength = 50;
                this.columnBackCushionWeight.MaxLength = 255;
                this.columnBackCushionParts.MaxLength = 50;
                this.columnBackCushionFinishing.MaxLength = 255;
                this.columnSeatCushionDimL.MaxLength = 50;
                this.columnSeatCushionDimW.MaxLength = 50;
                this.columnSeatCushionDimH.MaxLength = 50;
                this.columnBackCushionDimL.MaxLength = 50;
                this.columnBackCushionDimW.MaxLength = 50;
                this.columnBackCushionDimH.MaxLength = 50;
                this.columnCartonBoxDimL.MaxLength = 50;
                this.columnCartonBoxDimW.MaxLength = 50;
                this.columnCartonBoxDimH.MaxLength = 50;
                this.columnQntInBox.MaxLength = 50;
                this.columnCartonThickness.MaxLength = 255;
                this.columnGrossWeight.MaxLength = 255;
                this.columnConfirmerName.MaxLength = 50;
                this.columnConfirmedDate.MaxLength = 8000;
                this.columnClientArticleCode.MaxLength = 255;
                this.columnClientArticleName.MaxLength = 255;
                this.columnClientOrderNumber.MaxLength = 255;
                this.columnClientEANCode.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCManagement2_PLCReport_ViewRow NewPLCManagement2_PLCReport_ViewRow() {
                return ((PLCManagement2_PLCReport_ViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PLCManagement2_PLCReport_ViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PLCManagement2_PLCReport_ViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PLCManagement2_PLCReport_ViewRowChanged != null)) {
                    this.PLCManagement2_PLCReport_ViewRowChanged(this, new PLCManagement2_PLCReport_ViewRowChangeEvent(((PLCManagement2_PLCReport_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PLCManagement2_PLCReport_ViewRowChanging != null)) {
                    this.PLCManagement2_PLCReport_ViewRowChanging(this, new PLCManagement2_PLCReport_ViewRowChangeEvent(((PLCManagement2_PLCReport_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PLCManagement2_PLCReport_ViewRowDeleted != null)) {
                    this.PLCManagement2_PLCReport_ViewRowDeleted(this, new PLCManagement2_PLCReport_ViewRowChangeEvent(((PLCManagement2_PLCReport_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PLCManagement2_PLCReport_ViewRowDeleting != null)) {
                    this.PLCManagement2_PLCReport_ViewRowDeleting(this, new PLCManagement2_PLCReport_ViewRowChangeEvent(((PLCManagement2_PLCReport_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePLCManagement2_PLCReport_ViewRow(PLCManagement2_PLCReport_ViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDataObject ds = new ReportDataObject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PLCManagement2_PLCReport_ViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PLCManagement2_PLCImageReport_ViewDataTable : global::System.Data.TypedTableBase<PLCManagement2_PLCImageReport_ViewRow> {
            
            private global::System.Data.DataColumn columnPLCID;
            
            private global::System.Data.DataColumn columnImageType;
            
            private global::System.Data.DataColumn columnFileName;
            
            private global::System.Data.DataColumn columnFilePath;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCManagement2_PLCImageReport_ViewDataTable() {
                this.TableName = "PLCManagement2_PLCImageReport_View";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PLCManagement2_PLCImageReport_ViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PLCManagement2_PLCImageReport_ViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLCIDColumn {
                get {
                    return this.columnPLCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageTypeColumn {
                get {
                    return this.columnImageType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileNameColumn {
                get {
                    return this.columnFileName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FilePathColumn {
                get {
                    return this.columnFilePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCManagement2_PLCImageReport_ViewRow this[int index] {
                get {
                    return ((PLCManagement2_PLCImageReport_ViewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCManagement2_PLCImageReport_ViewRowChangeEventHandler PLCManagement2_PLCImageReport_ViewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCManagement2_PLCImageReport_ViewRowChangeEventHandler PLCManagement2_PLCImageReport_ViewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCManagement2_PLCImageReport_ViewRowChangeEventHandler PLCManagement2_PLCImageReport_ViewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PLCManagement2_PLCImageReport_ViewRowChangeEventHandler PLCManagement2_PLCImageReport_ViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPLCManagement2_PLCImageReport_ViewRow(PLCManagement2_PLCImageReport_ViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCManagement2_PLCImageReport_ViewRow AddPLCManagement2_PLCImageReport_ViewRow(int PLCID, int ImageType, string FileName, string FilePath) {
                PLCManagement2_PLCImageReport_ViewRow rowPLCManagement2_PLCImageReport_ViewRow = ((PLCManagement2_PLCImageReport_ViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PLCID,
                        ImageType,
                        FileName,
                        FilePath};
                rowPLCManagement2_PLCImageReport_ViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPLCManagement2_PLCImageReport_ViewRow);
                return rowPLCManagement2_PLCImageReport_ViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PLCManagement2_PLCImageReport_ViewDataTable cln = ((PLCManagement2_PLCImageReport_ViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PLCManagement2_PLCImageReport_ViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPLCID = base.Columns["PLCID"];
                this.columnImageType = base.Columns["ImageType"];
                this.columnFileName = base.Columns["FileName"];
                this.columnFilePath = base.Columns["FilePath"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPLCID = new global::System.Data.DataColumn("PLCID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLCID);
                this.columnImageType = new global::System.Data.DataColumn("ImageType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageType);
                this.columnFileName = new global::System.Data.DataColumn("FileName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileName);
                this.columnFilePath = new global::System.Data.DataColumn("FilePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilePath);
                this.columnFileName.MaxLength = 255;
                this.columnFilePath.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCManagement2_PLCImageReport_ViewRow NewPLCManagement2_PLCImageReport_ViewRow() {
                return ((PLCManagement2_PLCImageReport_ViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PLCManagement2_PLCImageReport_ViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PLCManagement2_PLCImageReport_ViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PLCManagement2_PLCImageReport_ViewRowChanged != null)) {
                    this.PLCManagement2_PLCImageReport_ViewRowChanged(this, new PLCManagement2_PLCImageReport_ViewRowChangeEvent(((PLCManagement2_PLCImageReport_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PLCManagement2_PLCImageReport_ViewRowChanging != null)) {
                    this.PLCManagement2_PLCImageReport_ViewRowChanging(this, new PLCManagement2_PLCImageReport_ViewRowChangeEvent(((PLCManagement2_PLCImageReport_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PLCManagement2_PLCImageReport_ViewRowDeleted != null)) {
                    this.PLCManagement2_PLCImageReport_ViewRowDeleted(this, new PLCManagement2_PLCImageReport_ViewRowChangeEvent(((PLCManagement2_PLCImageReport_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PLCManagement2_PLCImageReport_ViewRowDeleting != null)) {
                    this.PLCManagement2_PLCImageReport_ViewRowDeleting(this, new PLCManagement2_PLCImageReport_ViewRowChangeEvent(((PLCManagement2_PLCImageReport_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePLCManagement2_PLCImageReport_ViewRow(PLCManagement2_PLCImageReport_ViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDataObject ds = new ReportDataObject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PLCManagement2_PLCImageReport_ViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PLCManagement2_PLCReport_ViewRow : global::System.Data.DataRow {
            
            private PLCManagement2_PLCReport_ViewDataTable tablePLCManagement2_PLCReport_View;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PLCManagement2_PLCReport_ViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePLCManagement2_PLCReport_View = ((PLCManagement2_PLCReport_ViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PLCID {
                get {
                    return ((int)(this[this.tablePLCManagement2_PLCReport_View.PLCIDColumn]));
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.PLCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactoryUD {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.FactoryUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactoryUD\' in table \'PLCManagement2_PLCReport_View\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.FactoryUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrentUserName {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.CurrentUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentUserName\' in table \'PLCManagement2_PLCReport_View\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.CurrentUserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProfomaInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.ProfomaInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProfomaInvoiceNo\' in table \'PLCManagement2_PLCReport_View\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.ProfomaInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BuyerUD {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.BuyerUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyerUD\' in table \'PLCManagement2_PLCReport_View\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.BuyerUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArticleCode {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.ArticleCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArticleCode\' in table \'PLCManagement2_PLCReport_View\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.ArticleCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'PLCManagement2_PLCReport_View\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tablePLCManagement2_PLCReport_View.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'PLCManagement2_PLCReport_View\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MaterialNM {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.MaterialNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialNM\' in table \'PLCManagement2_PLCReport_View\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.MaterialNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MaterialWeight {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.MaterialWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialWeight\' in table \'PLCManagement2_PLCReport_View\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.MaterialWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MaterialColorNM {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.MaterialColorNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialColorNM\' in table \'PLCManagement2_PLCReport_View\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.MaterialColorNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeLegs {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.TypeLegsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeLegs\' in table \'PLCManagement2_PLCReport_View\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.TypeLegsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NetWeight {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.NetWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetWeight\' in table \'PLCManagement2_PLCReport_View\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.NetWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OverallDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.OverallDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverallDimL\' in table \'PLCManagement2_PLCReport_View\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.OverallDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OverallDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.OverallDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverallDimW\' in table \'PLCManagement2_PLCReport_View\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.OverallDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OverallDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.OverallDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OverallDimH\' in table \'PLCManagement2_PLCReport_View\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.OverallDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.SeatDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatDimL\' in table \'PLCManagement2_PLCReport_View\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.SeatDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.SeatDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatDimW\' in table \'PLCManagement2_PLCReport_View\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.SeatDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.SeatDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatDimH\' in table \'PLCManagement2_PLCReport_View\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.SeatDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArmDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.ArmDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArmDimL\' in table \'PLCManagement2_PLCReport_View\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.ArmDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArmDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.ArmDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArmDimW\' in table \'PLCManagement2_PLCReport_View\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.ArmDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArmDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.ArmDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArmDimH\' in table \'PLCManagement2_PLCReport_View\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.ArmDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.OtherDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDimL\' in table \'PLCManagement2_PLCReport_View\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.OtherDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.OtherDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDimW\' in table \'PLCManagement2_PLCReport_View\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.OtherDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.OtherDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherDimH\' in table \'PLCManagement2_PLCReport_View\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.OtherDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FrameMaterialNM {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.FrameMaterialNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrameMaterialNM\' in table \'PLCManagement2_PLCReport_View\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.FrameMaterialNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FrameMaterialColorNM {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.FrameMaterialColorNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FrameMaterialColorNM\' in table \'PLCManagement2_PLCReport_Vi" +
                                "ew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.FrameMaterialColorNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Rating {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.RatingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rating\' in table \'PLCManagement2_PLCReport_View\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.RatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RatingComment {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.RatingCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RatingComment\' in table \'PLCManagement2_PLCReport_View\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.RatingCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RatorName {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.RatorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RatorName\' in table \'PLCManagement2_PLCReport_View\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.RatorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RatedDate {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.RatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RatedDate\' in table \'PLCManagement2_PLCReport_View\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.RatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark\' in table \'PLCManagement2_PLCReport_View\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CushionColorNM {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.CushionColorNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CushionColorNM\' in table \'PLCManagement2_PLCReport_View\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.CushionColorNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FabricWeight {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.FabricWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FabricWeight\' in table \'PLCManagement2_PLCReport_View\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.FabricWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CushionBatchCode {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.CushionBatchCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CushionBatchCode\' in table \'PLCManagement2_PLCReport_View\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.CushionBatchCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionStuffing {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.SeatCushionStuffingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionStuffing\' in table \'PLCManagement2_PLCReport_Vie" +
                                "w\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.SeatCushionStuffingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionWeight {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.SeatCushionWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionWeight\' in table \'PLCManagement2_PLCReport_View\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.SeatCushionWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionParts {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.SeatCushionPartsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionParts\' in table \'PLCManagement2_PLCReport_View\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.SeatCushionPartsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionFinishing {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.SeatCushionFinishingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionFinishing\' in table \'PLCManagement2_PLCReport_Vi" +
                                "ew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.SeatCushionFinishingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CushionTypeNM {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.CushionTypeNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CushionTypeNM\' in table \'PLCManagement2_PLCReport_View\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.CushionTypeNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionStuffing {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.BackCushionStuffingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionStuffing\' in table \'PLCManagement2_PLCReport_Vie" +
                                "w\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.BackCushionStuffingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionWeight {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.BackCushionWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionWeight\' in table \'PLCManagement2_PLCReport_View\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.BackCushionWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionParts {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.BackCushionPartsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionParts\' in table \'PLCManagement2_PLCReport_View\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.BackCushionPartsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionFinishing {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.BackCushionFinishingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionFinishing\' in table \'PLCManagement2_PLCReport_Vi" +
                                "ew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.BackCushionFinishingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.SeatCushionDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionDimL\' in table \'PLCManagement2_PLCReport_View\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.SeatCushionDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.SeatCushionDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionDimW\' in table \'PLCManagement2_PLCReport_View\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.SeatCushionDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeatCushionDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.SeatCushionDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeatCushionDimH\' in table \'PLCManagement2_PLCReport_View\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.SeatCushionDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.BackCushionDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionDimL\' in table \'PLCManagement2_PLCReport_View\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.BackCushionDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.BackCushionDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionDimW\' in table \'PLCManagement2_PLCReport_View\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.BackCushionDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackCushionDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.BackCushionDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BackCushionDimH\' in table \'PLCManagement2_PLCReport_View\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.BackCushionDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CartonBoxDimL {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.CartonBoxDimLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonBoxDimL\' in table \'PLCManagement2_PLCReport_View\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.CartonBoxDimLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CartonBoxDimW {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.CartonBoxDimWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonBoxDimW\' in table \'PLCManagement2_PLCReport_View\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.CartonBoxDimWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CartonBoxDimH {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.CartonBoxDimHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonBoxDimH\' in table \'PLCManagement2_PLCReport_View\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.CartonBoxDimHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string QntInBox {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.QntInBoxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QntInBox\' in table \'PLCManagement2_PLCReport_View\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.QntInBoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CartonThickness {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.CartonThicknessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CartonThickness\' in table \'PLCManagement2_PLCReport_View\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.CartonThicknessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GrossWeight {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.GrossWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossWeight\' in table \'PLCManagement2_PLCReport_View\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.GrossWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConfirmerName {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.ConfirmerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfirmerName\' in table \'PLCManagement2_PLCReport_View\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.ConfirmerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConfirmedDate {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.ConfirmedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConfirmedDate\' in table \'PLCManagement2_PLCReport_View\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.ConfirmedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientArticleCode {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.ClientArticleCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientArticleCode\' in table \'PLCManagement2_PLCReport_View\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.ClientArticleCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientArticleName {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.ClientArticleNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientArticleName\' in table \'PLCManagement2_PLCReport_View\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.ClientArticleNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientOrderNumber {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.ClientOrderNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientOrderNumber\' in table \'PLCManagement2_PLCReport_View\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.ClientOrderNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientEANCode {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCReport_View.ClientEANCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientEANCode\' in table \'PLCManagement2_PLCReport_View\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCReport_View.ClientEANCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFactoryUDNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.FactoryUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFactoryUDNull() {
                this[this.tablePLCManagement2_PLCReport_View.FactoryUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentUserNameNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.CurrentUserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentUserNameNull() {
                this[this.tablePLCManagement2_PLCReport_View.CurrentUserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProfomaInvoiceNoNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.ProfomaInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProfomaInvoiceNoNull() {
                this[this.tablePLCManagement2_PLCReport_View.ProfomaInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBuyerUDNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.BuyerUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBuyerUDNull() {
                this[this.tablePLCManagement2_PLCReport_View.BuyerUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArticleCodeNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.ArticleCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArticleCodeNull() {
                this[this.tablePLCManagement2_PLCReport_View.ArticleCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tablePLCManagement2_PLCReport_View.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityNull() {
                this[this.tablePLCManagement2_PLCReport_View.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialNMNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.MaterialNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialNMNull() {
                this[this.tablePLCManagement2_PLCReport_View.MaterialNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialWeightNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.MaterialWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialWeightNull() {
                this[this.tablePLCManagement2_PLCReport_View.MaterialWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaterialColorNMNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.MaterialColorNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaterialColorNMNull() {
                this[this.tablePLCManagement2_PLCReport_View.MaterialColorNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeLegsNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.TypeLegsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeLegsNull() {
                this[this.tablePLCManagement2_PLCReport_View.TypeLegsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetWeightNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.NetWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetWeightNull() {
                this[this.tablePLCManagement2_PLCReport_View.NetWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverallDimLNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.OverallDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOverallDimLNull() {
                this[this.tablePLCManagement2_PLCReport_View.OverallDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverallDimWNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.OverallDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOverallDimWNull() {
                this[this.tablePLCManagement2_PLCReport_View.OverallDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOverallDimHNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.OverallDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOverallDimHNull() {
                this[this.tablePLCManagement2_PLCReport_View.OverallDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatDimLNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.SeatDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatDimLNull() {
                this[this.tablePLCManagement2_PLCReport_View.SeatDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatDimWNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.SeatDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatDimWNull() {
                this[this.tablePLCManagement2_PLCReport_View.SeatDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatDimHNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.SeatDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatDimHNull() {
                this[this.tablePLCManagement2_PLCReport_View.SeatDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArmDimLNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.ArmDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArmDimLNull() {
                this[this.tablePLCManagement2_PLCReport_View.ArmDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArmDimWNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.ArmDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArmDimWNull() {
                this[this.tablePLCManagement2_PLCReport_View.ArmDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArmDimHNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.ArmDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArmDimHNull() {
                this[this.tablePLCManagement2_PLCReport_View.ArmDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherDimLNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.OtherDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherDimLNull() {
                this[this.tablePLCManagement2_PLCReport_View.OtherDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherDimWNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.OtherDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherDimWNull() {
                this[this.tablePLCManagement2_PLCReport_View.OtherDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherDimHNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.OtherDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherDimHNull() {
                this[this.tablePLCManagement2_PLCReport_View.OtherDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFrameMaterialNMNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.FrameMaterialNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFrameMaterialNMNull() {
                this[this.tablePLCManagement2_PLCReport_View.FrameMaterialNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFrameMaterialColorNMNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.FrameMaterialColorNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFrameMaterialColorNMNull() {
                this[this.tablePLCManagement2_PLCReport_View.FrameMaterialColorNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRatingNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.RatingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRatingNull() {
                this[this.tablePLCManagement2_PLCReport_View.RatingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRatingCommentNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.RatingCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRatingCommentNull() {
                this[this.tablePLCManagement2_PLCReport_View.RatingCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRatorNameNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.RatorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRatorNameNull() {
                this[this.tablePLCManagement2_PLCReport_View.RatorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRatedDateNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.RatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRatedDateNull() {
                this[this.tablePLCManagement2_PLCReport_View.RatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemarkNull() {
                this[this.tablePLCManagement2_PLCReport_View.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCushionColorNMNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.CushionColorNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCushionColorNMNull() {
                this[this.tablePLCManagement2_PLCReport_View.CushionColorNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFabricWeightNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.FabricWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFabricWeightNull() {
                this[this.tablePLCManagement2_PLCReport_View.FabricWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCushionBatchCodeNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.CushionBatchCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCushionBatchCodeNull() {
                this[this.tablePLCManagement2_PLCReport_View.CushionBatchCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionStuffingNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.SeatCushionStuffingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionStuffingNull() {
                this[this.tablePLCManagement2_PLCReport_View.SeatCushionStuffingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionWeightNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.SeatCushionWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionWeightNull() {
                this[this.tablePLCManagement2_PLCReport_View.SeatCushionWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionPartsNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.SeatCushionPartsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionPartsNull() {
                this[this.tablePLCManagement2_PLCReport_View.SeatCushionPartsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionFinishingNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.SeatCushionFinishingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionFinishingNull() {
                this[this.tablePLCManagement2_PLCReport_View.SeatCushionFinishingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCushionTypeNMNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.CushionTypeNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCushionTypeNMNull() {
                this[this.tablePLCManagement2_PLCReport_View.CushionTypeNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionStuffingNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.BackCushionStuffingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionStuffingNull() {
                this[this.tablePLCManagement2_PLCReport_View.BackCushionStuffingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionWeightNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.BackCushionWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionWeightNull() {
                this[this.tablePLCManagement2_PLCReport_View.BackCushionWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionPartsNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.BackCushionPartsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionPartsNull() {
                this[this.tablePLCManagement2_PLCReport_View.BackCushionPartsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionFinishingNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.BackCushionFinishingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionFinishingNull() {
                this[this.tablePLCManagement2_PLCReport_View.BackCushionFinishingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionDimLNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.SeatCushionDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionDimLNull() {
                this[this.tablePLCManagement2_PLCReport_View.SeatCushionDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionDimWNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.SeatCushionDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionDimWNull() {
                this[this.tablePLCManagement2_PLCReport_View.SeatCushionDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeatCushionDimHNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.SeatCushionDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeatCushionDimHNull() {
                this[this.tablePLCManagement2_PLCReport_View.SeatCushionDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionDimLNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.BackCushionDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionDimLNull() {
                this[this.tablePLCManagement2_PLCReport_View.BackCushionDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionDimWNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.BackCushionDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionDimWNull() {
                this[this.tablePLCManagement2_PLCReport_View.BackCushionDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBackCushionDimHNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.BackCushionDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBackCushionDimHNull() {
                this[this.tablePLCManagement2_PLCReport_View.BackCushionDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCartonBoxDimLNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.CartonBoxDimLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCartonBoxDimLNull() {
                this[this.tablePLCManagement2_PLCReport_View.CartonBoxDimLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCartonBoxDimWNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.CartonBoxDimWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCartonBoxDimWNull() {
                this[this.tablePLCManagement2_PLCReport_View.CartonBoxDimWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCartonBoxDimHNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.CartonBoxDimHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCartonBoxDimHNull() {
                this[this.tablePLCManagement2_PLCReport_View.CartonBoxDimHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQntInBoxNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.QntInBoxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQntInBoxNull() {
                this[this.tablePLCManagement2_PLCReport_View.QntInBoxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCartonThicknessNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.CartonThicknessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCartonThicknessNull() {
                this[this.tablePLCManagement2_PLCReport_View.CartonThicknessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrossWeightNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.GrossWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrossWeightNull() {
                this[this.tablePLCManagement2_PLCReport_View.GrossWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfirmerNameNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.ConfirmerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConfirmerNameNull() {
                this[this.tablePLCManagement2_PLCReport_View.ConfirmerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfirmedDateNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.ConfirmedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConfirmedDateNull() {
                this[this.tablePLCManagement2_PLCReport_View.ConfirmedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientArticleCodeNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.ClientArticleCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientArticleCodeNull() {
                this[this.tablePLCManagement2_PLCReport_View.ClientArticleCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientArticleNameNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.ClientArticleNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientArticleNameNull() {
                this[this.tablePLCManagement2_PLCReport_View.ClientArticleNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientOrderNumberNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.ClientOrderNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientOrderNumberNull() {
                this[this.tablePLCManagement2_PLCReport_View.ClientOrderNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientEANCodeNull() {
                return this.IsNull(this.tablePLCManagement2_PLCReport_View.ClientEANCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientEANCodeNull() {
                this[this.tablePLCManagement2_PLCReport_View.ClientEANCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PLCManagement2_PLCImageReport_ViewRow : global::System.Data.DataRow {
            
            private PLCManagement2_PLCImageReport_ViewDataTable tablePLCManagement2_PLCImageReport_View;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PLCManagement2_PLCImageReport_ViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePLCManagement2_PLCImageReport_View = ((PLCManagement2_PLCImageReport_ViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PLCID {
                get {
                    try {
                        return ((int)(this[this.tablePLCManagement2_PLCImageReport_View.PLCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PLCID\' in table \'PLCManagement2_PLCImageReport_View\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCImageReport_View.PLCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ImageType {
                get {
                    try {
                        return ((int)(this[this.tablePLCManagement2_PLCImageReport_View.ImageTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageType\' in table \'PLCManagement2_PLCImageReport_View\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCImageReport_View.ImageTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileName {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCImageReport_View.FileNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FileName\' in table \'PLCManagement2_PLCImageReport_View\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCImageReport_View.FileNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FilePath {
                get {
                    try {
                        return ((string)(this[this.tablePLCManagement2_PLCImageReport_View.FilePathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FilePath\' in table \'PLCManagement2_PLCImageReport_View\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePLCManagement2_PLCImageReport_View.FilePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPLCIDNull() {
                return this.IsNull(this.tablePLCManagement2_PLCImageReport_View.PLCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPLCIDNull() {
                this[this.tablePLCManagement2_PLCImageReport_View.PLCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageTypeNull() {
                return this.IsNull(this.tablePLCManagement2_PLCImageReport_View.ImageTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageTypeNull() {
                this[this.tablePLCManagement2_PLCImageReport_View.ImageTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFileNameNull() {
                return this.IsNull(this.tablePLCManagement2_PLCImageReport_View.FileNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFileNameNull() {
                this[this.tablePLCManagement2_PLCImageReport_View.FileNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFilePathNull() {
                return this.IsNull(this.tablePLCManagement2_PLCImageReport_View.FilePathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFilePathNull() {
                this[this.tablePLCManagement2_PLCImageReport_View.FilePathColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PLCManagement2_PLCReport_ViewRowChangeEvent : global::System.EventArgs {
            
            private PLCManagement2_PLCReport_ViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCManagement2_PLCReport_ViewRowChangeEvent(PLCManagement2_PLCReport_ViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCManagement2_PLCReport_ViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PLCManagement2_PLCImageReport_ViewRowChangeEvent : global::System.EventArgs {
            
            private PLCManagement2_PLCImageReport_ViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCManagement2_PLCImageReport_ViewRowChangeEvent(PLCManagement2_PLCImageReport_ViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PLCManagement2_PLCImageReport_ViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Module.FactoryPLCMng.DAL.ReportDataObjectTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PLCManagement2_PLCReport_ViewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PLCManagement2_PLCReport_ViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PLCManagement2_PLCReport_View";
            tableMapping.ColumnMappings.Add("PLCID", "PLCID");
            tableMapping.ColumnMappings.Add("FactoryUD", "FactoryUD");
            tableMapping.ColumnMappings.Add("CurrentUserName", "CurrentUserName");
            tableMapping.ColumnMappings.Add("ProfomaInvoiceNo", "ProfomaInvoiceNo");
            tableMapping.ColumnMappings.Add("BuyerUD", "BuyerUD");
            tableMapping.ColumnMappings.Add("ArticleCode", "ArticleCode");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("MaterialNM", "MaterialNM");
            tableMapping.ColumnMappings.Add("MaterialWeight", "MaterialWeight");
            tableMapping.ColumnMappings.Add("MaterialColorNM", "MaterialColorNM");
            tableMapping.ColumnMappings.Add("TypeLegs", "TypeLegs");
            tableMapping.ColumnMappings.Add("NetWeight", "NetWeight");
            tableMapping.ColumnMappings.Add("OverallDimL", "OverallDimL");
            tableMapping.ColumnMappings.Add("OverallDimW", "OverallDimW");
            tableMapping.ColumnMappings.Add("OverallDimH", "OverallDimH");
            tableMapping.ColumnMappings.Add("SeatDimL", "SeatDimL");
            tableMapping.ColumnMappings.Add("SeatDimW", "SeatDimW");
            tableMapping.ColumnMappings.Add("SeatDimH", "SeatDimH");
            tableMapping.ColumnMappings.Add("ArmDimL", "ArmDimL");
            tableMapping.ColumnMappings.Add("ArmDimW", "ArmDimW");
            tableMapping.ColumnMappings.Add("ArmDimH", "ArmDimH");
            tableMapping.ColumnMappings.Add("OtherDimL", "OtherDimL");
            tableMapping.ColumnMappings.Add("OtherDimW", "OtherDimW");
            tableMapping.ColumnMappings.Add("OtherDimH", "OtherDimH");
            tableMapping.ColumnMappings.Add("FrameMaterialNM", "FrameMaterialNM");
            tableMapping.ColumnMappings.Add("FrameMaterialColorNM", "FrameMaterialColorNM");
            tableMapping.ColumnMappings.Add("Rating", "Rating");
            tableMapping.ColumnMappings.Add("RatingComment", "RatingComment");
            tableMapping.ColumnMappings.Add("RatorName", "RatorName");
            tableMapping.ColumnMappings.Add("RatedDate", "RatedDate");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            tableMapping.ColumnMappings.Add("CushionColorNM", "CushionColorNM");
            tableMapping.ColumnMappings.Add("FabricWeight", "FabricWeight");
            tableMapping.ColumnMappings.Add("CushionBatchCode", "CushionBatchCode");
            tableMapping.ColumnMappings.Add("SeatCushionStuffing", "SeatCushionStuffing");
            tableMapping.ColumnMappings.Add("SeatCushionWeight", "SeatCushionWeight");
            tableMapping.ColumnMappings.Add("SeatCushionParts", "SeatCushionParts");
            tableMapping.ColumnMappings.Add("SeatCushionFinishing", "SeatCushionFinishing");
            tableMapping.ColumnMappings.Add("CushionTypeNM", "CushionTypeNM");
            tableMapping.ColumnMappings.Add("BackCushionStuffing", "BackCushionStuffing");
            tableMapping.ColumnMappings.Add("BackCushionWeight", "BackCushionWeight");
            tableMapping.ColumnMappings.Add("BackCushionParts", "BackCushionParts");
            tableMapping.ColumnMappings.Add("BackCushionFinishing", "BackCushionFinishing");
            tableMapping.ColumnMappings.Add("SeatCushionDimL", "SeatCushionDimL");
            tableMapping.ColumnMappings.Add("SeatCushionDimW", "SeatCushionDimW");
            tableMapping.ColumnMappings.Add("SeatCushionDimH", "SeatCushionDimH");
            tableMapping.ColumnMappings.Add("BackCushionDimL", "BackCushionDimL");
            tableMapping.ColumnMappings.Add("BackCushionDimW", "BackCushionDimW");
            tableMapping.ColumnMappings.Add("BackCushionDimH", "BackCushionDimH");
            tableMapping.ColumnMappings.Add("CartonBoxDimL", "CartonBoxDimL");
            tableMapping.ColumnMappings.Add("CartonBoxDimW", "CartonBoxDimW");
            tableMapping.ColumnMappings.Add("CartonBoxDimH", "CartonBoxDimH");
            tableMapping.ColumnMappings.Add("QntInBox", "QntInBox");
            tableMapping.ColumnMappings.Add("CartonThickness", "CartonThickness");
            tableMapping.ColumnMappings.Add("GrossWeight", "GrossWeight");
            tableMapping.ColumnMappings.Add("ConfirmerName", "ConfirmerName");
            tableMapping.ColumnMappings.Add("ConfirmedDate", "ConfirmedDate");
            tableMapping.ColumnMappings.Add("ClientArticleCode", "ClientArticleCode");
            tableMapping.ColumnMappings.Add("ClientArticleName", "ClientArticleName");
            tableMapping.ColumnMappings.Add("ClientOrderNumber", "ClientOrderNumber");
            tableMapping.ColumnMappings.Add("ClientEANCode", "ClientEANCode");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Module.FactoryPLCMng.Properties.Settings.Default.TilsoftConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM PLCManagement2_PLCReport_View";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportDataObject.PLCManagement2_PLCReport_ViewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportDataObject.PLCManagement2_PLCReport_ViewDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportDataObject.PLCManagement2_PLCReport_ViewDataTable dataTable = new ReportDataObject.PLCManagement2_PLCReport_ViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PLCManagement2_PLCImageReport_ViewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PLCManagement2_PLCImageReport_ViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PLCManagement2_PLCImageReport_View";
            tableMapping.ColumnMappings.Add("PLCID", "PLCID");
            tableMapping.ColumnMappings.Add("ImageType", "ImageType");
            tableMapping.ColumnMappings.Add("FileName", "FileName");
            tableMapping.ColumnMappings.Add("FilePath", "FilePath");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Module.FactoryPLCMng.Properties.Settings.Default.TilsoftConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM PLCManagement2_PLCImageReport_View";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportDataObject.PLCManagement2_PLCImageReport_ViewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportDataObject.PLCManagement2_PLCImageReport_ViewDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportDataObject.PLCManagement2_PLCImageReport_ViewDataTable dataTable = new ReportDataObject.PLCManagement2_PLCImageReport_ViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ReportDataObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ReportDataObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ReportDataObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ReportDataObject dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591