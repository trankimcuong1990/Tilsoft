//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.DashboardMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DashboardMngEntities : DbContext
    {
        public DashboardMngEntities()
            : base("name=DashboardMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DashboardMng_FactoryAccessList_View> DashboardMng_FactoryAccessList_View { get; set; }
        public virtual DbSet<DashboardMng_LabelingPackaging_View> DashboardMng_LabelingPackaging_View { get; set; }
        public virtual DbSet<DashboardMng_ProductionOverview_View> DashboardMng_ProductionOverview_View { get; set; }
        public virtual DbSet<DashboardMng_ProductionOverviewDetail_View> DashboardMng_ProductionOverviewDetail_View { get; set; }
        public virtual DbSet<DashboardMng_PurchasingInvoice_View> DashboardMng_PurchasingInvoice_View { get; set; }
        public virtual DbSet<DashBoardMng_Quotation_View> DashBoardMng_Quotation_View { get; set; }
        public virtual DbSet<DashBoardMng_SampleOrder_View> DashBoardMng_SampleOrder_View { get; set; }
        public virtual DbSet<DashBoardMng_SampleProduct_View> DashBoardMng_SampleProduct_View { get; set; }
        public virtual DbSet<DashboardMng_TotalHitPerWeekFactory_View> DashboardMng_TotalHitPerWeekFactory_View { get; set; }
        public virtual DbSet<DashboardMng_TotalHitPerWeekOfFactory_View> DashboardMng_TotalHitPerWeekOfFactory_View { get; set; }
        public virtual DbSet<DashboardMng_TotalHitPerWeekOfUser_View> DashboardMng_TotalHitPerWeekOfUser_View { get; set; }
        public virtual DbSet<DashboardMng_UserData_View> DashboardMng_UserData_View { get; set; }
        public virtual DbSet<DashboardMng_UserDataRpt_View> DashboardMng_UserDataRpt_View { get; set; }
        public virtual DbSet<DashboardMng_UserPermission_View> DashboardMng_UserPermission_View { get; set; }
        public virtual DbSet<DashboardMng_WeekInfoData_View> DashboardMng_WeekInfoData_View { get; set; }
        public virtual DbSet<DashboardMng_WeeklyProducedReportData_View> DashboardMng_WeeklyProducedReportData_View { get; set; }
        public virtual DbSet<DashboardMng_WeeklyShippedReportData_View> DashboardMng_WeeklyShippedReportData_View { get; set; }
        public virtual DbSet<SupportMng_InternalCompany2_View> SupportMng_InternalCompany2_View { get; set; }
        public virtual DbSet<DashboardMng_FinanceOverview_View> DashboardMng_FinanceOverview_View { get; set; }
        public virtual DbSet<Dashboard_ChartFinanceOverview_View> Dashboard_ChartFinanceOverview_View { get; set; }
        public virtual DbSet<DashboardMng_Employee_ReportView> DashboardMng_Employee_ReportView { get; set; }
        public virtual DbSet<DashboardMng_FOBItemOnly_ReportView> DashboardMng_FOBItemOnly_ReportView { get; set; }
        public virtual DbSet<UserDashboardMng_TeamAccountManager_View> UserDashboardMng_TeamAccountManager_View { get; set; }
        public virtual DbSet<UserDashboardMng_OfferApproveByTeamAccountManager_View> UserDashboardMng_OfferApproveByTeamAccountManager_View { get; set; }
        public virtual DbSet<UserDashboardMng_OfferPricing_View> UserDashboardMng_OfferPricing_View { get; set; }
        public virtual DbSet<AdminDashboardMng_OfferSeasonNotApprovedYet_View> AdminDashboardMng_OfferSeasonNotApprovedYet_View { get; set; }
        public virtual DbSet<UserDashboardMng_OfferSeasonNotApprovedYet_View> UserDashboardMng_OfferSeasonNotApprovedYet_View { get; set; }
        public virtual DbSet<DashboardMng_DeltaByClientCompare_View> DashboardMng_DeltaByClientCompare_View { get; set; }
        public virtual DbSet<DashboardMng_PendingOfferItemPrice_View> DashboardMng_PendingOfferItemPrice_View { get; set; }
        public virtual DbSet<DashboardMng_UserDashboard_FactoryInfoReportData_View> DashboardMng_UserDashboard_FactoryInfoReportData_View { get; set; }
        public virtual DbSet<DashboardMng_UserDashboard_TotalCapacityAndOrder_View> DashboardMng_UserDashboard_TotalCapacityAndOrder_View { get; set; }
        public virtual DbSet<DashboardMng_UserDashboard_TotalCapacityAndOrderByWeekOfFactory_View> DashboardMng_UserDashboard_TotalCapacityAndOrderByWeekOfFactory_View { get; set; }
        public virtual DbSet<DashboardMng_UserDashboard_WeekInfoReportData_View> DashboardMng_UserDashboard_WeekInfoReportData_View { get; set; }
        public virtual DbSet<DashboardMng_UserDashboard_WeeklyProducedReportData_View> DashboardMng_UserDashboard_WeeklyProducedReportData_View { get; set; }
        public virtual DbSet<DashboardMng_UserDashboard_WeeklyShippedReportData_View> DashboardMng_UserDashboard_WeeklyShippedReportData_View { get; set; }
        public virtual DbSet<DashboardMng_UserDashboard_YearlyProducedReportData_View> DashboardMng_UserDashboard_YearlyProducedReportData_View { get; set; }
        public virtual DbSet<DashboardMng_UserDashboard_YearlyShippedReportData_View> DashboardMng_UserDashboard_YearlyShippedReportData_View { get; set; }
        public virtual DbSet<DashboardMng_HitCountDataRpt_View> DashboardMng_HitCountDataRpt_View { get; set; }
    
        public virtual ObjectResult<Nullable<int>> DashboardMng_function_CanPerformActionModule(Nullable<int> userID, string moduleUD)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var moduleUDParameter = moduleUD != null ?
                new ObjectParameter("ModuleUD", moduleUD) :
                new ObjectParameter("ModuleUD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DashboardMng_function_CanPerformActionModule", userIDParameter, moduleUDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_LabelingPackaging_View> DashboardMng_function_GetLabelingPackaging(Nullable<int> userId, string season)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_LabelingPackaging_View>("DashboardMng_function_GetLabelingPackaging", userIdParameter, seasonParameter);
        }
    
        public virtual ObjectResult<DashboardMng_LabelingPackaging_View> DashboardMng_function_GetLabelingPackaging(Nullable<int> userId, string season, MergeOption mergeOption)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_LabelingPackaging_View>("DashboardMng_function_GetLabelingPackaging", mergeOption, userIdParameter, seasonParameter);
        }
    
        public virtual ObjectResult<DashboardMng_ProductionOverview_View> DashboardMng_function_getProductionOverview(Nullable<int> userID, string season)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_ProductionOverview_View>("DashboardMng_function_getProductionOverview", userIDParameter, seasonParameter);
        }
    
        public virtual ObjectResult<DashboardMng_ProductionOverview_View> DashboardMng_function_getProductionOverview(Nullable<int> userID, string season, MergeOption mergeOption)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_ProductionOverview_View>("DashboardMng_function_getProductionOverview", mergeOption, userIDParameter, seasonParameter);
        }
    
        public virtual ObjectResult<DashboardMng_ProductionOverviewDetail_View> DashboardMng_function_getProductionOverviewDetail(Nullable<int> factoryOrderID)
        {
            var factoryOrderIDParameter = factoryOrderID.HasValue ?
                new ObjectParameter("FactoryOrderID", factoryOrderID) :
                new ObjectParameter("FactoryOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_ProductionOverviewDetail_View>("DashboardMng_function_getProductionOverviewDetail", factoryOrderIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_ProductionOverviewDetail_View> DashboardMng_function_getProductionOverviewDetail(Nullable<int> factoryOrderID, MergeOption mergeOption)
        {
            var factoryOrderIDParameter = factoryOrderID.HasValue ?
                new ObjectParameter("FactoryOrderID", factoryOrderID) :
                new ObjectParameter("FactoryOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_ProductionOverviewDetail_View>("DashboardMng_function_getProductionOverviewDetail", mergeOption, factoryOrderIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_PurchasingInvoice_View> DashboardMng_function_GetPurchasingInvoice(Nullable<int> userId, string season)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_PurchasingInvoice_View>("DashboardMng_function_GetPurchasingInvoice", userIdParameter, seasonParameter);
        }
    
        public virtual ObjectResult<DashboardMng_PurchasingInvoice_View> DashboardMng_function_GetPurchasingInvoice(Nullable<int> userId, string season, MergeOption mergeOption)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_PurchasingInvoice_View>("DashboardMng_function_GetPurchasingInvoice", mergeOption, userIdParameter, seasonParameter);
        }
    
        public virtual ObjectResult<DashBoardMng_Quotation_View> DashboardMng_function_GetQuotation(Nullable<int> userId, string season)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashBoardMng_Quotation_View>("DashboardMng_function_GetQuotation", userIdParameter, seasonParameter);
        }
    
        public virtual ObjectResult<DashBoardMng_Quotation_View> DashboardMng_function_GetQuotation(Nullable<int> userId, string season, MergeOption mergeOption)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashBoardMng_Quotation_View>("DashboardMng_function_GetQuotation", mergeOption, userIdParameter, seasonParameter);
        }
    
        public virtual ObjectResult<DashBoardMng_SampleOrder_View> DashboardMng_function_GetSampleOrder(Nullable<int> userId, string season)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashBoardMng_SampleOrder_View>("DashboardMng_function_GetSampleOrder", userIdParameter, seasonParameter);
        }
    
        public virtual ObjectResult<DashBoardMng_SampleOrder_View> DashboardMng_function_GetSampleOrder(Nullable<int> userId, string season, MergeOption mergeOption)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashBoardMng_SampleOrder_View>("DashboardMng_function_GetSampleOrder", mergeOption, userIdParameter, seasonParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDataRpt_View> DashboardMng_function_getUserData(string season)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDataRpt_View>("DashboardMng_function_getUserData", seasonParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDataRpt_View> DashboardMng_function_getUserData(string season, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDataRpt_View>("DashboardMng_function_getUserData", mergeOption, seasonParameter);
        }
    
        public virtual ObjectResult<DashboardMng_WeeklyProducedReportData_View> DashboardMng_function_GetWeeklyProducedReportData(string season, Nullable<int> factoryID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_WeeklyProducedReportData_View>("DashboardMng_function_GetWeeklyProducedReportData", seasonParameter, factoryIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_WeeklyProducedReportData_View> DashboardMng_function_GetWeeklyProducedReportData(string season, Nullable<int> factoryID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_WeeklyProducedReportData_View>("DashboardMng_function_GetWeeklyProducedReportData", mergeOption, seasonParameter, factoryIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_WeeklyShippedReportData_View> DashboardMng_function_GetWeeklyShippedReportData(string season, Nullable<int> factoryID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_WeeklyShippedReportData_View>("DashboardMng_function_GetWeeklyShippedReportData", seasonParameter, factoryIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_WeeklyShippedReportData_View> DashboardMng_function_GetWeeklyShippedReportData(string season, Nullable<int> factoryID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_WeeklyShippedReportData_View>("DashboardMng_function_GetWeeklyShippedReportData", mergeOption, seasonParameter, factoryIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_FactoryAccessList_View> DashboardMng_function_SearchFactoryAccessList(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_FactoryAccessList_View>("DashboardMng_function_SearchFactoryAccessList", userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_FactoryAccessList_View> DashboardMng_function_SearchFactoryAccessList(Nullable<int> userID, MergeOption mergeOption)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_FactoryAccessList_View>("DashboardMng_function_SearchFactoryAccessList", mergeOption, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_TotalHitPerWeekOfUser_View> DashboardMng_function_TotalHitOfUsers(string season, Nullable<int> userId)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_TotalHitPerWeekOfUser_View>("DashboardMng_function_TotalHitOfUsers", seasonParameter, userIdParameter);
        }
    
        public virtual ObjectResult<DashboardMng_TotalHitPerWeekOfUser_View> DashboardMng_function_TotalHitOfUsers(string season, Nullable<int> userId, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_TotalHitPerWeekOfUser_View>("DashboardMng_function_TotalHitOfUsers", mergeOption, seasonParameter, userIdParameter);
        }
    
        public virtual ObjectResult<DashboardMng_TotalHitPerWeekFactory_View> DashboardMng_function_TotalHitPerWeekFactory(string season, Nullable<int> companyID, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_TotalHitPerWeekFactory_View>("DashboardMng_function_TotalHitPerWeekFactory", seasonParameter, companyIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_TotalHitPerWeekFactory_View> DashboardMng_function_TotalHitPerWeekFactory(string season, Nullable<int> companyID, Nullable<int> userID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_TotalHitPerWeekFactory_View>("DashboardMng_function_TotalHitPerWeekFactory", mergeOption, seasonParameter, companyIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_FinanceOverview_View> DashboardMng_function_FinanceOverview(string season, Nullable<int> userID, Nullable<int> factoryID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_FinanceOverview_View>("DashboardMng_function_FinanceOverview", seasonParameter, userIDParameter, factoryIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_FinanceOverview_View> DashboardMng_function_FinanceOverview(string season, Nullable<int> userID, Nullable<int> factoryID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_FinanceOverview_View>("DashboardMng_function_FinanceOverview", mergeOption, seasonParameter, userIDParameter, factoryIDParameter);
        }
    
        public virtual ObjectResult<Dashboard_ChartFinanceOverview_View> Dashboard_function_GetFinanceOverviewChart(string season, Nullable<int> userID, Nullable<int> factoryID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_ChartFinanceOverview_View>("Dashboard_function_GetFinanceOverviewChart", seasonParameter, userIDParameter, factoryIDParameter);
        }
    
        public virtual ObjectResult<Dashboard_ChartFinanceOverview_View> Dashboard_function_GetFinanceOverviewChart(string season, Nullable<int> userID, Nullable<int> factoryID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_ChartFinanceOverview_View>("Dashboard_function_GetFinanceOverviewChart", mergeOption, seasonParameter, userIDParameter, factoryIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> DashboardMng_function_CheckFactoriesManufacturing(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DashboardMng_function_CheckFactoriesManufacturing", userIDParameter);
        }
    
        public virtual ObjectResult<UserDashboardMng_function_GetWaitForFactoryConclusion_Result> UserDashboardMng_function_GetWaitForFactoryConclusion(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDashboardMng_function_GetWaitForFactoryConclusion_Result>("UserDashboardMng_function_GetWaitForFactoryConclusion", userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_FOBItemOnly_ReportView> DashboardMng_function_FOBItemOnlyReportView(string season)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_FOBItemOnly_ReportView>("DashboardMng_function_FOBItemOnlyReportView", seasonParameter);
        }
    
        public virtual ObjectResult<DashboardMng_FOBItemOnly_ReportView> DashboardMng_function_FOBItemOnlyReportView(string season, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_FOBItemOnly_ReportView>("DashboardMng_function_FOBItemOnlyReportView", mergeOption, seasonParameter);
        }
    
        public virtual ObjectResult<AdminDashboardMng_function_getExchangeRate_Result> AdminDashboardMng_function_getExchangeRate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdminDashboardMng_function_getExchangeRate_Result>("AdminDashboardMng_function_getExchangeRate");
        }
    
        public virtual ObjectResult<UserDashboardMng_function_getExchangeRate_Result> UserDashboardMng_function_getExchangeRate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDashboardMng_function_getExchangeRate_Result>("UserDashboardMng_function_getExchangeRate");
        }
    
        public virtual ObjectResult<UserDashboardMng_OfferPricing_View> UserDashboardMng_function_OfferPricing(string season)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDashboardMng_OfferPricing_View>("UserDashboardMng_function_OfferPricing", seasonParameter);
        }
    
        public virtual ObjectResult<UserDashboardMng_OfferPricing_View> UserDashboardMng_function_OfferPricing(string season, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDashboardMng_OfferPricing_View>("UserDashboardMng_function_OfferPricing", mergeOption, seasonParameter);
        }
    
        public virtual ObjectResult<DashboardMng_function_GetDeltaCompareOfferWithPILastYear_Result> DashboardMng_function_GetDeltaCompareOfferWithPILastYear(string season, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_function_GetDeltaCompareOfferWithPILastYear_Result>("DashboardMng_function_GetDeltaCompareOfferWithPILastYear", seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<AdminDashboardMng_function_ClientEstimatedAdditionalCost_Result> AdminDashboardMng_function_ClientEstimatedAdditionalCost(Nullable<int> offerSeasonID)
        {
            var offerSeasonIDParameter = offerSeasonID.HasValue ?
                new ObjectParameter("OfferSeasonID", offerSeasonID) :
                new ObjectParameter("OfferSeasonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdminDashboardMng_function_ClientEstimatedAdditionalCost_Result>("AdminDashboardMng_function_ClientEstimatedAdditionalCost", offerSeasonIDParameter);
        }
    
        public virtual ObjectResult<AdminDashboardMng_function_OfferSeasonDetail_Result> AdminDashboardMng_function_OfferSeasonDetail(Nullable<int> offerSeasonID)
        {
            var offerSeasonIDParameter = offerSeasonID.HasValue ?
                new ObjectParameter("OfferSeasonID", offerSeasonID) :
                new ObjectParameter("OfferSeasonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdminDashboardMng_function_OfferSeasonDetail_Result>("AdminDashboardMng_function_OfferSeasonDetail", offerSeasonIDParameter);
        }
    
        public virtual ObjectResult<AdminDashboardMng_function_PaymentTerm_Result> AdminDashboardMng_function_PaymentTerm(Nullable<int> offerSeasonID)
        {
            var offerSeasonIDParameter = offerSeasonID.HasValue ?
                new ObjectParameter("OfferSeasonID", offerSeasonID) :
                new ObjectParameter("OfferSeasonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdminDashboardMng_function_PaymentTerm_Result>("AdminDashboardMng_function_PaymentTerm", offerSeasonIDParameter);
        }
    
        public virtual ObjectResult<AdminDashboardMng_function_Shared_OfferSeasonDetailLoadAbility_Result> AdminDashboardMng_function_Shared_OfferSeasonDetailLoadAbility(Nullable<int> offerSeasonDetailID)
        {
            var offerSeasonDetailIDParameter = offerSeasonDetailID.HasValue ?
                new ObjectParameter("OfferSeasonDetailID", offerSeasonDetailID) :
                new ObjectParameter("OfferSeasonDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdminDashboardMng_function_Shared_OfferSeasonDetailLoadAbility_Result>("AdminDashboardMng_function_Shared_OfferSeasonDetailLoadAbility", offerSeasonDetailIDParameter);
        }
    
        public virtual ObjectResult<UserDashboardMng_function_ClientEstimatedAdditionalCost_Result> UserDashboardMng_function_ClientEstimatedAdditionalCost(Nullable<int> offerSeasonID)
        {
            var offerSeasonIDParameter = offerSeasonID.HasValue ?
                new ObjectParameter("OfferSeasonID", offerSeasonID) :
                new ObjectParameter("OfferSeasonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDashboardMng_function_ClientEstimatedAdditionalCost_Result>("UserDashboardMng_function_ClientEstimatedAdditionalCost", offerSeasonIDParameter);
        }
    
        public virtual ObjectResult<UserDashboardMng_function_OfferSeasonDetail_Result> UserDashboardMng_function_OfferSeasonDetail(Nullable<int> offerSeasonID)
        {
            var offerSeasonIDParameter = offerSeasonID.HasValue ?
                new ObjectParameter("OfferSeasonID", offerSeasonID) :
                new ObjectParameter("OfferSeasonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDashboardMng_function_OfferSeasonDetail_Result>("UserDashboardMng_function_OfferSeasonDetail", offerSeasonIDParameter);
        }
    
        public virtual ObjectResult<UserDashboardMng_function_PaymentTerm_Result> UserDashboardMng_function_PaymentTerm(Nullable<int> offerSeasonID)
        {
            var offerSeasonIDParameter = offerSeasonID.HasValue ?
                new ObjectParameter("OfferSeasonID", offerSeasonID) :
                new ObjectParameter("OfferSeasonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDashboardMng_function_PaymentTerm_Result>("UserDashboardMng_function_PaymentTerm", offerSeasonIDParameter);
        }
    
        public virtual ObjectResult<UserDashboardMng_function_Shared_OfferSeasonDetailAbility_Result> UserDashboardMng_function_Shared_OfferSeasonDetailAbility(Nullable<int> offerSeasonDetailID)
        {
            var offerSeasonDetailIDParameter = offerSeasonDetailID.HasValue ?
                new ObjectParameter("OfferSeasonDetailID", offerSeasonDetailID) :
                new ObjectParameter("OfferSeasonDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDashboardMng_function_Shared_OfferSeasonDetailAbility_Result>("UserDashboardMng_function_Shared_OfferSeasonDetailAbility", offerSeasonDetailIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_DeltaByClientCompare_View> DashboardMng_function_GetDeltaByClient(string season, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_DeltaByClientCompare_View>("DashboardMng_function_GetDeltaByClient", seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_DeltaByClientCompare_View> DashboardMng_function_GetDeltaByClient(string season, Nullable<int> userID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_DeltaByClientCompare_View>("DashboardMng_function_GetDeltaByClient", mergeOption, seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_PendingOfferItemPrice_View> DashboardMng_function_GetPendingOfferItemPrice(string season, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_PendingOfferItemPrice_View>("DashboardMng_function_GetPendingOfferItemPrice", seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_PendingOfferItemPrice_View> DashboardMng_function_GetPendingOfferItemPrice(string season, Nullable<int> userID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_PendingOfferItemPrice_View>("DashboardMng_function_GetPendingOfferItemPrice", mergeOption, seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<WidgetMng_function_GetItemDeltaNeedAttention_Result> WidgetMng_function_GetItemDeltaNeedAttention(string season, string description, string clientNM, string offerUD, string proformaInvoiceNo, Nullable<int> pIStatus, Nullable<int> orderQnt, Nullable<int> orderQnt40HC, Nullable<int> delta5Percent, string sortedBy, string sortedDirection)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var clientNMParameter = clientNM != null ?
                new ObjectParameter("ClientNM", clientNM) :
                new ObjectParameter("ClientNM", typeof(string));
    
            var offerUDParameter = offerUD != null ?
                new ObjectParameter("OfferUD", offerUD) :
                new ObjectParameter("OfferUD", typeof(string));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var pIStatusParameter = pIStatus.HasValue ?
                new ObjectParameter("PIStatus", pIStatus) :
                new ObjectParameter("PIStatus", typeof(int));
    
            var orderQntParameter = orderQnt.HasValue ?
                new ObjectParameter("OrderQnt", orderQnt) :
                new ObjectParameter("OrderQnt", typeof(int));
    
            var orderQnt40HCParameter = orderQnt40HC.HasValue ?
                new ObjectParameter("OrderQnt40HC", orderQnt40HC) :
                new ObjectParameter("OrderQnt40HC", typeof(int));
    
            var delta5PercentParameter = delta5Percent.HasValue ?
                new ObjectParameter("Delta5Percent", delta5Percent) :
                new ObjectParameter("Delta5Percent", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WidgetMng_function_GetItemDeltaNeedAttention_Result>("WidgetMng_function_GetItemDeltaNeedAttention", seasonParameter, descriptionParameter, clientNMParameter, offerUDParameter, proformaInvoiceNoParameter, pIStatusParameter, orderQntParameter, orderQnt40HCParameter, delta5PercentParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_WeeklyProducedReportData_View> DashboardMng_function_UserDashboard_GetWeeklyProducedReportData(string season, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_WeeklyProducedReportData_View>("DashboardMng_function_UserDashboard_GetWeeklyProducedReportData", seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_WeeklyProducedReportData_View> DashboardMng_function_UserDashboard_GetWeeklyProducedReportData(string season, Nullable<int> userID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_WeeklyProducedReportData_View>("DashboardMng_function_UserDashboard_GetWeeklyProducedReportData", mergeOption, seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_WeeklyShippedReportData_View> DashBoardMng_function_UserDashBoard_GetWeeklyShippedReportData(string season, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_WeeklyShippedReportData_View>("DashBoardMng_function_UserDashBoard_GetWeeklyShippedReportData", seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_WeeklyShippedReportData_View> DashBoardMng_function_UserDashBoard_GetWeeklyShippedReportData(string season, Nullable<int> userID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_WeeklyShippedReportData_View>("DashBoardMng_function_UserDashBoard_GetWeeklyShippedReportData", mergeOption, seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_YearlyProducedReportData_View> DashboardMng_function_UserDashboard_GetYearlyProducedReportData(string season, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_YearlyProducedReportData_View>("DashboardMng_function_UserDashboard_GetYearlyProducedReportData", seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_YearlyProducedReportData_View> DashboardMng_function_UserDashboard_GetYearlyProducedReportData(string season, Nullable<int> userID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_YearlyProducedReportData_View>("DashboardMng_function_UserDashboard_GetYearlyProducedReportData", mergeOption, seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_YearlyShippedReportData_View> DashboardMng_function_UserDashboard_GetYearlyShippedReportData(string season, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_YearlyShippedReportData_View>("DashboardMng_function_UserDashboard_GetYearlyShippedReportData", seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_YearlyShippedReportData_View> DashboardMng_function_UserDashboard_GetYearlyShippedReportData(string season, Nullable<int> userID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_YearlyShippedReportData_View>("DashboardMng_function_UserDashboard_GetYearlyShippedReportData", mergeOption, seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_TotalCapacityAndOrder_View> DashboardMng_function_UserDashboard_TotalCapacityAndOrder(string season, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_TotalCapacityAndOrder_View>("DashboardMng_function_UserDashboard_TotalCapacityAndOrder", seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_TotalCapacityAndOrder_View> DashboardMng_function_UserDashboard_TotalCapacityAndOrder(string season, Nullable<int> userID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_TotalCapacityAndOrder_View>("DashboardMng_function_UserDashboard_TotalCapacityAndOrder", mergeOption, seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_TotalCapacityAndOrderByWeekOfFactory_View> DashboardMng_function_UserDashboard_TotalCapacityAndOrderByWeekOfFactory(string season, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_TotalCapacityAndOrderByWeekOfFactory_View>("DashboardMng_function_UserDashboard_TotalCapacityAndOrderByWeekOfFactory", seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_TotalCapacityAndOrderByWeekOfFactory_View> DashboardMng_function_UserDashboard_TotalCapacityAndOrderByWeekOfFactory(string season, Nullable<int> userID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_TotalCapacityAndOrderByWeekOfFactory_View>("DashboardMng_function_UserDashboard_TotalCapacityAndOrderByWeekOfFactory", mergeOption, seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_FactoryInfoReportData_View> DashboardMng_function_UserDashboard_FactoryInfoReportData(string season, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_FactoryInfoReportData_View>("DashboardMng_function_UserDashboard_FactoryInfoReportData", seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<DashboardMng_UserDashboard_FactoryInfoReportData_View> DashboardMng_function_UserDashboard_FactoryInfoReportData(string season, Nullable<int> userID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DashboardMng_UserDashboard_FactoryInfoReportData_View>("DashboardMng_function_UserDashboard_FactoryInfoReportData", mergeOption, seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<AdminDashboardMng_function_ChartDelta_Result> AdminDashboardMng_function_ChartDelta(string season, Nullable<int> clientID, Nullable<bool> isIncludeSparepart, Nullable<bool> isIncludeWarehouseOrder)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var isIncludeSparepartParameter = isIncludeSparepart.HasValue ?
                new ObjectParameter("IsIncludeSparepart", isIncludeSparepart) :
                new ObjectParameter("IsIncludeSparepart", typeof(bool));
    
            var isIncludeWarehouseOrderParameter = isIncludeWarehouseOrder.HasValue ?
                new ObjectParameter("IsIncludeWarehouseOrder", isIncludeWarehouseOrder) :
                new ObjectParameter("IsIncludeWarehouseOrder", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdminDashboardMng_function_ChartDelta_Result>("AdminDashboardMng_function_ChartDelta", seasonParameter, clientIDParameter, isIncludeSparepartParameter, isIncludeWarehouseOrderParameter);
        }
    
        public virtual ObjectResult<WidgetMng_function_GetOfferNeedAttention_Result> WidgetMng_function_GetOfferNeedAttention(string season, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WidgetMng_function_GetOfferNeedAttention_Result>("WidgetMng_function_GetOfferNeedAttention", seasonParameter, userIDParameter);
        }
    }
}
