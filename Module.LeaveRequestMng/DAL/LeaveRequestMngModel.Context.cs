//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.LeaveRequestMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LeaveRequestMngEntities : DbContext
    {
        public LeaveRequestMngEntities()
            : base("name=LeaveRequestMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<LeaveRequestMng_Director_View> LeaveRequestMng_Director_View { get; set; }
        public virtual DbSet<LeaveRequestMng_Manager_View> LeaveRequestMng_Manager_View { get; set; }
        public virtual DbSet<LeaveRequest> LeaveRequest { get; set; }
        public virtual DbSet<LeaveRequestMng_LeaveRequest_View> LeaveRequestMng_LeaveRequest_View { get; set; }
        public virtual DbSet<LeaveRequestMng_LeaveRequestSearchResult_View> LeaveRequestMng_LeaveRequestSearchResult_View { get; set; }
    
        public virtual ObjectResult<LeaveRequestMng_LeaveRequestSearchResult_View> LeaveRequestMng_function_SearchLeaveRequest(string requesterUD, string requesterNM, Nullable<bool> isApproved, Nullable<bool> isDenied, Nullable<bool> hasLeft, string sortedBy, string sortedDirection)
        {
            var requesterUDParameter = requesterUD != null ?
                new ObjectParameter("RequesterUD", requesterUD) :
                new ObjectParameter("RequesterUD", typeof(string));
    
            var requesterNMParameter = requesterNM != null ?
                new ObjectParameter("RequesterNM", requesterNM) :
                new ObjectParameter("RequesterNM", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var isDeniedParameter = isDenied.HasValue ?
                new ObjectParameter("IsDenied", isDenied) :
                new ObjectParameter("IsDenied", typeof(bool));
    
            var hasLeftParameter = hasLeft.HasValue ?
                new ObjectParameter("HasLeft", hasLeft) :
                new ObjectParameter("HasLeft", typeof(bool));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LeaveRequestMng_LeaveRequestSearchResult_View>("LeaveRequestMng_function_SearchLeaveRequest", requesterUDParameter, requesterNMParameter, isApprovedParameter, isDeniedParameter, hasLeftParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<LeaveRequestMng_LeaveRequestSearchResult_View> LeaveRequestMng_function_SearchLeaveRequest(string requesterUD, string requesterNM, Nullable<bool> isApproved, Nullable<bool> isDenied, Nullable<bool> hasLeft, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var requesterUDParameter = requesterUD != null ?
                new ObjectParameter("RequesterUD", requesterUD) :
                new ObjectParameter("RequesterUD", typeof(string));
    
            var requesterNMParameter = requesterNM != null ?
                new ObjectParameter("RequesterNM", requesterNM) :
                new ObjectParameter("RequesterNM", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var isDeniedParameter = isDenied.HasValue ?
                new ObjectParameter("IsDenied", isDenied) :
                new ObjectParameter("IsDenied", typeof(bool));
    
            var hasLeftParameter = hasLeft.HasValue ?
                new ObjectParameter("HasLeft", hasLeft) :
                new ObjectParameter("HasLeft", typeof(bool));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LeaveRequestMng_LeaveRequestSearchResult_View>("LeaveRequestMng_function_SearchLeaveRequest", mergeOption, requesterUDParameter, requesterNMParameter, isApprovedParameter, isDeniedParameter, hasLeftParameter, sortedByParameter, sortedDirectionParameter);
        }
    }
}
