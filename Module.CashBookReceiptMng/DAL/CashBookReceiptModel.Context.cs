//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.CashBookReceiptMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CashBookReceiptEntities : DbContext
    {
        public CashBookReceiptEntities()
            : base("name=CashBookReceiptEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CashBook> CashBook { get; set; }
        public virtual DbSet<CashBookCostItem> CashBookCostItem { get; set; }
        public virtual DbSet<CashBookCostItemDetail> CashBookCostItemDetail { get; set; }
        public virtual DbSet<CashBookDocument> CashBookDocument { get; set; }
        public virtual DbSet<CashBookPaidBy> CashBookPaidBy { get; set; }
        public virtual DbSet<CashBookPostCost> CashBookPostCost { get; set; }
        public virtual DbSet<CashBookMng_CashBook_View> CashBookMng_CashBook_View { get; set; }
        public virtual DbSet<CashBookMng_CashBookLocation_View> CashBookMng_CashBookLocation_View { get; set; }
        public virtual DbSet<CashBookMng_CashBookSourceOfFlow_View> CashBookMng_CashBookSourceOfFlow_View { get; set; }
        public virtual DbSet<CashBookMng_CashBookType_View> CashBookMng_CashBookType_View { get; set; }
        public virtual DbSet<CashBookMng_CashBookCostItem_View> CashBookMng_CashBookCostItem_View { get; set; }
        public virtual DbSet<CashBookMng_CashBookCostItemDetail_View> CashBookMng_CashBookCostItemDetail_View { get; set; }
        public virtual DbSet<CashBookMng_CashBookPostCost_View> CashBookMng_CashBookPostCost_View { get; set; }
        public virtual DbSet<CashBookMng_CashBookPaidBy_View> CashBookMng_CashBookPaidBy_View { get; set; }
        public virtual DbSet<CashBookMng_CashBookPaidBy2_View> CashBookMng_CashBookPaidBy2_View { get; set; }
        public virtual DbSet<CashBookMng_CashBookDocument_View> CashBookMng_CashBookDocument_View { get; set; }
        public virtual DbSet<CashBookBalanceMng_CashBookBalance_View> CashBookBalanceMng_CashBookBalance_View { get; set; }
    
        public virtual ObjectResult<CashBookMng_CashBook_View> CashBookMng_function_CashBookSearchResult(string cashBookUD, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> cashBookTypeID, Nullable<int> cashBookSourceOfFlowID, Nullable<int> cashBookLocationID, Nullable<int> cashBookPaidByID, Nullable<int> cashBookPostCostID, Nullable<int> cashBookCostItemID, Nullable<int> cashBookCostItemDetailID, string orderBy, string orderDirection)
        {
            var cashBookUDParameter = cashBookUD != null ?
                new ObjectParameter("CashBookUD", cashBookUD) :
                new ObjectParameter("CashBookUD", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var cashBookTypeIDParameter = cashBookTypeID.HasValue ?
                new ObjectParameter("CashBookTypeID", cashBookTypeID) :
                new ObjectParameter("CashBookTypeID", typeof(int));
    
            var cashBookSourceOfFlowIDParameter = cashBookSourceOfFlowID.HasValue ?
                new ObjectParameter("CashBookSourceOfFlowID", cashBookSourceOfFlowID) :
                new ObjectParameter("CashBookSourceOfFlowID", typeof(int));
    
            var cashBookLocationIDParameter = cashBookLocationID.HasValue ?
                new ObjectParameter("CashBookLocationID", cashBookLocationID) :
                new ObjectParameter("CashBookLocationID", typeof(int));
    
            var cashBookPaidByIDParameter = cashBookPaidByID.HasValue ?
                new ObjectParameter("CashBookPaidByID", cashBookPaidByID) :
                new ObjectParameter("CashBookPaidByID", typeof(int));
    
            var cashBookPostCostIDParameter = cashBookPostCostID.HasValue ?
                new ObjectParameter("CashBookPostCostID", cashBookPostCostID) :
                new ObjectParameter("CashBookPostCostID", typeof(int));
    
            var cashBookCostItemIDParameter = cashBookCostItemID.HasValue ?
                new ObjectParameter("CashBookCostItemID", cashBookCostItemID) :
                new ObjectParameter("CashBookCostItemID", typeof(int));
    
            var cashBookCostItemDetailIDParameter = cashBookCostItemDetailID.HasValue ?
                new ObjectParameter("CashBookCostItemDetailID", cashBookCostItemDetailID) :
                new ObjectParameter("CashBookCostItemDetailID", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var orderDirectionParameter = orderDirection != null ?
                new ObjectParameter("OrderDirection", orderDirection) :
                new ObjectParameter("OrderDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashBookMng_CashBook_View>("CashBookMng_function_CashBookSearchResult", cashBookUDParameter, fromDateParameter, toDateParameter, cashBookTypeIDParameter, cashBookSourceOfFlowIDParameter, cashBookLocationIDParameter, cashBookPaidByIDParameter, cashBookPostCostIDParameter, cashBookCostItemIDParameter, cashBookCostItemDetailIDParameter, orderByParameter, orderDirectionParameter);
        }
    
        public virtual ObjectResult<CashBookMng_CashBook_View> CashBookMng_function_CashBookSearchResult(string cashBookUD, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> cashBookTypeID, Nullable<int> cashBookSourceOfFlowID, Nullable<int> cashBookLocationID, Nullable<int> cashBookPaidByID, Nullable<int> cashBookPostCostID, Nullable<int> cashBookCostItemID, Nullable<int> cashBookCostItemDetailID, string orderBy, string orderDirection, MergeOption mergeOption)
        {
            var cashBookUDParameter = cashBookUD != null ?
                new ObjectParameter("CashBookUD", cashBookUD) :
                new ObjectParameter("CashBookUD", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var cashBookTypeIDParameter = cashBookTypeID.HasValue ?
                new ObjectParameter("CashBookTypeID", cashBookTypeID) :
                new ObjectParameter("CashBookTypeID", typeof(int));
    
            var cashBookSourceOfFlowIDParameter = cashBookSourceOfFlowID.HasValue ?
                new ObjectParameter("CashBookSourceOfFlowID", cashBookSourceOfFlowID) :
                new ObjectParameter("CashBookSourceOfFlowID", typeof(int));
    
            var cashBookLocationIDParameter = cashBookLocationID.HasValue ?
                new ObjectParameter("CashBookLocationID", cashBookLocationID) :
                new ObjectParameter("CashBookLocationID", typeof(int));
    
            var cashBookPaidByIDParameter = cashBookPaidByID.HasValue ?
                new ObjectParameter("CashBookPaidByID", cashBookPaidByID) :
                new ObjectParameter("CashBookPaidByID", typeof(int));
    
            var cashBookPostCostIDParameter = cashBookPostCostID.HasValue ?
                new ObjectParameter("CashBookPostCostID", cashBookPostCostID) :
                new ObjectParameter("CashBookPostCostID", typeof(int));
    
            var cashBookCostItemIDParameter = cashBookCostItemID.HasValue ?
                new ObjectParameter("CashBookCostItemID", cashBookCostItemID) :
                new ObjectParameter("CashBookCostItemID", typeof(int));
    
            var cashBookCostItemDetailIDParameter = cashBookCostItemDetailID.HasValue ?
                new ObjectParameter("CashBookCostItemDetailID", cashBookCostItemDetailID) :
                new ObjectParameter("CashBookCostItemDetailID", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var orderDirectionParameter = orderDirection != null ?
                new ObjectParameter("OrderDirection", orderDirection) :
                new ObjectParameter("OrderDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashBookMng_CashBook_View>("CashBookMng_function_CashBookSearchResult", mergeOption, cashBookUDParameter, fromDateParameter, toDateParameter, cashBookTypeIDParameter, cashBookSourceOfFlowIDParameter, cashBookLocationIDParameter, cashBookPaidByIDParameter, cashBookPostCostIDParameter, cashBookCostItemIDParameter, cashBookCostItemDetailIDParameter, orderByParameter, orderDirectionParameter);
        }
    
        public virtual ObjectResult<CashBookMng_CashBookPaidBy_View> CashBookMng_function_CashBookPaidBy(Nullable<int> balanceMonth, Nullable<int> balanceYear)
        {
            var balanceMonthParameter = balanceMonth.HasValue ?
                new ObjectParameter("BalanceMonth", balanceMonth) :
                new ObjectParameter("BalanceMonth", typeof(int));
    
            var balanceYearParameter = balanceYear.HasValue ?
                new ObjectParameter("BalanceYear", balanceYear) :
                new ObjectParameter("BalanceYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashBookMng_CashBookPaidBy_View>("CashBookMng_function_CashBookPaidBy", balanceMonthParameter, balanceYearParameter);
        }
    
        public virtual ObjectResult<CashBookMng_CashBookPaidBy_View> CashBookMng_function_CashBookPaidBy(Nullable<int> balanceMonth, Nullable<int> balanceYear, MergeOption mergeOption)
        {
            var balanceMonthParameter = balanceMonth.HasValue ?
                new ObjectParameter("BalanceMonth", balanceMonth) :
                new ObjectParameter("BalanceMonth", typeof(int));
    
            var balanceYearParameter = balanceYear.HasValue ?
                new ObjectParameter("BalanceYear", balanceYear) :
                new ObjectParameter("BalanceYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CashBookMng_CashBookPaidBy_View>("CashBookMng_function_CashBookPaidBy", mergeOption, balanceMonthParameter, balanceYearParameter);
        }
    }
}
