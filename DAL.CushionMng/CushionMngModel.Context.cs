//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.CushionMng
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CushionMngEntities : DbContext
    {
        public CushionMngEntities()
            : base("name=CushionMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cushion> Cushion { get; set; }
        public virtual DbSet<CushionMng_Cushion_View> CushionMng_Cushion_View { get; set; }
        public virtual DbSet<CushionMng_CushionSearchResult_View> CushionMng_CushionSearchResult_View { get; set; }
    
        public virtual ObjectResult<CushionMng_CushionSearchResult_View> CushionMng_function_SearchCushion(string cushionUD, string cushionNM, string season, Nullable<bool> isStandard, string sortedBy, string sortedDirection)
        {
            var cushionUDParameter = cushionUD != null ?
                new ObjectParameter("CushionUD", cushionUD) :
                new ObjectParameter("CushionUD", typeof(string));
    
            var cushionNMParameter = cushionNM != null ?
                new ObjectParameter("CushionNM", cushionNM) :
                new ObjectParameter("CushionNM", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var isStandardParameter = isStandard.HasValue ?
                new ObjectParameter("IsStandard", isStandard) :
                new ObjectParameter("IsStandard", typeof(bool));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CushionMng_CushionSearchResult_View>("CushionMng_function_SearchCushion", cushionUDParameter, cushionNMParameter, seasonParameter, isStandardParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<CushionMng_CushionSearchResult_View> CushionMng_function_SearchCushion(string cushionUD, string cushionNM, string season, Nullable<bool> isStandard, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var cushionUDParameter = cushionUD != null ?
                new ObjectParameter("CushionUD", cushionUD) :
                new ObjectParameter("CushionUD", typeof(string));
    
            var cushionNMParameter = cushionNM != null ?
                new ObjectParameter("CushionNM", cushionNM) :
                new ObjectParameter("CushionNM", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var isStandardParameter = isStandard.HasValue ?
                new ObjectParameter("IsStandard", isStandard) :
                new ObjectParameter("IsStandard", typeof(bool));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CushionMng_CushionSearchResult_View>("CushionMng_function_SearchCushion", mergeOption, cushionUDParameter, cushionNMParameter, seasonParameter, isStandardParameter, sortedByParameter, sortedDirectionParameter);
        }
    }
}
