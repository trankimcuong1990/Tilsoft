//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.LoadingPlanMng
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LoadingPlanMngEntities : DbContext
    {
        public LoadingPlanMngEntities()
            : base("name=LoadingPlanMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<LoadingPlan> LoadingPlan { get; set; }
        public virtual DbSet<LoadingPlanSparepartDetail> LoadingPlanSparepartDetail { get; set; }
        public virtual DbSet<LoadingPlanMng_Booking_View> LoadingPlanMng_Booking_View { get; set; }
        public virtual DbSet<LoadingPlanMng_Factory_View> LoadingPlanMng_Factory_View { get; set; }
        public virtual DbSet<LoadingPlanMng_LoadingPlan_View> LoadingPlanMng_LoadingPlan_View { get; set; }
        public virtual DbSet<LoadingPlanMng_LoadingPlanSearchResult_View> LoadingPlanMng_LoadingPlanSearchResult_View { get; set; }
        public virtual DbSet<LoadingPlanMng_LoadingPlanSparepartDetail_View> LoadingPlanMng_LoadingPlanSparepartDetail_View { get; set; }
        public virtual DbSet<LoadingPlanMng_ProductSearchResult_View> LoadingPlanMng_ProductSearchResult_View { get; set; }
        public virtual DbSet<LoadingPlanMng_SparepartSearchResult_View> LoadingPlanMng_SparepartSearchResult_View { get; set; }
        public virtual DbSet<LoadingPlanMng_ParentLoadingPlan_View> LoadingPlanMng_ParentLoadingPlan_View { get; set; }
        public virtual DbSet<LoadingPlanDetail> LoadingPlanDetail { get; set; }
        public virtual DbSet<LoadingPlanMng_LoadingPlanDetail_View> LoadingPlanMng_LoadingPlanDetail_View { get; set; }
        public virtual DbSet<PurchasingInvoice> PurchasingInvoice { get; set; }
        public virtual DbSet<LoadingPlanMng_ChildLoadingPlan_View> LoadingPlanMng_ChildLoadingPlan_View { get; set; }
        public virtual DbSet<UserProfile> UserProfile { get; set; }
        public virtual DbSet<PurchasingInvoiceDetail> PurchasingInvoiceDetail { get; set; }
        public virtual DbSet<PurchasingInvoiceSparepartDetail> PurchasingInvoiceSparepartDetail { get; set; }
        public virtual DbSet<PackingListDetail> PackingListDetail { get; set; }
        public virtual DbSet<PackingListSparepartDetail> PackingListSparepartDetail { get; set; }
        public virtual DbSet<DocumentClient> DocumentClient { get; set; }
        public virtual DbSet<PLC> PLC { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<SupportMng_User2_View> SupportMng_User2_View { get; set; }
        public virtual DbSet<SupportMng_NotificationGroup_View> SupportMng_NotificationGroup_View { get; set; }
        public virtual DbSet<EmailNotificationMessage> EmailNotificationMessage { get; set; }
        public virtual DbSet<PackingList> PackingList { get; set; }
        public virtual DbSet<LoadingPlanMng_ChildLoadingPlan_OverView> LoadingPlanMng_ChildLoadingPlan_OverView { get; set; }
        public virtual DbSet<LoadingPlanMng_LoadingPlan_OverView> LoadingPlanMng_LoadingPlan_OverView { get; set; }
        public virtual DbSet<LoadingPlanMng_LoadingPlanDetail_OverView> LoadingPlanMng_LoadingPlanDetail_OverView { get; set; }
        public virtual DbSet<LoadingPlanMng_LoadingPlanSparepartDetail_OverView> LoadingPlanMng_LoadingPlanSparepartDetail_OverView { get; set; }
        public virtual DbSet<WorkOrder> WorkOrder { get; set; }
        public virtual DbSet<DeliveryNote> DeliveryNote { get; set; }
        public virtual DbSet<DeliveryNoteDetail> DeliveryNoteDetail { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<WorkOrderMng_WorkOrderDetail_View> WorkOrderMng_WorkOrderDetail_View { get; set; }
        public virtual DbSet<WorkOrderDetail> WorkOrderDetail { get; set; }
        public virtual DbSet<BOMMng_BOM_View> BOMMng_BOM_View { get; set; }
        public virtual DbSet<FactoryWarehouse> FactoryWarehouse { get; set; }
        public virtual DbSet<WorkOrderMng_WorkOrder_View> WorkOrderMng_WorkOrder_View { get; set; }
        public virtual DbSet<LoadingPlanSampleDetail> LoadingPlanSampleDetail { get; set; }
        public virtual DbSet<LoadingPlanMng_LoadingPlanSampleDetail_View> LoadingPlanMng_LoadingPlanSampleDetail_View { get; set; }
        public virtual DbSet<LoadingPlanMng_SampleProductSearchResult_View> LoadingPlanMng_SampleProductSearchResult_View { get; set; }
        public virtual DbSet<NotificationMessage> NotificationMessage { get; set; }
        public virtual DbSet<FW_NotificationGroupMember_View> FW_NotificationGroupMember_View { get; set; }
        public virtual DbSet<FW_NotificationGroupStatus_View> FW_NotificationGroupStatus_View { get; set; }
    
        public virtual ObjectResult<LoadingPlanMng_ProductSearchResult_View> LoadingPlanMng_function_SearchProduct(string proformaInvoiceNo, string clientUD, string factoryUD, string articleCode, string description, Nullable<int> factoryID, string sortedBy, string sortedDirection)
        {
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadingPlanMng_ProductSearchResult_View>("LoadingPlanMng_function_SearchProduct", proformaInvoiceNoParameter, clientUDParameter, factoryUDParameter, articleCodeParameter, descriptionParameter, factoryIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<LoadingPlanMng_ProductSearchResult_View> LoadingPlanMng_function_SearchProduct(string proformaInvoiceNo, string clientUD, string factoryUD, string articleCode, string description, Nullable<int> factoryID, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadingPlanMng_ProductSearchResult_View>("LoadingPlanMng_function_SearchProduct", mergeOption, proformaInvoiceNoParameter, clientUDParameter, factoryUDParameter, articleCodeParameter, descriptionParameter, factoryIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<LoadingPlanMng_SparepartSearchResult_View> LoadingPlanMng_function_SearchSparepart(string proformaInvoiceNo, string clientUD, string factoryUD, string articleCode, string description, Nullable<int> factoryID, string sortedBy, string sortedDirection)
        {
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadingPlanMng_SparepartSearchResult_View>("LoadingPlanMng_function_SearchSparepart", proformaInvoiceNoParameter, clientUDParameter, factoryUDParameter, articleCodeParameter, descriptionParameter, factoryIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<LoadingPlanMng_SparepartSearchResult_View> LoadingPlanMng_function_SearchSparepart(string proformaInvoiceNo, string clientUD, string factoryUD, string articleCode, string description, Nullable<int> factoryID, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadingPlanMng_SparepartSearchResult_View>("LoadingPlanMng_function_SearchSparepart", mergeOption, proformaInvoiceNoParameter, clientUDParameter, factoryUDParameter, articleCodeParameter, descriptionParameter, factoryIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<string> LoadingPlanMng_function_GenerateLoadingPlanCode(Nullable<int> factoryID)
        {
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("LoadingPlanMng_function_GenerateLoadingPlanCode", factoryIDParameter);
        }
    
        public virtual int LoadingPlanMng_function_SetStatus(Nullable<int> loadingPlanID, Nullable<int> updatedBy, Nullable<bool> isConfirmed, Nullable<bool> isLoaded, Nullable<bool> isShipped)
        {
            var loadingPlanIDParameter = loadingPlanID.HasValue ?
                new ObjectParameter("LoadingPlanID", loadingPlanID) :
                new ObjectParameter("LoadingPlanID", typeof(int));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var isConfirmedParameter = isConfirmed.HasValue ?
                new ObjectParameter("IsConfirmed", isConfirmed) :
                new ObjectParameter("IsConfirmed", typeof(bool));
    
            var isLoadedParameter = isLoaded.HasValue ?
                new ObjectParameter("IsLoaded", isLoaded) :
                new ObjectParameter("IsLoaded", typeof(bool));
    
            var isShippedParameter = isShipped.HasValue ?
                new ObjectParameter("IsShipped", isShipped) :
                new ObjectParameter("IsShipped", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoadingPlanMng_function_SetStatus", loadingPlanIDParameter, updatedByParameter, isConfirmedParameter, isLoadedParameter, isShippedParameter);
        }
    
        public virtual ObjectResult<LoadingPlanMng_LoadingPlanSearchResult_View> LoadingPlanMng_function_QuickSearchLoadingPlan(string searchQuery, string sortedBy, string sortedDirection)
        {
            var searchQueryParameter = searchQuery != null ?
                new ObjectParameter("searchQuery", searchQuery) :
                new ObjectParameter("searchQuery", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadingPlanMng_LoadingPlanSearchResult_View>("LoadingPlanMng_function_QuickSearchLoadingPlan", searchQueryParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<LoadingPlanMng_LoadingPlanSearchResult_View> LoadingPlanMng_function_QuickSearchLoadingPlan(string searchQuery, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var searchQueryParameter = searchQuery != null ?
                new ObjectParameter("searchQuery", searchQuery) :
                new ObjectParameter("searchQuery", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadingPlanMng_LoadingPlanSearchResult_View>("LoadingPlanMng_function_QuickSearchLoadingPlan", mergeOption, searchQueryParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual int LoadingPlanMng_function_CreateDocumentClient(Nullable<int> loadingPlanID)
        {
            var loadingPlanIDParameter = loadingPlanID.HasValue ?
                new ObjectParameter("LoadingPlanID", loadingPlanID) :
                new ObjectParameter("LoadingPlanID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoadingPlanMng_function_CreateDocumentClient", loadingPlanIDParameter);
        }
    
        public virtual ObjectResult<LoadingPlanMng_function_GetSearchResultExtra_Result> LoadingPlanMng_function_GetSearchResultExtra(string loadingPlanIDs)
        {
            var loadingPlanIDsParameter = loadingPlanIDs != null ?
                new ObjectParameter("LoadingPlanIDs", loadingPlanIDs) :
                new ObjectParameter("LoadingPlanIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadingPlanMng_function_GetSearchResultExtra_Result>("LoadingPlanMng_function_GetSearchResultExtra", loadingPlanIDsParameter);
        }
    
        public virtual int FactoryOrderInfoCacheMng_function_BuildCacheForLoadingPlan(Nullable<int> loadingPlanID)
        {
            var loadingPlanIDParameter = loadingPlanID.HasValue ?
                new ObjectParameter("LoadingPlanID", loadingPlanID) :
                new ObjectParameter("LoadingPlanID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FactoryOrderInfoCacheMng_function_BuildCacheForLoadingPlan", loadingPlanIDParameter);
        }
    
        public virtual ObjectResult<LoadingPlanMng_LoadingPlanSearchResult_View> LoadingPlanMng_function_SearchLoadingPlan(Nullable<int> requesterID, string loadingPlanUD, string clientUD, string proformaInvoiceNo, string factoryUD, string bookingUD, string bLNo, string containerNo, string articleCode, string description, Nullable<bool> isUploadingImageFinish, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string sortedBy, string sortedDirection)
        {
            var requesterIDParameter = requesterID.HasValue ?
                new ObjectParameter("RequesterID", requesterID) :
                new ObjectParameter("RequesterID", typeof(int));
    
            var loadingPlanUDParameter = loadingPlanUD != null ?
                new ObjectParameter("LoadingPlanUD", loadingPlanUD) :
                new ObjectParameter("LoadingPlanUD", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var bookingUDParameter = bookingUD != null ?
                new ObjectParameter("BookingUD", bookingUD) :
                new ObjectParameter("BookingUD", typeof(string));
    
            var bLNoParameter = bLNo != null ?
                new ObjectParameter("BLNo", bLNo) :
                new ObjectParameter("BLNo", typeof(string));
    
            var containerNoParameter = containerNo != null ?
                new ObjectParameter("ContainerNo", containerNo) :
                new ObjectParameter("ContainerNo", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isUploadingImageFinishParameter = isUploadingImageFinish.HasValue ?
                new ObjectParameter("IsUploadingImageFinish", isUploadingImageFinish) :
                new ObjectParameter("IsUploadingImageFinish", typeof(bool));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadingPlanMng_LoadingPlanSearchResult_View>("LoadingPlanMng_function_SearchLoadingPlan", requesterIDParameter, loadingPlanUDParameter, clientUDParameter, proformaInvoiceNoParameter, factoryUDParameter, bookingUDParameter, bLNoParameter, containerNoParameter, articleCodeParameter, descriptionParameter, isUploadingImageFinishParameter, fromDateParameter, toDateParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<LoadingPlanMng_LoadingPlanSearchResult_View> LoadingPlanMng_function_SearchLoadingPlan(Nullable<int> requesterID, string loadingPlanUD, string clientUD, string proformaInvoiceNo, string factoryUD, string bookingUD, string bLNo, string containerNo, string articleCode, string description, Nullable<bool> isUploadingImageFinish, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var requesterIDParameter = requesterID.HasValue ?
                new ObjectParameter("RequesterID", requesterID) :
                new ObjectParameter("RequesterID", typeof(int));
    
            var loadingPlanUDParameter = loadingPlanUD != null ?
                new ObjectParameter("LoadingPlanUD", loadingPlanUD) :
                new ObjectParameter("LoadingPlanUD", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var bookingUDParameter = bookingUD != null ?
                new ObjectParameter("BookingUD", bookingUD) :
                new ObjectParameter("BookingUD", typeof(string));
    
            var bLNoParameter = bLNo != null ?
                new ObjectParameter("BLNo", bLNo) :
                new ObjectParameter("BLNo", typeof(string));
    
            var containerNoParameter = containerNo != null ?
                new ObjectParameter("ContainerNo", containerNo) :
                new ObjectParameter("ContainerNo", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isUploadingImageFinishParameter = isUploadingImageFinish.HasValue ?
                new ObjectParameter("IsUploadingImageFinish", isUploadingImageFinish) :
                new ObjectParameter("IsUploadingImageFinish", typeof(bool));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadingPlanMng_LoadingPlanSearchResult_View>("LoadingPlanMng_function_SearchLoadingPlan", mergeOption, requesterIDParameter, loadingPlanUDParameter, clientUDParameter, proformaInvoiceNoParameter, factoryUDParameter, bookingUDParameter, bLNoParameter, containerNoParameter, articleCodeParameter, descriptionParameter, isUploadingImageFinishParameter, fromDateParameter, toDateParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual int DeliveryNoteMng_function_GenerateDeliveryNoteUD(Nullable<int> deliveryNoteID, Nullable<int> companyID, Nullable<int> deliveryYear, Nullable<int> deliveryMonth)
        {
            var deliveryNoteIDParameter = deliveryNoteID.HasValue ?
                new ObjectParameter("DeliveryNoteID", deliveryNoteID) :
                new ObjectParameter("DeliveryNoteID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var deliveryYearParameter = deliveryYear.HasValue ?
                new ObjectParameter("DeliveryYear", deliveryYear) :
                new ObjectParameter("DeliveryYear", typeof(int));
    
            var deliveryMonthParameter = deliveryMonth.HasValue ?
                new ObjectParameter("DeliveryMonth", deliveryMonth) :
                new ObjectParameter("DeliveryMonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeliveryNoteMng_function_GenerateDeliveryNoteUD", deliveryNoteIDParameter, companyIDParameter, deliveryYearParameter, deliveryMonthParameter);
        }
    
        public virtual ObjectResult<LoadingPlanMng_SampleProductSearchResult_View> LoadingPlanMng_function_SearchSampleProduct(string proformaInvoiceNo, string clientUD, string factoryUD, string articleCode, string description, Nullable<int> factoryID, string sortedBy, string sortedDirection)
        {
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadingPlanMng_SampleProductSearchResult_View>("LoadingPlanMng_function_SearchSampleProduct", proformaInvoiceNoParameter, clientUDParameter, factoryUDParameter, articleCodeParameter, descriptionParameter, factoryIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<LoadingPlanMng_SampleProductSearchResult_View> LoadingPlanMng_function_SearchSampleProduct(string proformaInvoiceNo, string clientUD, string factoryUD, string articleCode, string description, Nullable<int> factoryID, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadingPlanMng_SampleProductSearchResult_View>("LoadingPlanMng_function_SearchSampleProduct", mergeOption, proformaInvoiceNoParameter, clientUDParameter, factoryUDParameter, articleCodeParameter, descriptionParameter, factoryIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LoadingPlanMng_Function_GetUserGroupIdByUserId(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LoadingPlanMng_Function_GetUserGroupIdByUserId", useridParameter);
        }
    
        public virtual int LoadingPlanMng_function_CreateBookingPlan(Nullable<int> loadingPlanID, Nullable<int> bookingID)
        {
            var loadingPlanIDParameter = loadingPlanID.HasValue ?
                new ObjectParameter("LoadingPlanID", loadingPlanID) :
                new ObjectParameter("LoadingPlanID", typeof(int));
    
            var bookingIDParameter = bookingID.HasValue ?
                new ObjectParameter("BookingID", bookingID) :
                new ObjectParameter("BookingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoadingPlanMng_function_CreateBookingPlan", loadingPlanIDParameter, bookingIDParameter);
        }
    }
}
