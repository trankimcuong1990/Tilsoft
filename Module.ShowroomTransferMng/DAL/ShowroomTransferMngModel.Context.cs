//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.ShowroomTransferMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ShowroomTransferMngEntities : DbContext
    {
        public ShowroomTransferMngEntities()
            : base("name=ShowroomTransferMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ShowroomTransfer> ShowroomTransfer { get; set; }
        public virtual DbSet<ShowroomTransferMng_ShowroomTransferSearchResult_View> ShowroomTransferMng_ShowroomTransferSearchResult_View { get; set; }
        public virtual DbSet<ShowroomTransferMng_ShowroomTransfer_View> ShowroomTransferMng_ShowroomTransfer_View { get; set; }
        public virtual DbSet<ShowroomTransferMng_ShowroomTransferDetail_View> ShowroomTransferMng_ShowroomTransferDetail_View { get; set; }
        public virtual DbSet<DeliveryNote> DeliveryNote { get; set; }
        public virtual DbSet<DeliveryNoteDetail> DeliveryNoteDetail { get; set; }
        public virtual DbSet<ShowroomTransferMng_FactoryWarehouse_View> ShowroomTransferMng_FactoryWarehouse_View { get; set; }
        public virtual DbSet<ShowroomTransferMng_FactoryWarehousePallet_View> ShowroomTransferMng_FactoryWarehousePallet_View { get; set; }
        public virtual DbSet<ReceivingNote> ReceivingNote { get; set; }
        public virtual DbSet<ReceivingNoteDetail> ReceivingNoteDetail { get; set; }
        public virtual DbSet<FactoryWarehouse> FactoryWarehouse { get; set; }
    
        public virtual ObjectResult<ShowroomTransferMng_ShowroomTransferSearchResult_View> ShowroomTransferMng_function_ShowroomTransferSearchResult(string showroomTransferUD, string showroomTransferDate, Nullable<int> fromWarehouseID, Nullable<int> toWarehouseID, string orderBy, string orderDirection)
        {
            var showroomTransferUDParameter = showroomTransferUD != null ?
                new ObjectParameter("showroomTransferUD", showroomTransferUD) :
                new ObjectParameter("showroomTransferUD", typeof(string));
    
            var showroomTransferDateParameter = showroomTransferDate != null ?
                new ObjectParameter("showroomTransferDate", showroomTransferDate) :
                new ObjectParameter("showroomTransferDate", typeof(string));
    
            var fromWarehouseIDParameter = fromWarehouseID.HasValue ?
                new ObjectParameter("fromWarehouseID", fromWarehouseID) :
                new ObjectParameter("fromWarehouseID", typeof(int));
    
            var toWarehouseIDParameter = toWarehouseID.HasValue ?
                new ObjectParameter("toWarehouseID", toWarehouseID) :
                new ObjectParameter("toWarehouseID", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("orderBy", orderBy) :
                new ObjectParameter("orderBy", typeof(string));
    
            var orderDirectionParameter = orderDirection != null ?
                new ObjectParameter("orderDirection", orderDirection) :
                new ObjectParameter("orderDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowroomTransferMng_ShowroomTransferSearchResult_View>("ShowroomTransferMng_function_ShowroomTransferSearchResult", showroomTransferUDParameter, showroomTransferDateParameter, fromWarehouseIDParameter, toWarehouseIDParameter, orderByParameter, orderDirectionParameter);
        }
    
        public virtual ObjectResult<ShowroomTransferMng_ShowroomTransferSearchResult_View> ShowroomTransferMng_function_ShowroomTransferSearchResult(string showroomTransferUD, string showroomTransferDate, Nullable<int> fromWarehouseID, Nullable<int> toWarehouseID, string orderBy, string orderDirection, MergeOption mergeOption)
        {
            var showroomTransferUDParameter = showroomTransferUD != null ?
                new ObjectParameter("showroomTransferUD", showroomTransferUD) :
                new ObjectParameter("showroomTransferUD", typeof(string));
    
            var showroomTransferDateParameter = showroomTransferDate != null ?
                new ObjectParameter("showroomTransferDate", showroomTransferDate) :
                new ObjectParameter("showroomTransferDate", typeof(string));
    
            var fromWarehouseIDParameter = fromWarehouseID.HasValue ?
                new ObjectParameter("fromWarehouseID", fromWarehouseID) :
                new ObjectParameter("fromWarehouseID", typeof(int));
    
            var toWarehouseIDParameter = toWarehouseID.HasValue ?
                new ObjectParameter("toWarehouseID", toWarehouseID) :
                new ObjectParameter("toWarehouseID", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("orderBy", orderBy) :
                new ObjectParameter("orderBy", typeof(string));
    
            var orderDirectionParameter = orderDirection != null ?
                new ObjectParameter("orderDirection", orderDirection) :
                new ObjectParameter("orderDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowroomTransferMng_ShowroomTransferSearchResult_View>("ShowroomTransferMng_function_ShowroomTransferSearchResult", mergeOption, showroomTransferUDParameter, showroomTransferDateParameter, fromWarehouseIDParameter, toWarehouseIDParameter, orderByParameter, orderDirectionParameter);
        }
    
        public virtual int DeliveryNoteMng_function_GenerateDeliveryNoteUD(Nullable<int> deliveryNoteID, Nullable<int> companyID, Nullable<int> deliveryYear, Nullable<int> deliveryMonth)
        {
            var deliveryNoteIDParameter = deliveryNoteID.HasValue ?
                new ObjectParameter("DeliveryNoteID", deliveryNoteID) :
                new ObjectParameter("DeliveryNoteID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var deliveryYearParameter = deliveryYear.HasValue ?
                new ObjectParameter("DeliveryYear", deliveryYear) :
                new ObjectParameter("DeliveryYear", typeof(int));
    
            var deliveryMonthParameter = deliveryMonth.HasValue ?
                new ObjectParameter("DeliveryMonth", deliveryMonth) :
                new ObjectParameter("DeliveryMonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeliveryNoteMng_function_GenerateDeliveryNoteUD", deliveryNoteIDParameter, companyIDParameter, deliveryYearParameter, deliveryMonthParameter);
        }
    
        public virtual int ReceivingNoteMng_function_GenerateReceivingNoteUD(Nullable<int> receivingNoteID, Nullable<int> companyID, Nullable<int> receivingYear, Nullable<int> receivingMonth)
        {
            var receivingNoteIDParameter = receivingNoteID.HasValue ?
                new ObjectParameter("ReceivingNoteID", receivingNoteID) :
                new ObjectParameter("ReceivingNoteID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var receivingYearParameter = receivingYear.HasValue ?
                new ObjectParameter("ReceivingYear", receivingYear) :
                new ObjectParameter("ReceivingYear", typeof(int));
    
            var receivingMonthParameter = receivingMonth.HasValue ?
                new ObjectParameter("ReceivingMonth", receivingMonth) :
                new ObjectParameter("ReceivingMonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReceivingNoteMng_function_GenerateReceivingNoteUD", receivingNoteIDParameter, companyIDParameter, receivingYearParameter, receivingMonthParameter);
        }
    
        public virtual ObjectResult<string> ShowroomTransferMng_function_GenerateShowroomTransferUD(Nullable<int> showroomTransferID, Nullable<int> companyID, Nullable<int> year, Nullable<int> month)
        {
            var showroomTransferIDParameter = showroomTransferID.HasValue ?
                new ObjectParameter("ShowroomTransferID", showroomTransferID) :
                new ObjectParameter("ShowroomTransferID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ShowroomTransferMng_function_GenerateShowroomTransferUD", showroomTransferIDParameter, companyIDParameter, yearParameter, monthParameter);
        }
    }
}
