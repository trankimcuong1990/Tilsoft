//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.CushionColorMng
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CushionColorMngEntities : DbContext
    {
        public CushionColorMngEntities()
            : base("name=CushionColorMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CushionColorMng_CushionColorSearchResult_View> CushionColorMng_CushionColorSearchResult_View { get; set; }
        public virtual DbSet<EmailNotificationMessage> EmailNotificationMessage { get; set; }
        public virtual DbSet<EmployeeMng_Employee_View> EmployeeMng_Employee_View { get; set; }
        public virtual DbSet<CushionColorMng_CushionColorTestReport_View> CushionColorMng_CushionColorTestReport_View { get; set; }
        public virtual DbSet<CushionColorMng_CushionTesting_View> CushionColorMng_CushionTesting_View { get; set; }
        public virtual DbSet<CushionColorMng_CushionTestingFile_View> CushionColorMng_CushionTestingFile_View { get; set; }
        public virtual DbSet<CushionColorMng_CushionTestingStandard_View> CushionColorMng_CushionTestingStandard_View { get; set; }
        public virtual DbSet<CushionColorMng_CushionColorProductGroup_View> CushionColorMng_CushionColorProductGroup_View { get; set; }
        public virtual DbSet<CushionColor> CushionColor { get; set; }
        public virtual DbSet<CushionColorProductGroup> CushionColorProductGroup { get; set; }
        public virtual DbSet<CushionColorTestReport> CushionColorTestReport { get; set; }
        public virtual DbSet<CushionColorMng_CushionColor_View> CushionColorMng_CushionColor_View { get; set; }
        public virtual DbSet<CushionColorMng_CushionColorCheck_View> CushionColorMng_CushionColorCheck_View { get; set; }
        public virtual DbSet<NotificationMessage> NotificationMessage { get; set; }
    
        public virtual ObjectResult<CushionColorMng_CushionColorSearchResult_View> CushionColorMng_function_SearchCushionColor(string cushionColorUD, string cushionColorNM, string season, Nullable<bool> isStandard, Nullable<bool> isEnabled, Nullable<int> productGroupID, Nullable<int> cushionTypeID, string sortedBy, string sortedDirection)
        {
            var cushionColorUDParameter = cushionColorUD != null ?
                new ObjectParameter("CushionColorUD", cushionColorUD) :
                new ObjectParameter("CushionColorUD", typeof(string));
    
            var cushionColorNMParameter = cushionColorNM != null ?
                new ObjectParameter("CushionColorNM", cushionColorNM) :
                new ObjectParameter("CushionColorNM", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var isStandardParameter = isStandard.HasValue ?
                new ObjectParameter("IsStandard", isStandard) :
                new ObjectParameter("IsStandard", typeof(bool));
    
            var isEnabledParameter = isEnabled.HasValue ?
                new ObjectParameter("IsEnabled", isEnabled) :
                new ObjectParameter("IsEnabled", typeof(bool));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var cushionTypeIDParameter = cushionTypeID.HasValue ?
                new ObjectParameter("CushionTypeID", cushionTypeID) :
                new ObjectParameter("CushionTypeID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CushionColorMng_CushionColorSearchResult_View>("CushionColorMng_function_SearchCushionColor", cushionColorUDParameter, cushionColorNMParameter, seasonParameter, isStandardParameter, isEnabledParameter, productGroupIDParameter, cushionTypeIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<CushionColorMng_CushionColorSearchResult_View> CushionColorMng_function_SearchCushionColor(string cushionColorUD, string cushionColorNM, string season, Nullable<bool> isStandard, Nullable<bool> isEnabled, Nullable<int> productGroupID, Nullable<int> cushionTypeID, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var cushionColorUDParameter = cushionColorUD != null ?
                new ObjectParameter("CushionColorUD", cushionColorUD) :
                new ObjectParameter("CushionColorUD", typeof(string));
    
            var cushionColorNMParameter = cushionColorNM != null ?
                new ObjectParameter("CushionColorNM", cushionColorNM) :
                new ObjectParameter("CushionColorNM", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var isStandardParameter = isStandard.HasValue ?
                new ObjectParameter("IsStandard", isStandard) :
                new ObjectParameter("IsStandard", typeof(bool));
    
            var isEnabledParameter = isEnabled.HasValue ?
                new ObjectParameter("IsEnabled", isEnabled) :
                new ObjectParameter("IsEnabled", typeof(bool));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var cushionTypeIDParameter = cushionTypeID.HasValue ?
                new ObjectParameter("CushionTypeID", cushionTypeID) :
                new ObjectParameter("CushionTypeID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CushionColorMng_CushionColorSearchResult_View>("CushionColorMng_function_SearchCushionColor", mergeOption, cushionColorUDParameter, cushionColorNMParameter, seasonParameter, isStandardParameter, isEnabledParameter, productGroupIDParameter, cushionTypeIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<string> CushionColorMng_function_GenerateCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CushionColorMng_function_GenerateCode");
        }
    }
}
