//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.ProductMng
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProductMngEntities : DbContext
    {
        public ProductMngEntities()
            : base("name=ProductMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<ProductMng_Model_View> ProductMng_Model_View { get; set; }
        public virtual DbSet<ProductMng_Product_View> ProductMng_Product_View { get; set; }
        public virtual DbSet<ProductMng_ProductPiece_View> ProductMng_ProductPiece_View { get; set; }
        public virtual DbSet<ProductPiece> ProductPiece { get; set; }
        public virtual DbSet<ProductMng_Package_Constant_View> ProductMng_Package_Constant_View { get; set; }
        public virtual DbSet<ProductColli> ProductColli { get; set; }
        public virtual DbSet<ProductColliPiece> ProductColliPiece { get; set; }
        public virtual DbSet<ProductSetEANCode> ProductSetEANCode { get; set; }
        public virtual DbSet<ProductMng_ProductColli_View> ProductMng_ProductColli_View { get; set; }
        public virtual DbSet<ProductMng_ProductColliPiece_View> ProductMng_ProductColliPiece_View { get; set; }
        public virtual DbSet<ProductMng_ProductSetEANCode_View> ProductMng_ProductSetEANCode_View { get; set; }
        public virtual DbSet<ProductECommerceSpec> ProductECommerceSpec { get; set; }
        public virtual DbSet<ProductMng_ProductECommerceSpec_View> ProductMng_ProductECommerceSpec_View { get; set; }
        public virtual DbSet<ProductMng_CheckProductInOffer_View> ProductMng_CheckProductInOffer_View { get; set; }
        public virtual DbSet<ProductMng_ModelPackagingMethodOption2_View> ProductMng_ModelPackagingMethodOption2_View { get; set; }
        public virtual DbSet<ProductMng_ProductSearchResult_View> ProductMng_ProductSearchResult_View { get; set; }
    
        public virtual ObjectResult<ProductMng_ProductSearchResult_View> ProductMng_function_SearchProduct(string articleCode, string description, string season, Nullable<int> cataloguePageNumber, Nullable<bool> isConfirmed, Nullable<int> productTypeID, string eANCode, string sortedBy, string sortedDirection)
        {
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var cataloguePageNumberParameter = cataloguePageNumber.HasValue ?
                new ObjectParameter("CataloguePageNumber", cataloguePageNumber) :
                new ObjectParameter("CataloguePageNumber", typeof(int));
    
            var isConfirmedParameter = isConfirmed.HasValue ?
                new ObjectParameter("IsConfirmed", isConfirmed) :
                new ObjectParameter("IsConfirmed", typeof(bool));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var eANCodeParameter = eANCode != null ?
                new ObjectParameter("EANCode", eANCode) :
                new ObjectParameter("EANCode", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductMng_ProductSearchResult_View>("ProductMng_function_SearchProduct", articleCodeParameter, descriptionParameter, seasonParameter, cataloguePageNumberParameter, isConfirmedParameter, productTypeIDParameter, eANCodeParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ProductMng_ProductSearchResult_View> ProductMng_function_SearchProduct(string articleCode, string description, string season, Nullable<int> cataloguePageNumber, Nullable<bool> isConfirmed, Nullable<int> productTypeID, string eANCode, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var cataloguePageNumberParameter = cataloguePageNumber.HasValue ?
                new ObjectParameter("CataloguePageNumber", cataloguePageNumber) :
                new ObjectParameter("CataloguePageNumber", typeof(int));
    
            var isConfirmedParameter = isConfirmed.HasValue ?
                new ObjectParameter("IsConfirmed", isConfirmed) :
                new ObjectParameter("IsConfirmed", typeof(bool));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var eANCodeParameter = eANCode != null ?
                new ObjectParameter("EANCode", eANCode) :
                new ObjectParameter("EANCode", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductMng_ProductSearchResult_View>("ProductMng_function_SearchProduct", mergeOption, articleCodeParameter, descriptionParameter, seasonParameter, cataloguePageNumberParameter, isConfirmedParameter, productTypeIDParameter, eANCodeParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual int ProductMng_function_CreateProductPiece(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductMng_function_CreateProductPiece", productIDParameter);
        }
    
        public virtual int ProductMng_function_CreateProductECommerceSpec(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductMng_function_CreateProductECommerceSpec", productIDParameter);
        }
    
        public virtual ObjectResult<ProductMng_ModelPackagingMethodOption2_View> ProductMng_function_getPackagingMethod(Nullable<int> modelID)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductMng_ModelPackagingMethodOption2_View>("ProductMng_function_getPackagingMethod", modelIDParameter);
        }
    
        public virtual ObjectResult<ProductMng_ModelPackagingMethodOption2_View> ProductMng_function_getPackagingMethod(Nullable<int> modelID, MergeOption mergeOption)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductMng_ModelPackagingMethodOption2_View>("ProductMng_function_getPackagingMethod", mergeOption, modelIDParameter);
        }
    }
}
