//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.FactoryLocationMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FactoryLocationMngEntities : DbContext
    {
        public FactoryLocationMngEntities()
            : base("name=FactoryLocationMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Location> Location { get; set; }
        public virtual DbSet<FactoryLocationMng_Location_View> FactoryLocationMng_Location_View { get; set; }
    
        public virtual ObjectResult<FactoryLocationMng_Location_View> FactoryLocationMng_function_LocationSearchResult(string locationUD, string locationNM, Nullable<int> manufacturerCountryID, string orderBy, string orderDirection)
        {
            var locationUDParameter = locationUD != null ?
                new ObjectParameter("LocationUD", locationUD) :
                new ObjectParameter("LocationUD", typeof(string));
    
            var locationNMParameter = locationNM != null ?
                new ObjectParameter("LocationNM", locationNM) :
                new ObjectParameter("LocationNM", typeof(string));
    
            var manufacturerCountryIDParameter = manufacturerCountryID.HasValue ?
                new ObjectParameter("ManufacturerCountryID", manufacturerCountryID) :
                new ObjectParameter("ManufacturerCountryID", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var orderDirectionParameter = orderDirection != null ?
                new ObjectParameter("OrderDirection", orderDirection) :
                new ObjectParameter("OrderDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryLocationMng_Location_View>("FactoryLocationMng_function_LocationSearchResult", locationUDParameter, locationNMParameter, manufacturerCountryIDParameter, orderByParameter, orderDirectionParameter);
        }
    
        public virtual ObjectResult<FactoryLocationMng_Location_View> FactoryLocationMng_function_LocationSearchResult(string locationUD, string locationNM, Nullable<int> manufacturerCountryID, string orderBy, string orderDirection, MergeOption mergeOption)
        {
            var locationUDParameter = locationUD != null ?
                new ObjectParameter("LocationUD", locationUD) :
                new ObjectParameter("LocationUD", typeof(string));
    
            var locationNMParameter = locationNM != null ?
                new ObjectParameter("LocationNM", locationNM) :
                new ObjectParameter("LocationNM", typeof(string));
    
            var manufacturerCountryIDParameter = manufacturerCountryID.HasValue ?
                new ObjectParameter("ManufacturerCountryID", manufacturerCountryID) :
                new ObjectParameter("ManufacturerCountryID", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var orderDirectionParameter = orderDirection != null ?
                new ObjectParameter("OrderDirection", orderDirection) :
                new ObjectParameter("OrderDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryLocationMng_Location_View>("FactoryLocationMng_function_LocationSearchResult", mergeOption, locationUDParameter, locationNMParameter, manufacturerCountryIDParameter, orderByParameter, orderDirectionParameter);
        }
    }
}
