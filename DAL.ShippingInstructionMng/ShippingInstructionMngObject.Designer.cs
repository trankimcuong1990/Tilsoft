//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DAL.ShippingInstructionMng {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ShippingInstructionMngObject")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ShippingInstructionMngObject : global::System.Data.DataSet {
        
        private ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable tableShippingInstructionMng_ShippingInstructionExportExcel_View;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public ShippingInstructionMngObject() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected ShippingInstructionMngObject(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ShippingInstructionMng_ShippingInstructionExportExcel_View"] != null)) {
                    base.Tables.Add(new ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable(ds.Tables["ShippingInstructionMng_ShippingInstructionExportExcel_View"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable ShippingInstructionMng_ShippingInstructionExportExcel_View {
            get {
                return this.tableShippingInstructionMng_ShippingInstructionExportExcel_View;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ShippingInstructionMngObject cln = ((ShippingInstructionMngObject)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ShippingInstructionMng_ShippingInstructionExportExcel_View"] != null)) {
                    base.Tables.Add(new ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable(ds.Tables["ShippingInstructionMng_ShippingInstructionExportExcel_View"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableShippingInstructionMng_ShippingInstructionExportExcel_View = ((ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable)(base.Tables["ShippingInstructionMng_ShippingInstructionExportExcel_View"]));
            if ((initTable == true)) {
                if ((this.tableShippingInstructionMng_ShippingInstructionExportExcel_View != null)) {
                    this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ShippingInstructionMngObject";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ShippingInstructionMngObject.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableShippingInstructionMng_ShippingInstructionExportExcel_View = new ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable();
            base.Tables.Add(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeShippingInstructionMng_ShippingInstructionExportExcel_View() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ShippingInstructionMngObject ds = new ShippingInstructionMngObject();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChangeEventHandler(object sender, ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable : global::System.Data.TypedTableBase<ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow> {
            
            private global::System.Data.DataColumn columnShippingInstructionID;
            
            private global::System.Data.DataColumn columnProformaInvoiceNo;
            
            private global::System.Data.DataColumn columnClientUD;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnClientPO;
            
            private global::System.Data.DataColumn columnPriorityNM;
            
            private global::System.Data.DataColumn columnSubmissionNL;
            
            private global::System.Data.DataColumn columnPoDName;
            
            private global::System.Data.DataColumn columnClientCountryNM;
            
            private global::System.Data.DataColumn columnNotifyTypeNM;
            
            private global::System.Data.DataColumn columnForwarderNM;
            
            private global::System.Data.DataColumn columnConsigneeTypeNM;
            
            private global::System.Data.DataColumn columnIsLCStatus;
            
            private global::System.Data.DataColumn columnIsDefaultStatus;
            
            private global::System.Data.DataColumn columnIsTelexStatus;
            
            private global::System.Data.DataColumn columnIsSampleStatus;
            
            private global::System.Data.DataColumn columnIsLC;
            
            private global::System.Data.DataColumn columnIsDefault;
            
            private global::System.Data.DataColumn columnIsTelex;
            
            private global::System.Data.DataColumn columnIsSample;
            
            private global::System.Data.DataColumn columnIsConfirmed;
            
            private global::System.Data.DataColumn columnPODID;
            
            private global::System.Data.DataColumn columnNotifyTypeID;
            
            private global::System.Data.DataColumn columnPriority;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable() {
                this.TableName = "ShippingInstructionMng_ShippingInstructionExportExcel_View";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ShippingInstructionIDColumn {
                get {
                    return this.columnShippingInstructionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProformaInvoiceNoColumn {
                get {
                    return this.columnProformaInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientUDColumn {
                get {
                    return this.columnClientUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientPOColumn {
                get {
                    return this.columnClientPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PriorityNMColumn {
                get {
                    return this.columnPriorityNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SubmissionNLColumn {
                get {
                    return this.columnSubmissionNL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PoDNameColumn {
                get {
                    return this.columnPoDName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClientCountryNMColumn {
                get {
                    return this.columnClientCountryNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NotifyTypeNMColumn {
                get {
                    return this.columnNotifyTypeNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ForwarderNMColumn {
                get {
                    return this.columnForwarderNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ConsigneeTypeNMColumn {
                get {
                    return this.columnConsigneeTypeNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsLCStatusColumn {
                get {
                    return this.columnIsLCStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsDefaultStatusColumn {
                get {
                    return this.columnIsDefaultStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsTelexStatusColumn {
                get {
                    return this.columnIsTelexStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsSampleStatusColumn {
                get {
                    return this.columnIsSampleStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsLCColumn {
                get {
                    return this.columnIsLC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsDefaultColumn {
                get {
                    return this.columnIsDefault;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsTelexColumn {
                get {
                    return this.columnIsTelex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsSampleColumn {
                get {
                    return this.columnIsSample;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsConfirmedColumn {
                get {
                    return this.columnIsConfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PODIDColumn {
                get {
                    return this.columnPODID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NotifyTypeIDColumn {
                get {
                    return this.columnNotifyTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PriorityColumn {
                get {
                    return this.columnPriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow this[int index] {
                get {
                    return ((ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChangeEventHandler ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChangeEventHandler ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChangeEventHandler ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChangeEventHandler ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddShippingInstructionMng_ShippingInstructionExportExcel_ViewRow(ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow AddShippingInstructionMng_ShippingInstructionExportExcel_ViewRow(
                        int ShippingInstructionID, 
                        string ProformaInvoiceNo, 
                        string ClientUD, 
                        string Status, 
                        string ClientPO, 
                        string PriorityNM, 
                        string SubmissionNL, 
                        string PoDName, 
                        string ClientCountryNM, 
                        string NotifyTypeNM, 
                        string ForwarderNM, 
                        string ConsigneeTypeNM, 
                        string IsLCStatus, 
                        string IsDefaultStatus, 
                        string IsTelexStatus, 
                        string IsSampleStatus, 
                        bool IsLC, 
                        bool IsDefault, 
                        bool IsTelex, 
                        bool IsSample, 
                        bool IsConfirmed, 
                        int PODID, 
                        int NotifyTypeID, 
                        string Priority) {
                ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow rowShippingInstructionMng_ShippingInstructionExportExcel_ViewRow = ((ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ShippingInstructionID,
                        ProformaInvoiceNo,
                        ClientUD,
                        Status,
                        ClientPO,
                        PriorityNM,
                        SubmissionNL,
                        PoDName,
                        ClientCountryNM,
                        NotifyTypeNM,
                        ForwarderNM,
                        ConsigneeTypeNM,
                        IsLCStatus,
                        IsDefaultStatus,
                        IsTelexStatus,
                        IsSampleStatus,
                        IsLC,
                        IsDefault,
                        IsTelex,
                        IsSample,
                        IsConfirmed,
                        PODID,
                        NotifyTypeID,
                        Priority};
                rowShippingInstructionMng_ShippingInstructionExportExcel_ViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowShippingInstructionMng_ShippingInstructionExportExcel_ViewRow);
                return rowShippingInstructionMng_ShippingInstructionExportExcel_ViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow FindByShippingInstructionID(int ShippingInstructionID) {
                return ((ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow)(this.Rows.Find(new object[] {
                            ShippingInstructionID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable cln = ((ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnShippingInstructionID = base.Columns["ShippingInstructionID"];
                this.columnProformaInvoiceNo = base.Columns["ProformaInvoiceNo"];
                this.columnClientUD = base.Columns["ClientUD"];
                this.columnStatus = base.Columns["Status"];
                this.columnClientPO = base.Columns["ClientPO"];
                this.columnPriorityNM = base.Columns["PriorityNM"];
                this.columnSubmissionNL = base.Columns["SubmissionNL"];
                this.columnPoDName = base.Columns["PoDName"];
                this.columnClientCountryNM = base.Columns["ClientCountryNM"];
                this.columnNotifyTypeNM = base.Columns["NotifyTypeNM"];
                this.columnForwarderNM = base.Columns["ForwarderNM"];
                this.columnConsigneeTypeNM = base.Columns["ConsigneeTypeNM"];
                this.columnIsLCStatus = base.Columns["IsLCStatus"];
                this.columnIsDefaultStatus = base.Columns["IsDefaultStatus"];
                this.columnIsTelexStatus = base.Columns["IsTelexStatus"];
                this.columnIsSampleStatus = base.Columns["IsSampleStatus"];
                this.columnIsLC = base.Columns["IsLC"];
                this.columnIsDefault = base.Columns["IsDefault"];
                this.columnIsTelex = base.Columns["IsTelex"];
                this.columnIsSample = base.Columns["IsSample"];
                this.columnIsConfirmed = base.Columns["IsConfirmed"];
                this.columnPODID = base.Columns["PODID"];
                this.columnNotifyTypeID = base.Columns["NotifyTypeID"];
                this.columnPriority = base.Columns["Priority"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnShippingInstructionID = new global::System.Data.DataColumn("ShippingInstructionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingInstructionID);
                this.columnProformaInvoiceNo = new global::System.Data.DataColumn("ProformaInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProformaInvoiceNo);
                this.columnClientUD = new global::System.Data.DataColumn("ClientUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientUD);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnClientPO = new global::System.Data.DataColumn("ClientPO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientPO);
                this.columnPriorityNM = new global::System.Data.DataColumn("PriorityNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriorityNM);
                this.columnSubmissionNL = new global::System.Data.DataColumn("SubmissionNL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubmissionNL);
                this.columnPoDName = new global::System.Data.DataColumn("PoDName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoDName);
                this.columnClientCountryNM = new global::System.Data.DataColumn("ClientCountryNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientCountryNM);
                this.columnNotifyTypeNM = new global::System.Data.DataColumn("NotifyTypeNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotifyTypeNM);
                this.columnForwarderNM = new global::System.Data.DataColumn("ForwarderNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForwarderNM);
                this.columnConsigneeTypeNM = new global::System.Data.DataColumn("ConsigneeTypeNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsigneeTypeNM);
                this.columnIsLCStatus = new global::System.Data.DataColumn("IsLCStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsLCStatus);
                this.columnIsDefaultStatus = new global::System.Data.DataColumn("IsDefaultStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDefaultStatus);
                this.columnIsTelexStatus = new global::System.Data.DataColumn("IsTelexStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTelexStatus);
                this.columnIsSampleStatus = new global::System.Data.DataColumn("IsSampleStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSampleStatus);
                this.columnIsLC = new global::System.Data.DataColumn("IsLC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsLC);
                this.columnIsDefault = new global::System.Data.DataColumn("IsDefault", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDefault);
                this.columnIsTelex = new global::System.Data.DataColumn("IsTelex", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTelex);
                this.columnIsSample = new global::System.Data.DataColumn("IsSample", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSample);
                this.columnIsConfirmed = new global::System.Data.DataColumn("IsConfirmed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsConfirmed);
                this.columnPODID = new global::System.Data.DataColumn("PODID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODID);
                this.columnNotifyTypeID = new global::System.Data.DataColumn("NotifyTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotifyTypeID);
                this.columnPriority = new global::System.Data.DataColumn("Priority", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriority);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnShippingInstructionID}, true));
                this.columnShippingInstructionID.AllowDBNull = false;
                this.columnShippingInstructionID.Unique = true;
                this.columnProformaInvoiceNo.MaxLength = 20;
                this.columnClientUD.MaxLength = 8;
                this.columnStatus.ReadOnly = true;
                this.columnStatus.MaxLength = 9;
                this.columnClientPO.MaxLength = 255;
                this.columnPriorityNM.ReadOnly = true;
                this.columnPriorityNM.MaxLength = 6;
                this.columnSubmissionNL.MaxLength = 10;
                this.columnPoDName.MaxLength = 255;
                this.columnClientCountryNM.MaxLength = 50;
                this.columnNotifyTypeNM.MaxLength = 255;
                this.columnForwarderNM.MaxLength = 255;
                this.columnConsigneeTypeNM.MaxLength = 255;
                this.columnIsLCStatus.ReadOnly = true;
                this.columnIsLCStatus.MaxLength = 3;
                this.columnIsDefaultStatus.ReadOnly = true;
                this.columnIsDefaultStatus.MaxLength = 3;
                this.columnIsTelexStatus.ReadOnly = true;
                this.columnIsTelexStatus.MaxLength = 3;
                this.columnIsSampleStatus.ReadOnly = true;
                this.columnIsSampleStatus.MaxLength = 3;
                this.columnPriority.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow NewShippingInstructionMng_ShippingInstructionExportExcel_ViewRow() {
                return ((ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChanged != null)) {
                    this.ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChanged(this, new ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChangeEvent(((ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChanging != null)) {
                    this.ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChanging(this, new ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChangeEvent(((ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowDeleted != null)) {
                    this.ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowDeleted(this, new ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChangeEvent(((ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowDeleting != null)) {
                    this.ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowDeleting(this, new ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChangeEvent(((ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveShippingInstructionMng_ShippingInstructionExportExcel_ViewRow(ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ShippingInstructionMngObject ds = new ShippingInstructionMngObject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow : global::System.Data.DataRow {
            
            private ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable tableShippingInstructionMng_ShippingInstructionExportExcel_View;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableShippingInstructionMng_ShippingInstructionExportExcel_View = ((ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ShippingInstructionID {
                get {
                    return ((int)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ShippingInstructionIDColumn]));
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ShippingInstructionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProformaInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ProformaInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProformaInvoiceNo\' in table \'ShippingInstructionMng_Shippin" +
                                "gInstructionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ProformaInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ClientUD {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ClientUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientUD\' in table \'ShippingInstructionMng_ShippingInstruct" +
                                "ionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ClientUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'ShippingInstructionMng_ShippingInstructio" +
                                "nExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ClientPO {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ClientPOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientPO\' in table \'ShippingInstructionMng_ShippingInstruct" +
                                "ionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ClientPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PriorityNM {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PriorityNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriorityNM\' in table \'ShippingInstructionMng_ShippingInstru" +
                                "ctionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PriorityNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SubmissionNL {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.SubmissionNLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubmissionNL\' in table \'ShippingInstructionMng_ShippingInst" +
                                "ructionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.SubmissionNLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PoDName {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PoDNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PoDName\' in table \'ShippingInstructionMng_ShippingInstructi" +
                                "onExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PoDNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ClientCountryNM {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ClientCountryNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientCountryNM\' in table \'ShippingInstructionMng_ShippingI" +
                                "nstructionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ClientCountryNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NotifyTypeNM {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.NotifyTypeNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotifyTypeNM\' in table \'ShippingInstructionMng_ShippingInst" +
                                "ructionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.NotifyTypeNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ForwarderNM {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ForwarderNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForwarderNM\' in table \'ShippingInstructionMng_ShippingInstr" +
                                "uctionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ForwarderNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ConsigneeTypeNM {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ConsigneeTypeNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsigneeTypeNM\' in table \'ShippingInstructionMng_ShippingI" +
                                "nstructionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ConsigneeTypeNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IsLCStatus {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsLCStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsLCStatus\' in table \'ShippingInstructionMng_ShippingInstru" +
                                "ctionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsLCStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IsDefaultStatus {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsDefaultStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDefaultStatus\' in table \'ShippingInstructionMng_ShippingI" +
                                "nstructionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsDefaultStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IsTelexStatus {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsTelexStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTelexStatus\' in table \'ShippingInstructionMng_ShippingIns" +
                                "tructionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsTelexStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IsSampleStatus {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsSampleStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSampleStatus\' in table \'ShippingInstructionMng_ShippingIn" +
                                "structionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsSampleStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLC {
                get {
                    try {
                        return ((bool)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsLCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsLC\' in table \'ShippingInstructionMng_ShippingInstructionE" +
                                "xportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsLCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDefault {
                get {
                    try {
                        return ((bool)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsDefaultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDefault\' in table \'ShippingInstructionMng_ShippingInstruc" +
                                "tionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsDefaultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTelex {
                get {
                    try {
                        return ((bool)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsTelexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTelex\' in table \'ShippingInstructionMng_ShippingInstructi" +
                                "onExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsTelexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSample {
                get {
                    try {
                        return ((bool)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsSampleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSample\' in table \'ShippingInstructionMng_ShippingInstruct" +
                                "ionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsSampleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsConfirmed {
                get {
                    try {
                        return ((bool)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsConfirmedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsConfirmed\' in table \'ShippingInstructionMng_ShippingInstr" +
                                "uctionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsConfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int PODID {
                get {
                    try {
                        return ((int)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PODIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODID\' in table \'ShippingInstructionMng_ShippingInstruction" +
                                "ExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PODIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int NotifyTypeID {
                get {
                    try {
                        return ((int)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.NotifyTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotifyTypeID\' in table \'ShippingInstructionMng_ShippingInst" +
                                "ructionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.NotifyTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Priority {
                get {
                    try {
                        return ((string)(this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PriorityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Priority\' in table \'ShippingInstructionMng_ShippingInstruct" +
                                "ionExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PriorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProformaInvoiceNoNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ProformaInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProformaInvoiceNoNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ProformaInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientUDNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ClientUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientUDNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ClientUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStatusNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStatusNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientPONull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ClientPOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientPONull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ClientPOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPriorityNMNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PriorityNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPriorityNMNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PriorityNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubmissionNLNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.SubmissionNLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubmissionNLNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.SubmissionNLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPoDNameNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PoDNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPoDNameNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PoDNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClientCountryNMNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ClientCountryNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClientCountryNMNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ClientCountryNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNotifyTypeNMNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.NotifyTypeNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNotifyTypeNMNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.NotifyTypeNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsForwarderNMNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ForwarderNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetForwarderNMNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ForwarderNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsConsigneeTypeNMNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ConsigneeTypeNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetConsigneeTypeNMNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.ConsigneeTypeNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsLCStatusNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsLCStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsLCStatusNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsLCStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsDefaultStatusNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsDefaultStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsDefaultStatusNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsDefaultStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsTelexStatusNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsTelexStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsTelexStatusNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsTelexStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsSampleStatusNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsSampleStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsSampleStatusNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsSampleStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsLCNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsLCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsLCNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsLCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsDefaultNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsDefaultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsDefaultNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsDefaultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsTelexNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsTelexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsTelexNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsTelexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsSampleNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsSampleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsSampleNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsSampleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsConfirmedNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsConfirmedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsConfirmedNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.IsConfirmedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPODIDNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PODIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPODIDNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PODIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNotifyTypeIDNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.NotifyTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNotifyTypeIDNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.NotifyTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPriorityNull() {
                return this.IsNull(this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PriorityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPriorityNull() {
                this[this.tableShippingInstructionMng_ShippingInstructionExportExcel_View.PriorityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChangeEvent : global::System.EventArgs {
            
            private ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ShippingInstructionMng_ShippingInstructionExportExcel_ViewRowChangeEvent(ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ShippingInstructionMng_ShippingInstructionExportExcel_ViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DAL.ShippingInstructionMng.ShippingInstructionMngObjectTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ShippingInstructionMng_ShippingInstructionExportExcel_ViewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public ShippingInstructionMng_ShippingInstructionExportExcel_ViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ShippingInstructionMng_ShippingInstructionExportExcel_View";
            tableMapping.ColumnMappings.Add("ShippingInstructionID", "ShippingInstructionID");
            tableMapping.ColumnMappings.Add("ProformaInvoiceNo", "ProformaInvoiceNo");
            tableMapping.ColumnMappings.Add("ClientUD", "ClientUD");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("ClientPO", "ClientPO");
            tableMapping.ColumnMappings.Add("PriorityNM", "PriorityNM");
            tableMapping.ColumnMappings.Add("SubmissionNL", "SubmissionNL");
            tableMapping.ColumnMappings.Add("PoDName", "PoDName");
            tableMapping.ColumnMappings.Add("ClientCountryNM", "ClientCountryNM");
            tableMapping.ColumnMappings.Add("NotifyTypeNM", "NotifyTypeNM");
            tableMapping.ColumnMappings.Add("ForwarderNM", "ForwarderNM");
            tableMapping.ColumnMappings.Add("ConsigneeTypeNM", "ConsigneeTypeNM");
            tableMapping.ColumnMappings.Add("IsLCStatus", "IsLCStatus");
            tableMapping.ColumnMappings.Add("IsDefaultStatus", "IsDefaultStatus");
            tableMapping.ColumnMappings.Add("IsTelexStatus", "IsTelexStatus");
            tableMapping.ColumnMappings.Add("IsSampleStatus", "IsSampleStatus");
            tableMapping.ColumnMappings.Add("IsLC", "IsLC");
            tableMapping.ColumnMappings.Add("IsDefault", "IsDefault");
            tableMapping.ColumnMappings.Add("IsTelex", "IsTelex");
            tableMapping.ColumnMappings.Add("IsSample", "IsSample");
            tableMapping.ColumnMappings.Add("IsConfirmed", "IsConfirmed");
            tableMapping.ColumnMappings.Add("PODID", "PODID");
            tableMapping.ColumnMappings.Add("NotifyTypeID", "NotifyTypeID");
            tableMapping.ColumnMappings.Add("Priority", "Priority");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.ShippingInstructionMng.Properties.Settings.Default.TilsoftConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ShippingInstructionID, ProformaInvoiceNo, ClientUD, Status, ClientPO, PriorityNM, SubmissionNL, PoDName, ClientCountryNM, NotifyTypeNM, ForwarderNM, ConsigneeTypeNM, IsLCStatus, IsDefaultStatus, IsTelexStatus, IsSampleStatus, IsLC, IsDefault, IsTelex, IsSample, IsConfirmed, PODID, NotifyTypeID, Priority FROM dbo.ShippingInstructionMng_ShippingInstructionExportExcel_View";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ShippingInstructionMngObject.ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ShippingInstructionMngObject.ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ShippingInstructionMngObject.ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable dataTable = new ShippingInstructionMngObject.ShippingInstructionMng_ShippingInstructionExportExcel_ViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(ShippingInstructionMngObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(ShippingInstructionMngObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(ShippingInstructionMngObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(ShippingInstructionMngObject dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591