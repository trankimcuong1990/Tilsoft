//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.WorkCenterMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WorkCenterEntities : DbContext
    {
        public WorkCenterEntities()
            : base("name=WorkCenterEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<WorkCenter> WorkCenter { get; set; }
        public virtual DbSet<WorkCenterMng_WorkCenter_View> WorkCenterMng_WorkCenter_View { get; set; }
        public virtual DbSet<WorkCenterDetail> WorkCenterDetail { get; set; }
        public virtual DbSet<WorkCenterMng_WorkCenterDetail_View> WorkCenterMng_WorkCenterDetail_View { get; set; }
        public virtual DbSet<WorkCenterMng_Branch_View> WorkCenterMng_Branch_View { get; set; }
        public virtual DbSet<WorkCenterMng_FactoryWarehouse_View> WorkCenterMng_FactoryWarehouse_View { get; set; }
        public virtual DbSet<WorkCenterMng_WorkCenterSearchResult_View> WorkCenterMng_WorkCenterSearchResult_View { get; set; }
        public virtual DbSet<WorkCenterMng_WorkCenterSearchResultVirtual_View> WorkCenterMng_WorkCenterSearchResultVirtual_View { get; set; }
        public virtual DbSet<WorkCenterMng_WorkCenterDetailSearchResultVirtual_View> WorkCenterMng_WorkCenterDetailSearchResultVirtual_View { get; set; }
    
        public virtual ObjectResult<WorkCenterMng_WorkCenterSearchResultVirtual_View> WorkCenterMng_function_WorkCenterSearchResult(string workCenterUD, string workCenterNM, Nullable<decimal> operatingTime, Nullable<decimal> defaultCost, Nullable<decimal> capacity, Nullable<int> responsibleBy, Nullable<int> defaultFactoryWarehouseID, string sortedBy, string sortedDirection)
        {
            var workCenterUDParameter = workCenterUD != null ?
                new ObjectParameter("WorkCenterUD", workCenterUD) :
                new ObjectParameter("WorkCenterUD", typeof(string));
    
            var workCenterNMParameter = workCenterNM != null ?
                new ObjectParameter("WorkCenterNM", workCenterNM) :
                new ObjectParameter("WorkCenterNM", typeof(string));
    
            var operatingTimeParameter = operatingTime.HasValue ?
                new ObjectParameter("OperatingTime", operatingTime) :
                new ObjectParameter("OperatingTime", typeof(decimal));
    
            var defaultCostParameter = defaultCost.HasValue ?
                new ObjectParameter("DefaultCost", defaultCost) :
                new ObjectParameter("DefaultCost", typeof(decimal));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("Capacity", capacity) :
                new ObjectParameter("Capacity", typeof(decimal));
    
            var responsibleByParameter = responsibleBy.HasValue ?
                new ObjectParameter("ResponsibleBy", responsibleBy) :
                new ObjectParameter("ResponsibleBy", typeof(int));
    
            var defaultFactoryWarehouseIDParameter = defaultFactoryWarehouseID.HasValue ?
                new ObjectParameter("DefaultFactoryWarehouseID", defaultFactoryWarehouseID) :
                new ObjectParameter("DefaultFactoryWarehouseID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkCenterMng_WorkCenterSearchResultVirtual_View>("WorkCenterMng_function_WorkCenterSearchResult", workCenterUDParameter, workCenterNMParameter, operatingTimeParameter, defaultCostParameter, capacityParameter, responsibleByParameter, defaultFactoryWarehouseIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<WorkCenterMng_WorkCenterSearchResultVirtual_View> WorkCenterMng_function_WorkCenterSearchResult(string workCenterUD, string workCenterNM, Nullable<decimal> operatingTime, Nullable<decimal> defaultCost, Nullable<decimal> capacity, Nullable<int> responsibleBy, Nullable<int> defaultFactoryWarehouseID, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var workCenterUDParameter = workCenterUD != null ?
                new ObjectParameter("WorkCenterUD", workCenterUD) :
                new ObjectParameter("WorkCenterUD", typeof(string));
    
            var workCenterNMParameter = workCenterNM != null ?
                new ObjectParameter("WorkCenterNM", workCenterNM) :
                new ObjectParameter("WorkCenterNM", typeof(string));
    
            var operatingTimeParameter = operatingTime.HasValue ?
                new ObjectParameter("OperatingTime", operatingTime) :
                new ObjectParameter("OperatingTime", typeof(decimal));
    
            var defaultCostParameter = defaultCost.HasValue ?
                new ObjectParameter("DefaultCost", defaultCost) :
                new ObjectParameter("DefaultCost", typeof(decimal));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("Capacity", capacity) :
                new ObjectParameter("Capacity", typeof(decimal));
    
            var responsibleByParameter = responsibleBy.HasValue ?
                new ObjectParameter("ResponsibleBy", responsibleBy) :
                new ObjectParameter("ResponsibleBy", typeof(int));
    
            var defaultFactoryWarehouseIDParameter = defaultFactoryWarehouseID.HasValue ?
                new ObjectParameter("DefaultFactoryWarehouseID", defaultFactoryWarehouseID) :
                new ObjectParameter("DefaultFactoryWarehouseID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkCenterMng_WorkCenterSearchResultVirtual_View>("WorkCenterMng_function_WorkCenterSearchResult", mergeOption, workCenterUDParameter, workCenterNMParameter, operatingTimeParameter, defaultCostParameter, capacityParameter, responsibleByParameter, defaultFactoryWarehouseIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<WorkCenterMng_WorkCenterDetailSearchResultVirtual_View> WorkCenterMng_function_WorkCenterDetailSearchResult(string workCenterUD, string workCenterNM, Nullable<decimal> operatingTime, Nullable<decimal> defaultCost, Nullable<decimal> capacity, Nullable<int> responsibleBy, Nullable<int> defaultFactoryWarehouseID, string sortedBy, string sortedDirection)
        {
            var workCenterUDParameter = workCenterUD != null ?
                new ObjectParameter("WorkCenterUD", workCenterUD) :
                new ObjectParameter("WorkCenterUD", typeof(string));
    
            var workCenterNMParameter = workCenterNM != null ?
                new ObjectParameter("WorkCenterNM", workCenterNM) :
                new ObjectParameter("WorkCenterNM", typeof(string));
    
            var operatingTimeParameter = operatingTime.HasValue ?
                new ObjectParameter("OperatingTime", operatingTime) :
                new ObjectParameter("OperatingTime", typeof(decimal));
    
            var defaultCostParameter = defaultCost.HasValue ?
                new ObjectParameter("DefaultCost", defaultCost) :
                new ObjectParameter("DefaultCost", typeof(decimal));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("Capacity", capacity) :
                new ObjectParameter("Capacity", typeof(decimal));
    
            var responsibleByParameter = responsibleBy.HasValue ?
                new ObjectParameter("ResponsibleBy", responsibleBy) :
                new ObjectParameter("ResponsibleBy", typeof(int));
    
            var defaultFactoryWarehouseIDParameter = defaultFactoryWarehouseID.HasValue ?
                new ObjectParameter("DefaultFactoryWarehouseID", defaultFactoryWarehouseID) :
                new ObjectParameter("DefaultFactoryWarehouseID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkCenterMng_WorkCenterDetailSearchResultVirtual_View>("WorkCenterMng_function_WorkCenterDetailSearchResult", workCenterUDParameter, workCenterNMParameter, operatingTimeParameter, defaultCostParameter, capacityParameter, responsibleByParameter, defaultFactoryWarehouseIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<WorkCenterMng_WorkCenterDetailSearchResultVirtual_View> WorkCenterMng_function_WorkCenterDetailSearchResult(string workCenterUD, string workCenterNM, Nullable<decimal> operatingTime, Nullable<decimal> defaultCost, Nullable<decimal> capacity, Nullable<int> responsibleBy, Nullable<int> defaultFactoryWarehouseID, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var workCenterUDParameter = workCenterUD != null ?
                new ObjectParameter("WorkCenterUD", workCenterUD) :
                new ObjectParameter("WorkCenterUD", typeof(string));
    
            var workCenterNMParameter = workCenterNM != null ?
                new ObjectParameter("WorkCenterNM", workCenterNM) :
                new ObjectParameter("WorkCenterNM", typeof(string));
    
            var operatingTimeParameter = operatingTime.HasValue ?
                new ObjectParameter("OperatingTime", operatingTime) :
                new ObjectParameter("OperatingTime", typeof(decimal));
    
            var defaultCostParameter = defaultCost.HasValue ?
                new ObjectParameter("DefaultCost", defaultCost) :
                new ObjectParameter("DefaultCost", typeof(decimal));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("Capacity", capacity) :
                new ObjectParameter("Capacity", typeof(decimal));
    
            var responsibleByParameter = responsibleBy.HasValue ?
                new ObjectParameter("ResponsibleBy", responsibleBy) :
                new ObjectParameter("ResponsibleBy", typeof(int));
    
            var defaultFactoryWarehouseIDParameter = defaultFactoryWarehouseID.HasValue ?
                new ObjectParameter("DefaultFactoryWarehouseID", defaultFactoryWarehouseID) :
                new ObjectParameter("DefaultFactoryWarehouseID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WorkCenterMng_WorkCenterDetailSearchResultVirtual_View>("WorkCenterMng_function_WorkCenterDetailSearchResult", mergeOption, workCenterUDParameter, workCenterNMParameter, operatingTimeParameter, defaultCostParameter, capacityParameter, responsibleByParameter, defaultFactoryWarehouseIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    }
}
