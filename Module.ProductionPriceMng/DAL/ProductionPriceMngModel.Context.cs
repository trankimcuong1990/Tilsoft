//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.ProductionPriceMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProductionPriceMngEntities : DbContext
    {
        public ProductionPriceMngEntities()
            : base("name=ProductionPriceMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ProductionPrice> ProductionPrice { get; set; }
        public virtual DbSet<ProductionPriceDetail> ProductionPriceDetail { get; set; }
        public virtual DbSet<ProductionPriceMng_ProductionPrice_View> ProductionPriceMng_ProductionPrice_View { get; set; }
        public virtual DbSet<ProductionPriceMng_ProductionPriceDetail_View> ProductionPriceMng_ProductionPriceDetail_View { get; set; }
        public virtual DbSet<ProductionPriceMng_ProductionPriceSearch_View> ProductionPriceMng_ProductionPriceSearch_View { get; set; }
        public virtual DbSet<ProductionPriceMng_AvgPrice_View> ProductionPriceMng_AvgPrice_View { get; set; }
        public virtual DbSet<ProductionPriceMng_ProductionPriceDetailSearch_View> ProductionPriceMng_ProductionPriceDetailSearch_View { get; set; }
        public virtual DbSet<ProductionPriceMng_ReceiptByProductionItem_View> ProductionPriceMng_ReceiptByProductionItem_View { get; set; }
    
        public virtual ObjectResult<ProductionPriceMng_ProductionPriceSearch_View> ProductionPriceMng_function_SearchProductionPrice(string sortedBy, string sortedDirection, Nullable<int> companyID, Nullable<int> productionItemTypeID, Nullable<int> month, Nullable<int> year, Nullable<bool> isLocked)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var productionItemTypeIDParameter = productionItemTypeID.HasValue ?
                new ObjectParameter("ProductionItemTypeID", productionItemTypeID) :
                new ObjectParameter("ProductionItemTypeID", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var isLockedParameter = isLocked.HasValue ?
                new ObjectParameter("IsLocked", isLocked) :
                new ObjectParameter("IsLocked", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductionPriceMng_ProductionPriceSearch_View>("ProductionPriceMng_function_SearchProductionPrice", sortedByParameter, sortedDirectionParameter, companyIDParameter, productionItemTypeIDParameter, monthParameter, yearParameter, isLockedParameter);
        }
    
        public virtual ObjectResult<ProductionPriceMng_ProductionPriceSearch_View> ProductionPriceMng_function_SearchProductionPrice(string sortedBy, string sortedDirection, Nullable<int> companyID, Nullable<int> productionItemTypeID, Nullable<int> month, Nullable<int> year, Nullable<bool> isLocked, MergeOption mergeOption)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var productionItemTypeIDParameter = productionItemTypeID.HasValue ?
                new ObjectParameter("ProductionItemTypeID", productionItemTypeID) :
                new ObjectParameter("ProductionItemTypeID", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var isLockedParameter = isLocked.HasValue ?
                new ObjectParameter("IsLocked", isLocked) :
                new ObjectParameter("IsLocked", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductionPriceMng_ProductionPriceSearch_View>("ProductionPriceMng_function_SearchProductionPrice", mergeOption, sortedByParameter, sortedDirectionParameter, companyIDParameter, productionItemTypeIDParameter, monthParameter, yearParameter, isLockedParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ProductionPriceMng_function_CalculateAvgPrice(Nullable<int> userId, Nullable<int> companyID, Nullable<int> productionItemTypeID, Nullable<int> currentMonth, Nullable<int> currentYear, Nullable<int> previousMonth, Nullable<int> previousYear)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var productionItemTypeIDParameter = productionItemTypeID.HasValue ?
                new ObjectParameter("ProductionItemTypeID", productionItemTypeID) :
                new ObjectParameter("ProductionItemTypeID", typeof(int));
    
            var currentMonthParameter = currentMonth.HasValue ?
                new ObjectParameter("CurrentMonth", currentMonth) :
                new ObjectParameter("CurrentMonth", typeof(int));
    
            var currentYearParameter = currentYear.HasValue ?
                new ObjectParameter("CurrentYear", currentYear) :
                new ObjectParameter("CurrentYear", typeof(int));
    
            var previousMonthParameter = previousMonth.HasValue ?
                new ObjectParameter("PreviousMonth", previousMonth) :
                new ObjectParameter("PreviousMonth", typeof(int));
    
            var previousYearParameter = previousYear.HasValue ?
                new ObjectParameter("PreviousYear", previousYear) :
                new ObjectParameter("PreviousYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ProductionPriceMng_function_CalculateAvgPrice", userIdParameter, companyIDParameter, productionItemTypeIDParameter, currentMonthParameter, currentYearParameter, previousMonthParameter, previousYearParameter);
        }
    
        public virtual ObjectResult<ProductionPriceMng_ReceiptByProductionItem_View> ProductionPriceMng_function_GetReceiptByProductionItem(Nullable<int> companyID, Nullable<int> productionItemID, Nullable<int> month, Nullable<int> year)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var productionItemIDParameter = productionItemID.HasValue ?
                new ObjectParameter("ProductionItemID", productionItemID) :
                new ObjectParameter("ProductionItemID", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductionPriceMng_ReceiptByProductionItem_View>("ProductionPriceMng_function_GetReceiptByProductionItem", companyIDParameter, productionItemIDParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<ProductionPriceMng_ReceiptByProductionItem_View> ProductionPriceMng_function_GetReceiptByProductionItem(Nullable<int> companyID, Nullable<int> productionItemID, Nullable<int> month, Nullable<int> year, MergeOption mergeOption)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var productionItemIDParameter = productionItemID.HasValue ?
                new ObjectParameter("ProductionItemID", productionItemID) :
                new ObjectParameter("ProductionItemID", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductionPriceMng_ReceiptByProductionItem_View>("ProductionPriceMng_function_GetReceiptByProductionItem", mergeOption, companyIDParameter, productionItemIDParameter, monthParameter, yearParameter);
        }
    
        public virtual int ProductionPriceMng_function_UpdatePriceReceivingNote(Nullable<int> productionPriceID)
        {
            var productionPriceIDParameter = productionPriceID.HasValue ?
                new ObjectParameter("ProductionPriceID", productionPriceID) :
                new ObjectParameter("ProductionPriceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProductionPriceMng_function_UpdatePriceReceivingNote", productionPriceIDParameter);
        }
    }
}
