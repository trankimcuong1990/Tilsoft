//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DAL.WarehousePickingListMng {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ReportDataObject")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ReportDataObject : global::System.Data.DataSet {
        
        private WarehousePickingListMng_PickingList_ReportViewDataTable tableWarehousePickingListMng_PickingList_ReportView;
        
        private WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable tableWarehousePickingListMng_PickingListProductDetail_ReportView;
        
        private WarehousePickingListMng_ExportExcel_ViewDataTable tableWarehousePickingListMng_ExportExcel_View;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ReportDataObject() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ReportDataObject(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["WarehousePickingListMng_PickingList_ReportView"] != null)) {
                    base.Tables.Add(new WarehousePickingListMng_PickingList_ReportViewDataTable(ds.Tables["WarehousePickingListMng_PickingList_ReportView"]));
                }
                if ((ds.Tables["WarehousePickingListMng_PickingListProductDetail_ReportView"] != null)) {
                    base.Tables.Add(new WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable(ds.Tables["WarehousePickingListMng_PickingListProductDetail_ReportView"]));
                }
                if ((ds.Tables["WarehousePickingListMng_ExportExcel_View"] != null)) {
                    base.Tables.Add(new WarehousePickingListMng_ExportExcel_ViewDataTable(ds.Tables["WarehousePickingListMng_ExportExcel_View"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WarehousePickingListMng_PickingList_ReportViewDataTable WarehousePickingListMng_PickingList_ReportView {
            get {
                return this.tableWarehousePickingListMng_PickingList_ReportView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable WarehousePickingListMng_PickingListProductDetail_ReportView {
            get {
                return this.tableWarehousePickingListMng_PickingListProductDetail_ReportView;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WarehousePickingListMng_ExportExcel_ViewDataTable WarehousePickingListMng_ExportExcel_View {
            get {
                return this.tableWarehousePickingListMng_ExportExcel_View;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ReportDataObject cln = ((ReportDataObject)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["WarehousePickingListMng_PickingList_ReportView"] != null)) {
                    base.Tables.Add(new WarehousePickingListMng_PickingList_ReportViewDataTable(ds.Tables["WarehousePickingListMng_PickingList_ReportView"]));
                }
                if ((ds.Tables["WarehousePickingListMng_PickingListProductDetail_ReportView"] != null)) {
                    base.Tables.Add(new WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable(ds.Tables["WarehousePickingListMng_PickingListProductDetail_ReportView"]));
                }
                if ((ds.Tables["WarehousePickingListMng_ExportExcel_View"] != null)) {
                    base.Tables.Add(new WarehousePickingListMng_ExportExcel_ViewDataTable(ds.Tables["WarehousePickingListMng_ExportExcel_View"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableWarehousePickingListMng_PickingList_ReportView = ((WarehousePickingListMng_PickingList_ReportViewDataTable)(base.Tables["WarehousePickingListMng_PickingList_ReportView"]));
            if ((initTable == true)) {
                if ((this.tableWarehousePickingListMng_PickingList_ReportView != null)) {
                    this.tableWarehousePickingListMng_PickingList_ReportView.InitVars();
                }
            }
            this.tableWarehousePickingListMng_PickingListProductDetail_ReportView = ((WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable)(base.Tables["WarehousePickingListMng_PickingListProductDetail_ReportView"]));
            if ((initTable == true)) {
                if ((this.tableWarehousePickingListMng_PickingListProductDetail_ReportView != null)) {
                    this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.InitVars();
                }
            }
            this.tableWarehousePickingListMng_ExportExcel_View = ((WarehousePickingListMng_ExportExcel_ViewDataTable)(base.Tables["WarehousePickingListMng_ExportExcel_View"]));
            if ((initTable == true)) {
                if ((this.tableWarehousePickingListMng_ExportExcel_View != null)) {
                    this.tableWarehousePickingListMng_ExportExcel_View.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ReportDataObject";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ReportDataObject.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableWarehousePickingListMng_PickingList_ReportView = new WarehousePickingListMng_PickingList_ReportViewDataTable();
            base.Tables.Add(this.tableWarehousePickingListMng_PickingList_ReportView);
            this.tableWarehousePickingListMng_PickingListProductDetail_ReportView = new WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable();
            base.Tables.Add(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView);
            this.tableWarehousePickingListMng_ExportExcel_View = new WarehousePickingListMng_ExportExcel_ViewDataTable();
            base.Tables.Add(this.tableWarehousePickingListMng_ExportExcel_View);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeWarehousePickingListMng_PickingList_ReportView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeWarehousePickingListMng_PickingListProductDetail_ReportView() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeWarehousePickingListMng_ExportExcel_View() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ReportDataObject ds = new ReportDataObject();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void WarehousePickingListMng_PickingList_ReportViewRowChangeEventHandler(object sender, WarehousePickingListMng_PickingList_ReportViewRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void WarehousePickingListMng_PickingListProductDetail_ReportViewRowChangeEventHandler(object sender, WarehousePickingListMng_PickingListProductDetail_ReportViewRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void WarehousePickingListMng_ExportExcel_ViewRowChangeEventHandler(object sender, WarehousePickingListMng_ExportExcel_ViewRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WarehousePickingListMng_PickingList_ReportViewDataTable : global::System.Data.TypedTableBase<WarehousePickingListMng_PickingList_ReportViewRow> {
            
            private global::System.Data.DataColumn columnWarehousePickingListID;
            
            private global::System.Data.DataColumn columnClientNM;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnReceiptNo;
            
            private global::System.Data.DataColumn columnOrderNo;
            
            private global::System.Data.DataColumn columnEuroPalletQnt;
            
            private global::System.Data.DataColumn columnIsInvoicePalletToClient;
            
            private global::System.Data.DataColumn columnPlannerName;
            
            private global::System.Data.DataColumn columnPlaningDate;
            
            private global::System.Data.DataColumn columnPlaningTime;
            
            private global::System.Data.DataColumn columnRealPickingDate;
            
            private global::System.Data.DataColumn columnPickerName;
            
            private global::System.Data.DataColumn columnPickingStatus;
            
            private global::System.Data.DataColumn columnCMRNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingList_ReportViewDataTable() {
                this.TableName = "WarehousePickingListMng_PickingList_ReportView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WarehousePickingListMng_PickingList_ReportViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected WarehousePickingListMng_PickingList_ReportViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WarehousePickingListIDColumn {
                get {
                    return this.columnWarehousePickingListID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNMColumn {
                get {
                    return this.columnClientNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiptNoColumn {
                get {
                    return this.columnReceiptNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderNoColumn {
                get {
                    return this.columnOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EuroPalletQntColumn {
                get {
                    return this.columnEuroPalletQnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsInvoicePalletToClientColumn {
                get {
                    return this.columnIsInvoicePalletToClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlannerNameColumn {
                get {
                    return this.columnPlannerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlaningDateColumn {
                get {
                    return this.columnPlaningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlaningTimeColumn {
                get {
                    return this.columnPlaningTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RealPickingDateColumn {
                get {
                    return this.columnRealPickingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PickerNameColumn {
                get {
                    return this.columnPickerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PickingStatusColumn {
                get {
                    return this.columnPickingStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMRNoColumn {
                get {
                    return this.columnCMRNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingList_ReportViewRow this[int index] {
                get {
                    return ((WarehousePickingListMng_PickingList_ReportViewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WarehousePickingListMng_PickingList_ReportViewRowChangeEventHandler WarehousePickingListMng_PickingList_ReportViewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WarehousePickingListMng_PickingList_ReportViewRowChangeEventHandler WarehousePickingListMng_PickingList_ReportViewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WarehousePickingListMng_PickingList_ReportViewRowChangeEventHandler WarehousePickingListMng_PickingList_ReportViewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WarehousePickingListMng_PickingList_ReportViewRowChangeEventHandler WarehousePickingListMng_PickingList_ReportViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddWarehousePickingListMng_PickingList_ReportViewRow(WarehousePickingListMng_PickingList_ReportViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingList_ReportViewRow AddWarehousePickingListMng_PickingList_ReportViewRow(int WarehousePickingListID, string ClientNM, string Address, string ReceiptNo, string OrderNo, int EuroPalletQnt, string IsInvoicePalletToClient, string PlannerName, string PlaningDate, string PlaningTime, string RealPickingDate, string PickerName, string PickingStatus, string CMRNo) {
                WarehousePickingListMng_PickingList_ReportViewRow rowWarehousePickingListMng_PickingList_ReportViewRow = ((WarehousePickingListMng_PickingList_ReportViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WarehousePickingListID,
                        ClientNM,
                        Address,
                        ReceiptNo,
                        OrderNo,
                        EuroPalletQnt,
                        IsInvoicePalletToClient,
                        PlannerName,
                        PlaningDate,
                        PlaningTime,
                        RealPickingDate,
                        PickerName,
                        PickingStatus,
                        CMRNo};
                rowWarehousePickingListMng_PickingList_ReportViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWarehousePickingListMng_PickingList_ReportViewRow);
                return rowWarehousePickingListMng_PickingList_ReportViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingList_ReportViewRow FindByWarehousePickingListID(int WarehousePickingListID) {
                return ((WarehousePickingListMng_PickingList_ReportViewRow)(this.Rows.Find(new object[] {
                            WarehousePickingListID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WarehousePickingListMng_PickingList_ReportViewDataTable cln = ((WarehousePickingListMng_PickingList_ReportViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WarehousePickingListMng_PickingList_ReportViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnWarehousePickingListID = base.Columns["WarehousePickingListID"];
                this.columnClientNM = base.Columns["ClientNM"];
                this.columnAddress = base.Columns["Address"];
                this.columnReceiptNo = base.Columns["ReceiptNo"];
                this.columnOrderNo = base.Columns["OrderNo"];
                this.columnEuroPalletQnt = base.Columns["EuroPalletQnt"];
                this.columnIsInvoicePalletToClient = base.Columns["IsInvoicePalletToClient"];
                this.columnPlannerName = base.Columns["PlannerName"];
                this.columnPlaningDate = base.Columns["PlaningDate"];
                this.columnPlaningTime = base.Columns["PlaningTime"];
                this.columnRealPickingDate = base.Columns["RealPickingDate"];
                this.columnPickerName = base.Columns["PickerName"];
                this.columnPickingStatus = base.Columns["PickingStatus"];
                this.columnCMRNo = base.Columns["CMRNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnWarehousePickingListID = new global::System.Data.DataColumn("WarehousePickingListID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehousePickingListID);
                this.columnClientNM = new global::System.Data.DataColumn("ClientNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientNM);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnReceiptNo = new global::System.Data.DataColumn("ReceiptNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptNo);
                this.columnOrderNo = new global::System.Data.DataColumn("OrderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderNo);
                this.columnEuroPalletQnt = new global::System.Data.DataColumn("EuroPalletQnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEuroPalletQnt);
                this.columnIsInvoicePalletToClient = new global::System.Data.DataColumn("IsInvoicePalletToClient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsInvoicePalletToClient);
                this.columnPlannerName = new global::System.Data.DataColumn("PlannerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlannerName);
                this.columnPlaningDate = new global::System.Data.DataColumn("PlaningDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaningDate);
                this.columnPlaningTime = new global::System.Data.DataColumn("PlaningTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaningTime);
                this.columnRealPickingDate = new global::System.Data.DataColumn("RealPickingDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealPickingDate);
                this.columnPickerName = new global::System.Data.DataColumn("PickerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickerName);
                this.columnPickingStatus = new global::System.Data.DataColumn("PickingStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickingStatus);
                this.columnCMRNo = new global::System.Data.DataColumn("CMRNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMRNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWarehousePickingListID}, true));
                this.columnWarehousePickingListID.AllowDBNull = false;
                this.columnWarehousePickingListID.Unique = true;
                this.columnClientNM.MaxLength = 255;
                this.columnAddress.MaxLength = 583;
                this.columnReceiptNo.MaxLength = 20;
                this.columnOrderNo.MaxLength = 500;
                this.columnIsInvoicePalletToClient.MaxLength = 3;
                this.columnPlannerName.MaxLength = 50;
                this.columnPlaningDate.MaxLength = 8000;
                this.columnPlaningTime.MaxLength = 8000;
                this.columnRealPickingDate.MaxLength = 8000;
                this.columnPickerName.MaxLength = 50;
                this.columnPickingStatus.MaxLength = 30;
                this.columnCMRNo.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingList_ReportViewRow NewWarehousePickingListMng_PickingList_ReportViewRow() {
                return ((WarehousePickingListMng_PickingList_ReportViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WarehousePickingListMng_PickingList_ReportViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WarehousePickingListMng_PickingList_ReportViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WarehousePickingListMng_PickingList_ReportViewRowChanged != null)) {
                    this.WarehousePickingListMng_PickingList_ReportViewRowChanged(this, new WarehousePickingListMng_PickingList_ReportViewRowChangeEvent(((WarehousePickingListMng_PickingList_ReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WarehousePickingListMng_PickingList_ReportViewRowChanging != null)) {
                    this.WarehousePickingListMng_PickingList_ReportViewRowChanging(this, new WarehousePickingListMng_PickingList_ReportViewRowChangeEvent(((WarehousePickingListMng_PickingList_ReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WarehousePickingListMng_PickingList_ReportViewRowDeleted != null)) {
                    this.WarehousePickingListMng_PickingList_ReportViewRowDeleted(this, new WarehousePickingListMng_PickingList_ReportViewRowChangeEvent(((WarehousePickingListMng_PickingList_ReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WarehousePickingListMng_PickingList_ReportViewRowDeleting != null)) {
                    this.WarehousePickingListMng_PickingList_ReportViewRowDeleting(this, new WarehousePickingListMng_PickingList_ReportViewRowChangeEvent(((WarehousePickingListMng_PickingList_ReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveWarehousePickingListMng_PickingList_ReportViewRow(WarehousePickingListMng_PickingList_ReportViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDataObject ds = new ReportDataObject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WarehousePickingListMng_PickingList_ReportViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable : global::System.Data.TypedTableBase<WarehousePickingListMng_PickingListProductDetail_ReportViewRow> {
            
            private global::System.Data.DataColumn columnWarehousePickingListProductDetailID;
            
            private global::System.Data.DataColumn columnWarehousePickingListID;
            
            private global::System.Data.DataColumn columnProformaInvoiceNo;
            
            private global::System.Data.DataColumn columnWarehouseAreaUD;
            
            private global::System.Data.DataColumn columnBarcode;
            
            private global::System.Data.DataColumn columnImageFile;
            
            private global::System.Data.DataColumn columnRowIndex;
            
            private global::System.Data.DataColumn columnArticleCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnColli;
            
            private global::System.Data.DataColumn columnPackagingMethodNM;
            
            private global::System.Data.DataColumn columnPlaningQuantity;
            
            private global::System.Data.DataColumn columnPlanningIn40HC;
            
            private global::System.Data.DataColumn columnItemPickingStatus;
            
            private global::System.Data.DataColumn columnRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable() {
                this.TableName = "WarehousePickingListMng_PickingListProductDetail_ReportView";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WarehousePickingListProductDetailIDColumn {
                get {
                    return this.columnWarehousePickingListProductDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WarehousePickingListIDColumn {
                get {
                    return this.columnWarehousePickingListID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProformaInvoiceNoColumn {
                get {
                    return this.columnProformaInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WarehouseAreaUDColumn {
                get {
                    return this.columnWarehouseAreaUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BarcodeColumn {
                get {
                    return this.columnBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageFileColumn {
                get {
                    return this.columnImageFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowIndexColumn {
                get {
                    return this.columnRowIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArticleCodeColumn {
                get {
                    return this.columnArticleCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ColliColumn {
                get {
                    return this.columnColli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackagingMethodNMColumn {
                get {
                    return this.columnPackagingMethodNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlaningQuantityColumn {
                get {
                    return this.columnPlaningQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlanningIn40HCColumn {
                get {
                    return this.columnPlanningIn40HC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemPickingStatusColumn {
                get {
                    return this.columnItemPickingStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingListProductDetail_ReportViewRow this[int index] {
                get {
                    return ((WarehousePickingListMng_PickingListProductDetail_ReportViewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WarehousePickingListMng_PickingListProductDetail_ReportViewRowChangeEventHandler WarehousePickingListMng_PickingListProductDetail_ReportViewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WarehousePickingListMng_PickingListProductDetail_ReportViewRowChangeEventHandler WarehousePickingListMng_PickingListProductDetail_ReportViewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WarehousePickingListMng_PickingListProductDetail_ReportViewRowChangeEventHandler WarehousePickingListMng_PickingListProductDetail_ReportViewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WarehousePickingListMng_PickingListProductDetail_ReportViewRowChangeEventHandler WarehousePickingListMng_PickingListProductDetail_ReportViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddWarehousePickingListMng_PickingListProductDetail_ReportViewRow(WarehousePickingListMng_PickingListProductDetail_ReportViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingListProductDetail_ReportViewRow AddWarehousePickingListMng_PickingListProductDetail_ReportViewRow(
                        int WarehousePickingListProductDetailID, 
                        int WarehousePickingListID, 
                        string ProformaInvoiceNo, 
                        string WarehouseAreaUD, 
                        string Barcode, 
                        string ImageFile, 
                        int RowIndex, 
                        string ArticleCode, 
                        string Description, 
                        string Unit, 
                        int Quantity, 
                        string Colli, 
                        string PackagingMethodNM, 
                        int PlaningQuantity, 
                        decimal PlanningIn40HC, 
                        string ItemPickingStatus, 
                        string Remark) {
                WarehousePickingListMng_PickingListProductDetail_ReportViewRow rowWarehousePickingListMng_PickingListProductDetail_ReportViewRow = ((WarehousePickingListMng_PickingListProductDetail_ReportViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WarehousePickingListProductDetailID,
                        WarehousePickingListID,
                        ProformaInvoiceNo,
                        WarehouseAreaUD,
                        Barcode,
                        ImageFile,
                        RowIndex,
                        ArticleCode,
                        Description,
                        Unit,
                        Quantity,
                        Colli,
                        PackagingMethodNM,
                        PlaningQuantity,
                        PlanningIn40HC,
                        ItemPickingStatus,
                        Remark};
                rowWarehousePickingListMng_PickingListProductDetail_ReportViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWarehousePickingListMng_PickingListProductDetail_ReportViewRow);
                return rowWarehousePickingListMng_PickingListProductDetail_ReportViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingListProductDetail_ReportViewRow FindByWarehousePickingListProductDetailID(int WarehousePickingListProductDetailID) {
                return ((WarehousePickingListMng_PickingListProductDetail_ReportViewRow)(this.Rows.Find(new object[] {
                            WarehousePickingListProductDetailID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable cln = ((WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnWarehousePickingListProductDetailID = base.Columns["WarehousePickingListProductDetailID"];
                this.columnWarehousePickingListID = base.Columns["WarehousePickingListID"];
                this.columnProformaInvoiceNo = base.Columns["ProformaInvoiceNo"];
                this.columnWarehouseAreaUD = base.Columns["WarehouseAreaUD"];
                this.columnBarcode = base.Columns["Barcode"];
                this.columnImageFile = base.Columns["ImageFile"];
                this.columnRowIndex = base.Columns["RowIndex"];
                this.columnArticleCode = base.Columns["ArticleCode"];
                this.columnDescription = base.Columns["Description"];
                this.columnUnit = base.Columns["Unit"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnColli = base.Columns["Colli"];
                this.columnPackagingMethodNM = base.Columns["PackagingMethodNM"];
                this.columnPlaningQuantity = base.Columns["PlaningQuantity"];
                this.columnPlanningIn40HC = base.Columns["PlanningIn40HC"];
                this.columnItemPickingStatus = base.Columns["ItemPickingStatus"];
                this.columnRemark = base.Columns["Remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnWarehousePickingListProductDetailID = new global::System.Data.DataColumn("WarehousePickingListProductDetailID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehousePickingListProductDetailID);
                this.columnWarehousePickingListID = new global::System.Data.DataColumn("WarehousePickingListID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehousePickingListID);
                this.columnProformaInvoiceNo = new global::System.Data.DataColumn("ProformaInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProformaInvoiceNo);
                this.columnWarehouseAreaUD = new global::System.Data.DataColumn("WarehouseAreaUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarehouseAreaUD);
                this.columnBarcode = new global::System.Data.DataColumn("Barcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarcode);
                this.columnImageFile = new global::System.Data.DataColumn("ImageFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageFile);
                this.columnRowIndex = new global::System.Data.DataColumn("RowIndex", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowIndex);
                this.columnArticleCode = new global::System.Data.DataColumn("ArticleCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArticleCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnColli = new global::System.Data.DataColumn("Colli", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColli);
                this.columnPackagingMethodNM = new global::System.Data.DataColumn("PackagingMethodNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackagingMethodNM);
                this.columnPlaningQuantity = new global::System.Data.DataColumn("PlaningQuantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaningQuantity);
                this.columnPlanningIn40HC = new global::System.Data.DataColumn("PlanningIn40HC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlanningIn40HC);
                this.columnItemPickingStatus = new global::System.Data.DataColumn("ItemPickingStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemPickingStatus);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnWarehousePickingListProductDetailID}, true));
                this.columnWarehousePickingListProductDetailID.AllowDBNull = false;
                this.columnWarehousePickingListProductDetailID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingListProductDetail_ReportViewRow NewWarehousePickingListMng_PickingListProductDetail_ReportViewRow() {
                return ((WarehousePickingListMng_PickingListProductDetail_ReportViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WarehousePickingListMng_PickingListProductDetail_ReportViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WarehousePickingListMng_PickingListProductDetail_ReportViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WarehousePickingListMng_PickingListProductDetail_ReportViewRowChanged != null)) {
                    this.WarehousePickingListMng_PickingListProductDetail_ReportViewRowChanged(this, new WarehousePickingListMng_PickingListProductDetail_ReportViewRowChangeEvent(((WarehousePickingListMng_PickingListProductDetail_ReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WarehousePickingListMng_PickingListProductDetail_ReportViewRowChanging != null)) {
                    this.WarehousePickingListMng_PickingListProductDetail_ReportViewRowChanging(this, new WarehousePickingListMng_PickingListProductDetail_ReportViewRowChangeEvent(((WarehousePickingListMng_PickingListProductDetail_ReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WarehousePickingListMng_PickingListProductDetail_ReportViewRowDeleted != null)) {
                    this.WarehousePickingListMng_PickingListProductDetail_ReportViewRowDeleted(this, new WarehousePickingListMng_PickingListProductDetail_ReportViewRowChangeEvent(((WarehousePickingListMng_PickingListProductDetail_ReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WarehousePickingListMng_PickingListProductDetail_ReportViewRowDeleting != null)) {
                    this.WarehousePickingListMng_PickingListProductDetail_ReportViewRowDeleting(this, new WarehousePickingListMng_PickingListProductDetail_ReportViewRowChangeEvent(((WarehousePickingListMng_PickingListProductDetail_ReportViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveWarehousePickingListMng_PickingListProductDetail_ReportViewRow(WarehousePickingListMng_PickingListProductDetail_ReportViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDataObject ds = new ReportDataObject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WarehousePickingListMng_ExportExcel_ViewDataTable : global::System.Data.TypedTableBase<WarehousePickingListMng_ExportExcel_ViewRow> {
            
            private global::System.Data.DataColumn columnProcessingStatusNM;
            
            private global::System.Data.DataColumn columnInvoicedStatus;
            
            private global::System.Data.DataColumn columnReceiptNo;
            
            private global::System.Data.DataColumn columnClientUD;
            
            private global::System.Data.DataColumn columnClientNM;
            
            private global::System.Data.DataColumn columnCMRNo;
            
            private global::System.Data.DataColumn columnPlaningDate;
            
            private global::System.Data.DataColumn columnPlannerName;
            
            private global::System.Data.DataColumn columnRealPickingDate;
            
            private global::System.Data.DataColumn columnPickerName;
            
            private global::System.Data.DataColumn columnPickingStatus;
            
            private global::System.Data.DataColumn columnEuroPalletQnt;
            
            private global::System.Data.DataColumn columnIsInvoicePalletToClient;
            
            private global::System.Data.DataColumn columnUpdatorName;
            
            private global::System.Data.DataColumn columnUpdatedDate;
            
            private global::System.Data.DataColumn columnStatusUpdatorName;
            
            private global::System.Data.DataColumn columnStatusUpdatedDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_ExportExcel_ViewDataTable() {
                this.TableName = "WarehousePickingListMng_ExportExcel_View";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WarehousePickingListMng_ExportExcel_ViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected WarehousePickingListMng_ExportExcel_ViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcessingStatusNMColumn {
                get {
                    return this.columnProcessingStatusNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoicedStatusColumn {
                get {
                    return this.columnInvoicedStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReceiptNoColumn {
                get {
                    return this.columnReceiptNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientUDColumn {
                get {
                    return this.columnClientUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNMColumn {
                get {
                    return this.columnClientNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMRNoColumn {
                get {
                    return this.columnCMRNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlaningDateColumn {
                get {
                    return this.columnPlaningDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlannerNameColumn {
                get {
                    return this.columnPlannerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RealPickingDateColumn {
                get {
                    return this.columnRealPickingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PickerNameColumn {
                get {
                    return this.columnPickerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PickingStatusColumn {
                get {
                    return this.columnPickingStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EuroPalletQntColumn {
                get {
                    return this.columnEuroPalletQnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsInvoicePalletToClientColumn {
                get {
                    return this.columnIsInvoicePalletToClient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdatorNameColumn {
                get {
                    return this.columnUpdatorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdatedDateColumn {
                get {
                    return this.columnUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusUpdatorNameColumn {
                get {
                    return this.columnStatusUpdatorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusUpdatedDateColumn {
                get {
                    return this.columnStatusUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_ExportExcel_ViewRow this[int index] {
                get {
                    return ((WarehousePickingListMng_ExportExcel_ViewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WarehousePickingListMng_ExportExcel_ViewRowChangeEventHandler WarehousePickingListMng_ExportExcel_ViewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WarehousePickingListMng_ExportExcel_ViewRowChangeEventHandler WarehousePickingListMng_ExportExcel_ViewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WarehousePickingListMng_ExportExcel_ViewRowChangeEventHandler WarehousePickingListMng_ExportExcel_ViewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event WarehousePickingListMng_ExportExcel_ViewRowChangeEventHandler WarehousePickingListMng_ExportExcel_ViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddWarehousePickingListMng_ExportExcel_ViewRow(WarehousePickingListMng_ExportExcel_ViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_ExportExcel_ViewRow AddWarehousePickingListMng_ExportExcel_ViewRow(
                        string ProcessingStatusNM, 
                        string InvoicedStatus, 
                        string ReceiptNo, 
                        string ClientUD, 
                        string ClientNM, 
                        string CMRNo, 
                        string PlaningDate, 
                        string PlannerName, 
                        string RealPickingDate, 
                        string PickerName, 
                        string PickingStatus, 
                        int EuroPalletQnt, 
                        string IsInvoicePalletToClient, 
                        string UpdatorName, 
                        string UpdatedDate, 
                        string StatusUpdatorName, 
                        string StatusUpdatedDate) {
                WarehousePickingListMng_ExportExcel_ViewRow rowWarehousePickingListMng_ExportExcel_ViewRow = ((WarehousePickingListMng_ExportExcel_ViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProcessingStatusNM,
                        InvoicedStatus,
                        ReceiptNo,
                        ClientUD,
                        ClientNM,
                        CMRNo,
                        PlaningDate,
                        PlannerName,
                        RealPickingDate,
                        PickerName,
                        PickingStatus,
                        EuroPalletQnt,
                        IsInvoicePalletToClient,
                        UpdatorName,
                        UpdatedDate,
                        StatusUpdatorName,
                        StatusUpdatedDate};
                rowWarehousePickingListMng_ExportExcel_ViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWarehousePickingListMng_ExportExcel_ViewRow);
                return rowWarehousePickingListMng_ExportExcel_ViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WarehousePickingListMng_ExportExcel_ViewDataTable cln = ((WarehousePickingListMng_ExportExcel_ViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WarehousePickingListMng_ExportExcel_ViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnProcessingStatusNM = base.Columns["ProcessingStatusNM"];
                this.columnInvoicedStatus = base.Columns["InvoicedStatus"];
                this.columnReceiptNo = base.Columns["ReceiptNo"];
                this.columnClientUD = base.Columns["ClientUD"];
                this.columnClientNM = base.Columns["ClientNM"];
                this.columnCMRNo = base.Columns["CMRNo"];
                this.columnPlaningDate = base.Columns["PlaningDate"];
                this.columnPlannerName = base.Columns["PlannerName"];
                this.columnRealPickingDate = base.Columns["RealPickingDate"];
                this.columnPickerName = base.Columns["PickerName"];
                this.columnPickingStatus = base.Columns["PickingStatus"];
                this.columnEuroPalletQnt = base.Columns["EuroPalletQnt"];
                this.columnIsInvoicePalletToClient = base.Columns["IsInvoicePalletToClient"];
                this.columnUpdatorName = base.Columns["UpdatorName"];
                this.columnUpdatedDate = base.Columns["UpdatedDate"];
                this.columnStatusUpdatorName = base.Columns["StatusUpdatorName"];
                this.columnStatusUpdatedDate = base.Columns["StatusUpdatedDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnProcessingStatusNM = new global::System.Data.DataColumn("ProcessingStatusNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessingStatusNM);
                this.columnInvoicedStatus = new global::System.Data.DataColumn("InvoicedStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicedStatus);
                this.columnReceiptNo = new global::System.Data.DataColumn("ReceiptNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptNo);
                this.columnClientUD = new global::System.Data.DataColumn("ClientUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientUD);
                this.columnClientNM = new global::System.Data.DataColumn("ClientNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientNM);
                this.columnCMRNo = new global::System.Data.DataColumn("CMRNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMRNo);
                this.columnPlaningDate = new global::System.Data.DataColumn("PlaningDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaningDate);
                this.columnPlannerName = new global::System.Data.DataColumn("PlannerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlannerName);
                this.columnRealPickingDate = new global::System.Data.DataColumn("RealPickingDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRealPickingDate);
                this.columnPickerName = new global::System.Data.DataColumn("PickerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickerName);
                this.columnPickingStatus = new global::System.Data.DataColumn("PickingStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickingStatus);
                this.columnEuroPalletQnt = new global::System.Data.DataColumn("EuroPalletQnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEuroPalletQnt);
                this.columnIsInvoicePalletToClient = new global::System.Data.DataColumn("IsInvoicePalletToClient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsInvoicePalletToClient);
                this.columnUpdatorName = new global::System.Data.DataColumn("UpdatorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatorName);
                this.columnUpdatedDate = new global::System.Data.DataColumn("UpdatedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedDate);
                this.columnStatusUpdatorName = new global::System.Data.DataColumn("StatusUpdatorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusUpdatorName);
                this.columnStatusUpdatedDate = new global::System.Data.DataColumn("StatusUpdatedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusUpdatedDate);
                this.columnProcessingStatusNM.MaxLength = 255;
                this.columnInvoicedStatus.MaxLength = 14;
                this.columnReceiptNo.MaxLength = 20;
                this.columnClientUD.MaxLength = 8;
                this.columnClientNM.MaxLength = 255;
                this.columnCMRNo.MaxLength = 20;
                this.columnPlaningDate.MaxLength = 8000;
                this.columnPlannerName.MaxLength = 50;
                this.columnRealPickingDate.MaxLength = 8000;
                this.columnPickerName.MaxLength = 50;
                this.columnPickingStatus.MaxLength = 12;
                this.columnIsInvoicePalletToClient.MaxLength = 3;
                this.columnUpdatorName.MaxLength = 50;
                this.columnUpdatedDate.MaxLength = 8000;
                this.columnStatusUpdatorName.MaxLength = 50;
                this.columnStatusUpdatedDate.MaxLength = 8000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_ExportExcel_ViewRow NewWarehousePickingListMng_ExportExcel_ViewRow() {
                return ((WarehousePickingListMng_ExportExcel_ViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WarehousePickingListMng_ExportExcel_ViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WarehousePickingListMng_ExportExcel_ViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WarehousePickingListMng_ExportExcel_ViewRowChanged != null)) {
                    this.WarehousePickingListMng_ExportExcel_ViewRowChanged(this, new WarehousePickingListMng_ExportExcel_ViewRowChangeEvent(((WarehousePickingListMng_ExportExcel_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WarehousePickingListMng_ExportExcel_ViewRowChanging != null)) {
                    this.WarehousePickingListMng_ExportExcel_ViewRowChanging(this, new WarehousePickingListMng_ExportExcel_ViewRowChangeEvent(((WarehousePickingListMng_ExportExcel_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WarehousePickingListMng_ExportExcel_ViewRowDeleted != null)) {
                    this.WarehousePickingListMng_ExportExcel_ViewRowDeleted(this, new WarehousePickingListMng_ExportExcel_ViewRowChangeEvent(((WarehousePickingListMng_ExportExcel_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WarehousePickingListMng_ExportExcel_ViewRowDeleting != null)) {
                    this.WarehousePickingListMng_ExportExcel_ViewRowDeleting(this, new WarehousePickingListMng_ExportExcel_ViewRowChangeEvent(((WarehousePickingListMng_ExportExcel_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveWarehousePickingListMng_ExportExcel_ViewRow(WarehousePickingListMng_ExportExcel_ViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDataObject ds = new ReportDataObject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WarehousePickingListMng_ExportExcel_ViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WarehousePickingListMng_PickingList_ReportViewRow : global::System.Data.DataRow {
            
            private WarehousePickingListMng_PickingList_ReportViewDataTable tableWarehousePickingListMng_PickingList_ReportView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WarehousePickingListMng_PickingList_ReportViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWarehousePickingListMng_PickingList_ReportView = ((WarehousePickingListMng_PickingList_ReportViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WarehousePickingListID {
                get {
                    return ((int)(this[this.tableWarehousePickingListMng_PickingList_ReportView.WarehousePickingListIDColumn]));
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.WarehousePickingListIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientNM {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingList_ReportView.ClientNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientNM\' in table \'WarehousePickingListMng_PickingList_Rep" +
                                "ortView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.ClientNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingList_ReportView.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'WarehousePickingListMng_PickingList_Repo" +
                                "rtView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReceiptNo {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingList_ReportView.ReceiptNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptNo\' in table \'WarehousePickingListMng_PickingList_Re" +
                                "portView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.ReceiptNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderNo {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingList_ReportView.OrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderNo\' in table \'WarehousePickingListMng_PickingList_Repo" +
                                "rtView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.OrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EuroPalletQnt {
                get {
                    try {
                        return ((int)(this[this.tableWarehousePickingListMng_PickingList_ReportView.EuroPalletQntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EuroPalletQnt\' in table \'WarehousePickingListMng_PickingLis" +
                                "t_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.EuroPalletQntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IsInvoicePalletToClient {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingList_ReportView.IsInvoicePalletToClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsInvoicePalletToClient\' in table \'WarehousePickingListMng_" +
                                "PickingList_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.IsInvoicePalletToClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlannerName {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingList_ReportView.PlannerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlannerName\' in table \'WarehousePickingListMng_PickingList_" +
                                "ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.PlannerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlaningDate {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingList_ReportView.PlaningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlaningDate\' in table \'WarehousePickingListMng_PickingList_" +
                                "ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.PlaningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlaningTime {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingList_ReportView.PlaningTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlaningTime\' in table \'WarehousePickingListMng_PickingList_" +
                                "ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.PlaningTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RealPickingDate {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingList_ReportView.RealPickingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealPickingDate\' in table \'WarehousePickingListMng_PickingL" +
                                "ist_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.RealPickingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PickerName {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingList_ReportView.PickerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickerName\' in table \'WarehousePickingListMng_PickingList_R" +
                                "eportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.PickerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PickingStatus {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingList_ReportView.PickingStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickingStatus\' in table \'WarehousePickingListMng_PickingLis" +
                                "t_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.PickingStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CMRNo {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingList_ReportView.CMRNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMRNo\' in table \'WarehousePickingListMng_PickingList_Report" +
                                "View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingList_ReportView.CMRNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientNMNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingList_ReportView.ClientNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientNMNull() {
                this[this.tableWarehousePickingListMng_PickingList_ReportView.ClientNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingList_ReportView.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull() {
                this[this.tableWarehousePickingListMng_PickingList_ReportView.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceiptNoNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingList_ReportView.ReceiptNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceiptNoNull() {
                this[this.tableWarehousePickingListMng_PickingList_ReportView.ReceiptNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderNoNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingList_ReportView.OrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderNoNull() {
                this[this.tableWarehousePickingListMng_PickingList_ReportView.OrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEuroPalletQntNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingList_ReportView.EuroPalletQntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEuroPalletQntNull() {
                this[this.tableWarehousePickingListMng_PickingList_ReportView.EuroPalletQntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsInvoicePalletToClientNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingList_ReportView.IsInvoicePalletToClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsInvoicePalletToClientNull() {
                this[this.tableWarehousePickingListMng_PickingList_ReportView.IsInvoicePalletToClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlannerNameNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingList_ReportView.PlannerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlannerNameNull() {
                this[this.tableWarehousePickingListMng_PickingList_ReportView.PlannerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlaningDateNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingList_ReportView.PlaningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlaningDateNull() {
                this[this.tableWarehousePickingListMng_PickingList_ReportView.PlaningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlaningTimeNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingList_ReportView.PlaningTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlaningTimeNull() {
                this[this.tableWarehousePickingListMng_PickingList_ReportView.PlaningTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRealPickingDateNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingList_ReportView.RealPickingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRealPickingDateNull() {
                this[this.tableWarehousePickingListMng_PickingList_ReportView.RealPickingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPickerNameNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingList_ReportView.PickerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPickerNameNull() {
                this[this.tableWarehousePickingListMng_PickingList_ReportView.PickerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPickingStatusNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingList_ReportView.PickingStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPickingStatusNull() {
                this[this.tableWarehousePickingListMng_PickingList_ReportView.PickingStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCMRNoNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingList_ReportView.CMRNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCMRNoNull() {
                this[this.tableWarehousePickingListMng_PickingList_ReportView.CMRNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WarehousePickingListMng_PickingListProductDetail_ReportViewRow : global::System.Data.DataRow {
            
            private WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable tableWarehousePickingListMng_PickingListProductDetail_ReportView;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WarehousePickingListMng_PickingListProductDetail_ReportViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWarehousePickingListMng_PickingListProductDetail_ReportView = ((WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WarehousePickingListProductDetailID {
                get {
                    return ((int)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.WarehousePickingListProductDetailIDColumn]));
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.WarehousePickingListProductDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WarehousePickingListID {
                get {
                    try {
                        return ((int)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.WarehousePickingListIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WarehousePickingListID\' in table \'WarehousePickingListMng_P" +
                                "ickingListProductDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.WarehousePickingListIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProformaInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ProformaInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProformaInvoiceNo\' in table \'WarehousePickingListMng_Pickin" +
                                "gListProductDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ProformaInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WarehouseAreaUD {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.WarehouseAreaUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WarehouseAreaUD\' in table \'WarehousePickingListMng_PickingL" +
                                "istProductDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.WarehouseAreaUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Barcode {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.BarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Barcode\' in table \'WarehousePickingListMng_PickingListProdu" +
                                "ctDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.BarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImageFile {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ImageFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageFile\' in table \'WarehousePickingListMng_PickingListPro" +
                                "ductDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ImageFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RowIndex {
                get {
                    try {
                        return ((int)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.RowIndexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowIndex\' in table \'WarehousePickingListMng_PickingListProd" +
                                "uctDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.RowIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArticleCode {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ArticleCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArticleCode\' in table \'WarehousePickingListMng_PickingListP" +
                                "roductDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ArticleCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'WarehousePickingListMng_PickingListP" +
                                "roductDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'WarehousePickingListMng_PickingListProductD" +
                                "etail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'WarehousePickingListMng_PickingListProd" +
                                "uctDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Colli {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ColliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Colli\' in table \'WarehousePickingListMng_PickingListProduct" +
                                "Detail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ColliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PackagingMethodNM {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.PackagingMethodNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackagingMethodNM\' in table \'WarehousePickingListMng_Pickin" +
                                "gListProductDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.PackagingMethodNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PlaningQuantity {
                get {
                    try {
                        return ((int)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.PlaningQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlaningQuantity\' in table \'WarehousePickingListMng_PickingL" +
                                "istProductDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.PlaningQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PlanningIn40HC {
                get {
                    try {
                        return ((decimal)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.PlanningIn40HCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlanningIn40HC\' in table \'WarehousePickingListMng_PickingLi" +
                                "stProductDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.PlanningIn40HCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemPickingStatus {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ItemPickingStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemPickingStatus\' in table \'WarehousePickingListMng_Pickin" +
                                "gListProductDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ItemPickingStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark\' in table \'WarehousePickingListMng_PickingListProduc" +
                                "tDetail_ReportView\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWarehousePickingListIDNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.WarehousePickingListIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWarehousePickingListIDNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.WarehousePickingListIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProformaInvoiceNoNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ProformaInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProformaInvoiceNoNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ProformaInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWarehouseAreaUDNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.WarehouseAreaUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWarehouseAreaUDNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.WarehouseAreaUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBarcodeNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.BarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBarcodeNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.BarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageFileNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ImageFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageFileNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ImageFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowIndexNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.RowIndexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowIndexNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.RowIndexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArticleCodeNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ArticleCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArticleCodeNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ArticleCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColliNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ColliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColliNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ColliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPackagingMethodNMNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.PackagingMethodNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPackagingMethodNMNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.PackagingMethodNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlaningQuantityNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.PlaningQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlaningQuantityNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.PlaningQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlanningIn40HCNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.PlanningIn40HCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlanningIn40HCNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.PlanningIn40HCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemPickingStatusNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ItemPickingStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemPickingStatusNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.ItemPickingStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemarkNull() {
                this[this.tableWarehousePickingListMng_PickingListProductDetail_ReportView.RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WarehousePickingListMng_ExportExcel_ViewRow : global::System.Data.DataRow {
            
            private WarehousePickingListMng_ExportExcel_ViewDataTable tableWarehousePickingListMng_ExportExcel_View;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal WarehousePickingListMng_ExportExcel_ViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWarehousePickingListMng_ExportExcel_View = ((WarehousePickingListMng_ExportExcel_ViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProcessingStatusNM {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.ProcessingStatusNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProcessingStatusNM\' in table \'WarehousePickingListMng_Expor" +
                                "tExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.ProcessingStatusNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoicedStatus {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.InvoicedStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoicedStatus\' in table \'WarehousePickingListMng_ExportExc" +
                                "el_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.InvoicedStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReceiptNo {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.ReceiptNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptNo\' in table \'WarehousePickingListMng_ExportExcel_Vi" +
                                "ew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.ReceiptNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientUD {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.ClientUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientUD\' in table \'WarehousePickingListMng_ExportExcel_Vie" +
                                "w\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.ClientUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientNM {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.ClientNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientNM\' in table \'WarehousePickingListMng_ExportExcel_Vie" +
                                "w\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.ClientNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CMRNo {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.CMRNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMRNo\' in table \'WarehousePickingListMng_ExportExcel_View\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.CMRNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlaningDate {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.PlaningDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlaningDate\' in table \'WarehousePickingListMng_ExportExcel_" +
                                "View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.PlaningDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PlannerName {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.PlannerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlannerName\' in table \'WarehousePickingListMng_ExportExcel_" +
                                "View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.PlannerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RealPickingDate {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.RealPickingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RealPickingDate\' in table \'WarehousePickingListMng_ExportEx" +
                                "cel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.RealPickingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PickerName {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.PickerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickerName\' in table \'WarehousePickingListMng_ExportExcel_V" +
                                "iew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.PickerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PickingStatus {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.PickingStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickingStatus\' in table \'WarehousePickingListMng_ExportExce" +
                                "l_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.PickingStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EuroPalletQnt {
                get {
                    try {
                        return ((int)(this[this.tableWarehousePickingListMng_ExportExcel_View.EuroPalletQntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EuroPalletQnt\' in table \'WarehousePickingListMng_ExportExce" +
                                "l_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.EuroPalletQntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IsInvoicePalletToClient {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.IsInvoicePalletToClientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsInvoicePalletToClient\' in table \'WarehousePickingListMng_" +
                                "ExportExcel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.IsInvoicePalletToClientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdatorName {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.UpdatorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatorName\' in table \'WarehousePickingListMng_ExportExcel_" +
                                "View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.UpdatorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UpdatedDate {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.UpdatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedDate\' in table \'WarehousePickingListMng_ExportExcel_" +
                                "View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.UpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StatusUpdatorName {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.StatusUpdatorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusUpdatorName\' in table \'WarehousePickingListMng_Export" +
                                "Excel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.StatusUpdatorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StatusUpdatedDate {
                get {
                    try {
                        return ((string)(this[this.tableWarehousePickingListMng_ExportExcel_View.StatusUpdatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusUpdatedDate\' in table \'WarehousePickingListMng_Export" +
                                "Excel_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableWarehousePickingListMng_ExportExcel_View.StatusUpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProcessingStatusNMNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.ProcessingStatusNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProcessingStatusNMNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.ProcessingStatusNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoicedStatusNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.InvoicedStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoicedStatusNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.InvoicedStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReceiptNoNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.ReceiptNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReceiptNoNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.ReceiptNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientUDNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.ClientUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientUDNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.ClientUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientNMNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.ClientNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientNMNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.ClientNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCMRNoNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.CMRNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCMRNoNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.CMRNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlaningDateNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.PlaningDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlaningDateNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.PlaningDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlannerNameNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.PlannerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlannerNameNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.PlannerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRealPickingDateNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.RealPickingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRealPickingDateNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.RealPickingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPickerNameNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.PickerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPickerNameNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.PickerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPickingStatusNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.PickingStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPickingStatusNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.PickingStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEuroPalletQntNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.EuroPalletQntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEuroPalletQntNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.EuroPalletQntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsInvoicePalletToClientNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.IsInvoicePalletToClientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsInvoicePalletToClientNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.IsInvoicePalletToClientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdatorNameNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.UpdatorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdatorNameNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.UpdatorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdatedDateNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.UpdatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdatedDateNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.UpdatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatusUpdatorNameNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.StatusUpdatorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatusUpdatorNameNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.StatusUpdatorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatusUpdatedDateNull() {
                return this.IsNull(this.tableWarehousePickingListMng_ExportExcel_View.StatusUpdatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatusUpdatedDateNull() {
                this[this.tableWarehousePickingListMng_ExportExcel_View.StatusUpdatedDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class WarehousePickingListMng_PickingList_ReportViewRowChangeEvent : global::System.EventArgs {
            
            private WarehousePickingListMng_PickingList_ReportViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingList_ReportViewRowChangeEvent(WarehousePickingListMng_PickingList_ReportViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingList_ReportViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class WarehousePickingListMng_PickingListProductDetail_ReportViewRowChangeEvent : global::System.EventArgs {
            
            private WarehousePickingListMng_PickingListProductDetail_ReportViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingListProductDetail_ReportViewRowChangeEvent(WarehousePickingListMng_PickingListProductDetail_ReportViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_PickingListProductDetail_ReportViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class WarehousePickingListMng_ExportExcel_ViewRowChangeEvent : global::System.EventArgs {
            
            private WarehousePickingListMng_ExportExcel_ViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_ExportExcel_ViewRowChangeEvent(WarehousePickingListMng_ExportExcel_ViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public WarehousePickingListMng_ExportExcel_ViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DAL.WarehousePickingListMng.ReportDataObjectTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WarehousePickingListMng_PickingList_ReportViewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public WarehousePickingListMng_PickingList_ReportViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WarehousePickingListMng_PickingList_ReportView";
            tableMapping.ColumnMappings.Add("WarehousePickingListID", "WarehousePickingListID");
            tableMapping.ColumnMappings.Add("ClientNM", "ClientNM");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("ReceiptNo", "ReceiptNo");
            tableMapping.ColumnMappings.Add("OrderNo", "OrderNo");
            tableMapping.ColumnMappings.Add("EuroPalletQnt", "EuroPalletQnt");
            tableMapping.ColumnMappings.Add("IsInvoicePalletToClient", "IsInvoicePalletToClient");
            tableMapping.ColumnMappings.Add("PlannerName", "PlannerName");
            tableMapping.ColumnMappings.Add("PlaningDate", "PlaningDate");
            tableMapping.ColumnMappings.Add("PlaningTime", "PlaningTime");
            tableMapping.ColumnMappings.Add("RealPickingDate", "RealPickingDate");
            tableMapping.ColumnMappings.Add("PickerName", "PickerName");
            tableMapping.ColumnMappings.Add("PickingStatus", "PickingStatus");
            tableMapping.ColumnMappings.Add("CMRNo", "CMRNo");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.WarehousePickingListMng.Properties.Settings.Default.OMSOnlineConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM [WarehousePickingListMng_PickingList_ReportView]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportDataObject.WarehousePickingListMng_PickingList_ReportViewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportDataObject.WarehousePickingListMng_PickingList_ReportViewDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportDataObject.WarehousePickingListMng_PickingList_ReportViewDataTable dataTable = new ReportDataObject.WarehousePickingListMng_PickingList_ReportViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WarehousePickingListMng_PickingListProductDetail_ReportViewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public WarehousePickingListMng_PickingListProductDetail_ReportViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WarehousePickingListMng_PickingListProductDetail_ReportView";
            tableMapping.ColumnMappings.Add("WarehousePickingListProductDetailID", "WarehousePickingListProductDetailID");
            tableMapping.ColumnMappings.Add("WarehousePickingListID", "WarehousePickingListID");
            tableMapping.ColumnMappings.Add("ProformaInvoiceNo", "ProformaInvoiceNo");
            tableMapping.ColumnMappings.Add("WarehouseAreaUD", "WarehouseAreaUD");
            tableMapping.ColumnMappings.Add("Barcode", "Barcode");
            tableMapping.ColumnMappings.Add("ImageFile", "ImageFile");
            tableMapping.ColumnMappings.Add("RowIndex", "RowIndex");
            tableMapping.ColumnMappings.Add("ArticleCode", "ArticleCode");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Unit", "Unit");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("Colli", "Colli");
            tableMapping.ColumnMappings.Add("PackagingMethodNM", "PackagingMethodNM");
            tableMapping.ColumnMappings.Add("PlaningQuantity", "PlaningQuantity");
            tableMapping.ColumnMappings.Add("PlanningIn40HC", "PlanningIn40HC");
            tableMapping.ColumnMappings.Add("ItemPickingStatus", "ItemPickingStatus");
            tableMapping.ColumnMappings.Add("Remark", "Remark");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.WarehousePickingListMng.Properties.Settings.Default.OMSOnlineConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM [WarehousePickingListMng_PickingListProductDetail_ReportView]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportDataObject.WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportDataObject.WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportDataObject.WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable dataTable = new ReportDataObject.WarehousePickingListMng_PickingListProductDetail_ReportViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WarehousePickingListMng_ExportExcel_ViewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public WarehousePickingListMng_ExportExcel_ViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WarehousePickingListMng_ExportExcel_View";
            tableMapping.ColumnMappings.Add("ProcessingStatusNM", "ProcessingStatusNM");
            tableMapping.ColumnMappings.Add("InvoicedStatus", "InvoicedStatus");
            tableMapping.ColumnMappings.Add("ReceiptNo", "ReceiptNo");
            tableMapping.ColumnMappings.Add("ClientUD", "ClientUD");
            tableMapping.ColumnMappings.Add("ClientNM", "ClientNM");
            tableMapping.ColumnMappings.Add("CMRNo", "CMRNo");
            tableMapping.ColumnMappings.Add("PlaningDate", "PlaningDate");
            tableMapping.ColumnMappings.Add("PlannerName", "PlannerName");
            tableMapping.ColumnMappings.Add("RealPickingDate", "RealPickingDate");
            tableMapping.ColumnMappings.Add("PickerName", "PickerName");
            tableMapping.ColumnMappings.Add("PickingStatus", "PickingStatus");
            tableMapping.ColumnMappings.Add("EuroPalletQnt", "EuroPalletQnt");
            tableMapping.ColumnMappings.Add("IsInvoicePalletToClient", "IsInvoicePalletToClient");
            tableMapping.ColumnMappings.Add("UpdatorName", "UpdatorName");
            tableMapping.ColumnMappings.Add("UpdatedDate", "UpdatedDate");
            tableMapping.ColumnMappings.Add("StatusUpdatorName", "StatusUpdatorName");
            tableMapping.ColumnMappings.Add("StatusUpdatedDate", "StatusUpdatedDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DAL.WarehousePickingListMng.Properties.Settings.Default.TilsoftConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM WarehousePickingListMng_ExportExcel_View";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportDataObject.WarehousePickingListMng_ExportExcel_ViewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportDataObject.WarehousePickingListMng_ExportExcel_ViewDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportDataObject.WarehousePickingListMng_ExportExcel_ViewDataTable dataTable = new ReportDataObject.WarehousePickingListMng_ExportExcel_ViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ReportDataObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ReportDataObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ReportDataObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ReportDataObject dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591