//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.36373
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Module.SummaryPerArticleRpt.DAL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ReportDataObject")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ReportDataObject : global::System.Data.DataSet {
        
        private Report_SummaryPerArticle_ViewDataTable tableReport_SummaryPerArticle_View;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ReportDataObject() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ReportDataObject(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Report_SummaryPerArticle_View"] != null)) {
                    base.Tables.Add(new Report_SummaryPerArticle_ViewDataTable(ds.Tables["Report_SummaryPerArticle_View"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Report_SummaryPerArticle_ViewDataTable Report_SummaryPerArticle_View {
            get {
                return this.tableReport_SummaryPerArticle_View;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ReportDataObject cln = ((ReportDataObject)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Report_SummaryPerArticle_View"] != null)) {
                    base.Tables.Add(new Report_SummaryPerArticle_ViewDataTable(ds.Tables["Report_SummaryPerArticle_View"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableReport_SummaryPerArticle_View = ((Report_SummaryPerArticle_ViewDataTable)(base.Tables["Report_SummaryPerArticle_View"]));
            if ((initTable == true)) {
                if ((this.tableReport_SummaryPerArticle_View != null)) {
                    this.tableReport_SummaryPerArticle_View.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ReportDataObject";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ReportDataObject.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableReport_SummaryPerArticle_View = new Report_SummaryPerArticle_ViewDataTable();
            base.Tables.Add(this.tableReport_SummaryPerArticle_View);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeReport_SummaryPerArticle_View() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ReportDataObject ds = new ReportDataObject();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Report_SummaryPerArticle_ViewRowChangeEventHandler(object sender, Report_SummaryPerArticle_ViewRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Report_SummaryPerArticle_ViewDataTable : global::System.Data.TypedTableBase<Report_SummaryPerArticle_ViewRow> {
            
            private global::System.Data.DataColumn columnSeason;
            
            private global::System.Data.DataColumn columnOfferUD;
            
            private global::System.Data.DataColumn columnOfferDate;
            
            private global::System.Data.DataColumn columnClientUD;
            
            private global::System.Data.DataColumn columnClientNM;
            
            private global::System.Data.DataColumn columnClientCountryNM;
            
            private global::System.Data.DataColumn columnSaleNM;
            
            private global::System.Data.DataColumn columnCurrency;
            
            private global::System.Data.DataColumn columnArticleCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnOfferQnt;
            
            private global::System.Data.DataColumn columnOfferPriceInUSD;
            
            private global::System.Data.DataColumn columnOfferPriceInEUR;
            
            private global::System.Data.DataColumn columnOfferPriceConvertToEUR;
            
            private global::System.Data.DataColumn columnOfferAmountInUSD;
            
            private global::System.Data.DataColumn columnOfferAmountInEUR;
            
            private global::System.Data.DataColumn columnOfferAmountConvertToEUR;
            
            private global::System.Data.DataColumn columnProformaInvoiceNo;
            
            private global::System.Data.DataColumn columnSaleOrderInvoiceDate;
            
            private global::System.Data.DataColumn columnSaleOrderAmountInUSD;
            
            private global::System.Data.DataColumn columnSaleOrderAmountInEUR;
            
            private global::System.Data.DataColumn columnSaleOrderAmountConvertToEUR;
            
            private global::System.Data.DataColumn columnTrackingStatusNM;
            
            private global::System.Data.DataColumn columnEurofarInvoiceNo;
            
            private global::System.Data.DataColumn columnEurofarInvoiceDate;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnEurofarNetAmountInUSD;
            
            private global::System.Data.DataColumn columnEurofarNetAmountInEUR;
            
            private global::System.Data.DataColumn columnEurofarNetAmountConvertToEUR;
            
            private global::System.Data.DataColumn columnBLNo;
            
            private global::System.Data.DataColumn columnSupplierNM;
            
            private global::System.Data.DataColumn columnSupplierUD;
            
            private global::System.Data.DataColumn columnFactoryInvoiceNo;
            
            private global::System.Data.DataColumn columnPurchasingInvoiceNo;
            
            private global::System.Data.DataColumn columnPurchasingInvoiceDate;
            
            private global::System.Data.DataColumn columnPurchasingQnt;
            
            private global::System.Data.DataColumn columnFactoryInvoiceAmount;
            
            private global::System.Data.DataColumn columnPurchasingInvoiceAmount;
            
            private global::System.Data.DataColumn columnFactoryInvoiceAmountConvertoToEUR;
            
            private global::System.Data.DataColumn columnGrossMarginGoods;
            
            private global::System.Data.DataColumn columnGrossMarginPercentGoods;
            
            private global::System.Data.DataColumn columnCommissionPercent;
            
            private global::System.Data.DataColumn columnCommissionAmount;
            
            private global::System.Data.DataColumn columnGrossMarginExcludeTransport;
            
            private global::System.Data.DataColumn columnGrossMarginPercentExcludeTransport;
            
            private global::System.Data.DataColumn columnPurchasePriceFOB;
            
            private global::System.Data.DataColumn columnPurchasePriceDifference;
            
            private global::System.Data.DataColumn columnPriceStatus;
            
            private global::System.Data.DataColumn columnQuantityDifference;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Report_SummaryPerArticle_ViewDataTable() {
                this.TableName = "Report_SummaryPerArticle_View";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Report_SummaryPerArticle_ViewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Report_SummaryPerArticle_ViewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeasonColumn {
                get {
                    return this.columnSeason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfferUDColumn {
                get {
                    return this.columnOfferUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfferDateColumn {
                get {
                    return this.columnOfferDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientUDColumn {
                get {
                    return this.columnClientUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNMColumn {
                get {
                    return this.columnClientNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientCountryNMColumn {
                get {
                    return this.columnClientCountryNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SaleNMColumn {
                get {
                    return this.columnSaleNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyColumn {
                get {
                    return this.columnCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArticleCodeColumn {
                get {
                    return this.columnArticleCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfferQntColumn {
                get {
                    return this.columnOfferQnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfferPriceInUSDColumn {
                get {
                    return this.columnOfferPriceInUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfferPriceInEURColumn {
                get {
                    return this.columnOfferPriceInEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfferPriceConvertToEURColumn {
                get {
                    return this.columnOfferPriceConvertToEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfferAmountInUSDColumn {
                get {
                    return this.columnOfferAmountInUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfferAmountInEURColumn {
                get {
                    return this.columnOfferAmountInEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfferAmountConvertToEURColumn {
                get {
                    return this.columnOfferAmountConvertToEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProformaInvoiceNoColumn {
                get {
                    return this.columnProformaInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SaleOrderInvoiceDateColumn {
                get {
                    return this.columnSaleOrderInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SaleOrderAmountInUSDColumn {
                get {
                    return this.columnSaleOrderAmountInUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SaleOrderAmountInEURColumn {
                get {
                    return this.columnSaleOrderAmountInEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SaleOrderAmountConvertToEURColumn {
                get {
                    return this.columnSaleOrderAmountConvertToEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrackingStatusNMColumn {
                get {
                    return this.columnTrackingStatusNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EurofarInvoiceNoColumn {
                get {
                    return this.columnEurofarInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EurofarInvoiceDateColumn {
                get {
                    return this.columnEurofarInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EurofarNetAmountInUSDColumn {
                get {
                    return this.columnEurofarNetAmountInUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EurofarNetAmountInEURColumn {
                get {
                    return this.columnEurofarNetAmountInEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EurofarNetAmountConvertToEURColumn {
                get {
                    return this.columnEurofarNetAmountConvertToEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BLNoColumn {
                get {
                    return this.columnBLNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierNMColumn {
                get {
                    return this.columnSupplierNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierUDColumn {
                get {
                    return this.columnSupplierUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactoryInvoiceNoColumn {
                get {
                    return this.columnFactoryInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchasingInvoiceNoColumn {
                get {
                    return this.columnPurchasingInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchasingInvoiceDateColumn {
                get {
                    return this.columnPurchasingInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchasingQntColumn {
                get {
                    return this.columnPurchasingQnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactoryInvoiceAmountColumn {
                get {
                    return this.columnFactoryInvoiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchasingInvoiceAmountColumn {
                get {
                    return this.columnPurchasingInvoiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactoryInvoiceAmountConvertoToEURColumn {
                get {
                    return this.columnFactoryInvoiceAmountConvertoToEUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrossMarginGoodsColumn {
                get {
                    return this.columnGrossMarginGoods;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrossMarginPercentGoodsColumn {
                get {
                    return this.columnGrossMarginPercentGoods;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommissionPercentColumn {
                get {
                    return this.columnCommissionPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommissionAmountColumn {
                get {
                    return this.columnCommissionAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrossMarginExcludeTransportColumn {
                get {
                    return this.columnGrossMarginExcludeTransport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrossMarginPercentExcludeTransportColumn {
                get {
                    return this.columnGrossMarginPercentExcludeTransport;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchasePriceFOBColumn {
                get {
                    return this.columnPurchasePriceFOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchasePriceDifferenceColumn {
                get {
                    return this.columnPurchasePriceDifference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceStatusColumn {
                get {
                    return this.columnPriceStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuantityDifferenceColumn {
                get {
                    return this.columnQuantityDifference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Report_SummaryPerArticle_ViewRow this[int index] {
                get {
                    return ((Report_SummaryPerArticle_ViewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Report_SummaryPerArticle_ViewRowChangeEventHandler Report_SummaryPerArticle_ViewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Report_SummaryPerArticle_ViewRowChangeEventHandler Report_SummaryPerArticle_ViewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Report_SummaryPerArticle_ViewRowChangeEventHandler Report_SummaryPerArticle_ViewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Report_SummaryPerArticle_ViewRowChangeEventHandler Report_SummaryPerArticle_ViewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddReport_SummaryPerArticle_ViewRow(Report_SummaryPerArticle_ViewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Report_SummaryPerArticle_ViewRow AddReport_SummaryPerArticle_ViewRow(
                        string Season, 
                        string OfferUD, 
                        string OfferDate, 
                        string ClientUD, 
                        string ClientNM, 
                        string ClientCountryNM, 
                        string SaleNM, 
                        string Currency, 
                        string ArticleCode, 
                        string Description, 
                        int OfferQnt, 
                        decimal OfferPriceInUSD, 
                        decimal OfferPriceInEUR, 
                        decimal OfferPriceConvertToEUR, 
                        decimal OfferAmountInUSD, 
                        decimal OfferAmountInEUR, 
                        decimal OfferAmountConvertToEUR, 
                        string ProformaInvoiceNo, 
                        string SaleOrderInvoiceDate, 
                        decimal SaleOrderAmountInUSD, 
                        decimal SaleOrderAmountInEUR, 
                        decimal SaleOrderAmountConvertToEUR, 
                        string TrackingStatusNM, 
                        string EurofarInvoiceNo, 
                        string EurofarInvoiceDate, 
                        int Quantity, 
                        decimal EurofarNetAmountInUSD, 
                        decimal EurofarNetAmountInEUR, 
                        decimal EurofarNetAmountConvertToEUR, 
                        string BLNo, 
                        string SupplierNM, 
                        string SupplierUD, 
                        string FactoryInvoiceNo, 
                        string PurchasingInvoiceNo, 
                        string PurchasingInvoiceDate, 
                        int PurchasingQnt, 
                        decimal FactoryInvoiceAmount, 
                        decimal PurchasingInvoiceAmount, 
                        decimal FactoryInvoiceAmountConvertoToEUR, 
                        decimal GrossMarginGoods, 
                        decimal GrossMarginPercentGoods, 
                        decimal CommissionPercent, 
                        decimal CommissionAmount, 
                        decimal GrossMarginExcludeTransport, 
                        decimal GrossMarginPercentExcludeTransport, 
                        decimal PurchasePriceFOB, 
                        decimal PurchasePriceDifference, 
                        string PriceStatus, 
                        decimal QuantityDifference) {
                Report_SummaryPerArticle_ViewRow rowReport_SummaryPerArticle_ViewRow = ((Report_SummaryPerArticle_ViewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Season,
                        OfferUD,
                        OfferDate,
                        ClientUD,
                        ClientNM,
                        ClientCountryNM,
                        SaleNM,
                        Currency,
                        ArticleCode,
                        Description,
                        OfferQnt,
                        OfferPriceInUSD,
                        OfferPriceInEUR,
                        OfferPriceConvertToEUR,
                        OfferAmountInUSD,
                        OfferAmountInEUR,
                        OfferAmountConvertToEUR,
                        ProformaInvoiceNo,
                        SaleOrderInvoiceDate,
                        SaleOrderAmountInUSD,
                        SaleOrderAmountInEUR,
                        SaleOrderAmountConvertToEUR,
                        TrackingStatusNM,
                        EurofarInvoiceNo,
                        EurofarInvoiceDate,
                        Quantity,
                        EurofarNetAmountInUSD,
                        EurofarNetAmountInEUR,
                        EurofarNetAmountConvertToEUR,
                        BLNo,
                        SupplierNM,
                        SupplierUD,
                        FactoryInvoiceNo,
                        PurchasingInvoiceNo,
                        PurchasingInvoiceDate,
                        PurchasingQnt,
                        FactoryInvoiceAmount,
                        PurchasingInvoiceAmount,
                        FactoryInvoiceAmountConvertoToEUR,
                        GrossMarginGoods,
                        GrossMarginPercentGoods,
                        CommissionPercent,
                        CommissionAmount,
                        GrossMarginExcludeTransport,
                        GrossMarginPercentExcludeTransport,
                        PurchasePriceFOB,
                        PurchasePriceDifference,
                        PriceStatus,
                        QuantityDifference};
                rowReport_SummaryPerArticle_ViewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReport_SummaryPerArticle_ViewRow);
                return rowReport_SummaryPerArticle_ViewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Report_SummaryPerArticle_ViewDataTable cln = ((Report_SummaryPerArticle_ViewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Report_SummaryPerArticle_ViewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSeason = base.Columns["Season"];
                this.columnOfferUD = base.Columns["OfferUD"];
                this.columnOfferDate = base.Columns["OfferDate"];
                this.columnClientUD = base.Columns["ClientUD"];
                this.columnClientNM = base.Columns["ClientNM"];
                this.columnClientCountryNM = base.Columns["ClientCountryNM"];
                this.columnSaleNM = base.Columns["SaleNM"];
                this.columnCurrency = base.Columns["Currency"];
                this.columnArticleCode = base.Columns["ArticleCode"];
                this.columnDescription = base.Columns["Description"];
                this.columnOfferQnt = base.Columns["OfferQnt"];
                this.columnOfferPriceInUSD = base.Columns["OfferPriceInUSD"];
                this.columnOfferPriceInEUR = base.Columns["OfferPriceInEUR"];
                this.columnOfferPriceConvertToEUR = base.Columns["OfferPriceConvertToEUR"];
                this.columnOfferAmountInUSD = base.Columns["OfferAmountInUSD"];
                this.columnOfferAmountInEUR = base.Columns["OfferAmountInEUR"];
                this.columnOfferAmountConvertToEUR = base.Columns["OfferAmountConvertToEUR"];
                this.columnProformaInvoiceNo = base.Columns["ProformaInvoiceNo"];
                this.columnSaleOrderInvoiceDate = base.Columns["SaleOrderInvoiceDate"];
                this.columnSaleOrderAmountInUSD = base.Columns["SaleOrderAmountInUSD"];
                this.columnSaleOrderAmountInEUR = base.Columns["SaleOrderAmountInEUR"];
                this.columnSaleOrderAmountConvertToEUR = base.Columns["SaleOrderAmountConvertToEUR"];
                this.columnTrackingStatusNM = base.Columns["TrackingStatusNM"];
                this.columnEurofarInvoiceNo = base.Columns["EurofarInvoiceNo"];
                this.columnEurofarInvoiceDate = base.Columns["EurofarInvoiceDate"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnEurofarNetAmountInUSD = base.Columns["EurofarNetAmountInUSD"];
                this.columnEurofarNetAmountInEUR = base.Columns["EurofarNetAmountInEUR"];
                this.columnEurofarNetAmountConvertToEUR = base.Columns["EurofarNetAmountConvertToEUR"];
                this.columnBLNo = base.Columns["BLNo"];
                this.columnSupplierNM = base.Columns["SupplierNM"];
                this.columnSupplierUD = base.Columns["SupplierUD"];
                this.columnFactoryInvoiceNo = base.Columns["FactoryInvoiceNo"];
                this.columnPurchasingInvoiceNo = base.Columns["PurchasingInvoiceNo"];
                this.columnPurchasingInvoiceDate = base.Columns["PurchasingInvoiceDate"];
                this.columnPurchasingQnt = base.Columns["PurchasingQnt"];
                this.columnFactoryInvoiceAmount = base.Columns["FactoryInvoiceAmount"];
                this.columnPurchasingInvoiceAmount = base.Columns["PurchasingInvoiceAmount"];
                this.columnFactoryInvoiceAmountConvertoToEUR = base.Columns["FactoryInvoiceAmountConvertoToEUR"];
                this.columnGrossMarginGoods = base.Columns["GrossMarginGoods"];
                this.columnGrossMarginPercentGoods = base.Columns["GrossMarginPercentGoods"];
                this.columnCommissionPercent = base.Columns["CommissionPercent"];
                this.columnCommissionAmount = base.Columns["CommissionAmount"];
                this.columnGrossMarginExcludeTransport = base.Columns["GrossMarginExcludeTransport"];
                this.columnGrossMarginPercentExcludeTransport = base.Columns["GrossMarginPercentExcludeTransport"];
                this.columnPurchasePriceFOB = base.Columns["PurchasePriceFOB"];
                this.columnPurchasePriceDifference = base.Columns["PurchasePriceDifference"];
                this.columnPriceStatus = base.Columns["PriceStatus"];
                this.columnQuantityDifference = base.Columns["QuantityDifference"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSeason = new global::System.Data.DataColumn("Season", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeason);
                this.columnOfferUD = new global::System.Data.DataColumn("OfferUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferUD);
                this.columnOfferDate = new global::System.Data.DataColumn("OfferDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferDate);
                this.columnClientUD = new global::System.Data.DataColumn("ClientUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientUD);
                this.columnClientNM = new global::System.Data.DataColumn("ClientNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientNM);
                this.columnClientCountryNM = new global::System.Data.DataColumn("ClientCountryNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientCountryNM);
                this.columnSaleNM = new global::System.Data.DataColumn("SaleNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleNM);
                this.columnCurrency = new global::System.Data.DataColumn("Currency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency);
                this.columnArticleCode = new global::System.Data.DataColumn("ArticleCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArticleCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnOfferQnt = new global::System.Data.DataColumn("OfferQnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferQnt);
                this.columnOfferPriceInUSD = new global::System.Data.DataColumn("OfferPriceInUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferPriceInUSD);
                this.columnOfferPriceInEUR = new global::System.Data.DataColumn("OfferPriceInEUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferPriceInEUR);
                this.columnOfferPriceConvertToEUR = new global::System.Data.DataColumn("OfferPriceConvertToEUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferPriceConvertToEUR);
                this.columnOfferAmountInUSD = new global::System.Data.DataColumn("OfferAmountInUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferAmountInUSD);
                this.columnOfferAmountInEUR = new global::System.Data.DataColumn("OfferAmountInEUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferAmountInEUR);
                this.columnOfferAmountConvertToEUR = new global::System.Data.DataColumn("OfferAmountConvertToEUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferAmountConvertToEUR);
                this.columnProformaInvoiceNo = new global::System.Data.DataColumn("ProformaInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProformaInvoiceNo);
                this.columnSaleOrderInvoiceDate = new global::System.Data.DataColumn("SaleOrderInvoiceDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleOrderInvoiceDate);
                this.columnSaleOrderAmountInUSD = new global::System.Data.DataColumn("SaleOrderAmountInUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleOrderAmountInUSD);
                this.columnSaleOrderAmountInEUR = new global::System.Data.DataColumn("SaleOrderAmountInEUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleOrderAmountInEUR);
                this.columnSaleOrderAmountConvertToEUR = new global::System.Data.DataColumn("SaleOrderAmountConvertToEUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleOrderAmountConvertToEUR);
                this.columnTrackingStatusNM = new global::System.Data.DataColumn("TrackingStatusNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrackingStatusNM);
                this.columnEurofarInvoiceNo = new global::System.Data.DataColumn("EurofarInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEurofarInvoiceNo);
                this.columnEurofarInvoiceDate = new global::System.Data.DataColumn("EurofarInvoiceDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEurofarInvoiceDate);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnEurofarNetAmountInUSD = new global::System.Data.DataColumn("EurofarNetAmountInUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEurofarNetAmountInUSD);
                this.columnEurofarNetAmountInEUR = new global::System.Data.DataColumn("EurofarNetAmountInEUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEurofarNetAmountInEUR);
                this.columnEurofarNetAmountConvertToEUR = new global::System.Data.DataColumn("EurofarNetAmountConvertToEUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEurofarNetAmountConvertToEUR);
                this.columnBLNo = new global::System.Data.DataColumn("BLNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLNo);
                this.columnSupplierNM = new global::System.Data.DataColumn("SupplierNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierNM);
                this.columnSupplierUD = new global::System.Data.DataColumn("SupplierUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierUD);
                this.columnFactoryInvoiceNo = new global::System.Data.DataColumn("FactoryInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactoryInvoiceNo);
                this.columnPurchasingInvoiceNo = new global::System.Data.DataColumn("PurchasingInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchasingInvoiceNo);
                this.columnPurchasingInvoiceDate = new global::System.Data.DataColumn("PurchasingInvoiceDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchasingInvoiceDate);
                this.columnPurchasingQnt = new global::System.Data.DataColumn("PurchasingQnt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchasingQnt);
                this.columnFactoryInvoiceAmount = new global::System.Data.DataColumn("FactoryInvoiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactoryInvoiceAmount);
                this.columnPurchasingInvoiceAmount = new global::System.Data.DataColumn("PurchasingInvoiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchasingInvoiceAmount);
                this.columnFactoryInvoiceAmountConvertoToEUR = new global::System.Data.DataColumn("FactoryInvoiceAmountConvertoToEUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactoryInvoiceAmountConvertoToEUR);
                this.columnGrossMarginGoods = new global::System.Data.DataColumn("GrossMarginGoods", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossMarginGoods);
                this.columnGrossMarginPercentGoods = new global::System.Data.DataColumn("GrossMarginPercentGoods", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossMarginPercentGoods);
                this.columnCommissionPercent = new global::System.Data.DataColumn("CommissionPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommissionPercent);
                this.columnCommissionAmount = new global::System.Data.DataColumn("CommissionAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommissionAmount);
                this.columnGrossMarginExcludeTransport = new global::System.Data.DataColumn("GrossMarginExcludeTransport", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossMarginExcludeTransport);
                this.columnGrossMarginPercentExcludeTransport = new global::System.Data.DataColumn("GrossMarginPercentExcludeTransport", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossMarginPercentExcludeTransport);
                this.columnPurchasePriceFOB = new global::System.Data.DataColumn("PurchasePriceFOB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchasePriceFOB);
                this.columnPurchasePriceDifference = new global::System.Data.DataColumn("PurchasePriceDifference", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchasePriceDifference);
                this.columnPriceStatus = new global::System.Data.DataColumn("PriceStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceStatus);
                this.columnQuantityDifference = new global::System.Data.DataColumn("QuantityDifference", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityDifference);
                this.columnSeason.MaxLength = 9;
                this.columnOfferUD.MaxLength = 255;
                this.columnOfferDate.ReadOnly = true;
                this.columnOfferDate.MaxLength = 8000;
                this.columnClientUD.MaxLength = 8;
                this.columnClientNM.MaxLength = 255;
                this.columnClientCountryNM.MaxLength = 50;
                this.columnSaleNM.MaxLength = 255;
                this.columnCurrency.MaxLength = 3;
                this.columnArticleCode.MaxLength = 26;
                this.columnDescription.MaxLength = 500;
                this.columnOfferPriceInUSD.ReadOnly = true;
                this.columnOfferPriceInEUR.ReadOnly = true;
                this.columnOfferPriceConvertToEUR.ReadOnly = true;
                this.columnOfferAmountInUSD.ReadOnly = true;
                this.columnOfferAmountInEUR.ReadOnly = true;
                this.columnOfferAmountConvertToEUR.ReadOnly = true;
                this.columnProformaInvoiceNo.MaxLength = 20;
                this.columnSaleOrderInvoiceDate.ReadOnly = true;
                this.columnSaleOrderInvoiceDate.MaxLength = 8000;
                this.columnSaleOrderAmountInUSD.ReadOnly = true;
                this.columnSaleOrderAmountInEUR.ReadOnly = true;
                this.columnSaleOrderAmountConvertToEUR.ReadOnly = true;
                this.columnTrackingStatusNM.MaxLength = 255;
                this.columnEurofarInvoiceNo.MaxLength = 20;
                this.columnEurofarInvoiceDate.ReadOnly = true;
                this.columnEurofarInvoiceDate.MaxLength = 8000;
                this.columnEurofarNetAmountInUSD.ReadOnly = true;
                this.columnEurofarNetAmountInEUR.ReadOnly = true;
                this.columnEurofarNetAmountConvertToEUR.ReadOnly = true;
                this.columnBLNo.MaxLength = 50;
                this.columnSupplierNM.MaxLength = 255;
                this.columnSupplierUD.MaxLength = 20;
                this.columnFactoryInvoiceNo.MaxLength = 255;
                this.columnPurchasingInvoiceNo.MaxLength = 20;
                this.columnPurchasingInvoiceDate.ReadOnly = true;
                this.columnPurchasingInvoiceDate.MaxLength = 8000;
                this.columnFactoryInvoiceAmount.ReadOnly = true;
                this.columnPurchasingInvoiceAmount.ReadOnly = true;
                this.columnFactoryInvoiceAmountConvertoToEUR.ReadOnly = true;
                this.columnGrossMarginGoods.ReadOnly = true;
                this.columnGrossMarginPercentGoods.ReadOnly = true;
                this.columnCommissionAmount.ReadOnly = true;
                this.columnGrossMarginExcludeTransport.ReadOnly = true;
                this.columnGrossMarginPercentExcludeTransport.ReadOnly = true;
                this.columnPurchasePriceFOB.ReadOnly = true;
                this.columnPurchasePriceDifference.ReadOnly = true;
                this.columnPriceStatus.ReadOnly = true;
                this.columnPriceStatus.MaxLength = 30;
                this.columnQuantityDifference.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Report_SummaryPerArticle_ViewRow NewReport_SummaryPerArticle_ViewRow() {
                return ((Report_SummaryPerArticle_ViewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Report_SummaryPerArticle_ViewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Report_SummaryPerArticle_ViewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Report_SummaryPerArticle_ViewRowChanged != null)) {
                    this.Report_SummaryPerArticle_ViewRowChanged(this, new Report_SummaryPerArticle_ViewRowChangeEvent(((Report_SummaryPerArticle_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Report_SummaryPerArticle_ViewRowChanging != null)) {
                    this.Report_SummaryPerArticle_ViewRowChanging(this, new Report_SummaryPerArticle_ViewRowChangeEvent(((Report_SummaryPerArticle_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Report_SummaryPerArticle_ViewRowDeleted != null)) {
                    this.Report_SummaryPerArticle_ViewRowDeleted(this, new Report_SummaryPerArticle_ViewRowChangeEvent(((Report_SummaryPerArticle_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Report_SummaryPerArticle_ViewRowDeleting != null)) {
                    this.Report_SummaryPerArticle_ViewRowDeleting(this, new Report_SummaryPerArticle_ViewRowChangeEvent(((Report_SummaryPerArticle_ViewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveReport_SummaryPerArticle_ViewRow(Report_SummaryPerArticle_ViewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportDataObject ds = new ReportDataObject();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Report_SummaryPerArticle_ViewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Report_SummaryPerArticle_ViewRow : global::System.Data.DataRow {
            
            private Report_SummaryPerArticle_ViewDataTable tableReport_SummaryPerArticle_View;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Report_SummaryPerArticle_ViewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReport_SummaryPerArticle_View = ((Report_SummaryPerArticle_ViewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Season {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.SeasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Season\' in table \'Report_SummaryPerArticle_View\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.SeasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OfferUD {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.OfferUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferUD\' in table \'Report_SummaryPerArticle_View\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.OfferUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OfferDate {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.OfferDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferDate\' in table \'Report_SummaryPerArticle_View\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.OfferDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientUD {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.ClientUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientUD\' in table \'Report_SummaryPerArticle_View\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.ClientUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientNM {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.ClientNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientNM\' in table \'Report_SummaryPerArticle_View\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.ClientNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientCountryNM {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.ClientCountryNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientCountryNM\' in table \'Report_SummaryPerArticle_View\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.ClientCountryNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SaleNM {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.SaleNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleNM\' in table \'Report_SummaryPerArticle_View\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.SaleNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Currency {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.CurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Currency\' in table \'Report_SummaryPerArticle_View\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.CurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArticleCode {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.ArticleCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArticleCode\' in table \'Report_SummaryPerArticle_View\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.ArticleCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Report_SummaryPerArticle_View\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OfferQnt {
                get {
                    try {
                        return ((int)(this[this.tableReport_SummaryPerArticle_View.OfferQntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferQnt\' in table \'Report_SummaryPerArticle_View\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.OfferQntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OfferPriceInUSD {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.OfferPriceInUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferPriceInUSD\' in table \'Report_SummaryPerArticle_View\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.OfferPriceInUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OfferPriceInEUR {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.OfferPriceInEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferPriceInEUR\' in table \'Report_SummaryPerArticle_View\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.OfferPriceInEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OfferPriceConvertToEUR {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.OfferPriceConvertToEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferPriceConvertToEUR\' in table \'Report_SummaryPerArticle_" +
                                "View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.OfferPriceConvertToEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OfferAmountInUSD {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.OfferAmountInUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferAmountInUSD\' in table \'Report_SummaryPerArticle_View\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.OfferAmountInUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OfferAmountInEUR {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.OfferAmountInEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferAmountInEUR\' in table \'Report_SummaryPerArticle_View\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.OfferAmountInEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OfferAmountConvertToEUR {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.OfferAmountConvertToEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferAmountConvertToEUR\' in table \'Report_SummaryPerArticle" +
                                "_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.OfferAmountConvertToEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProformaInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.ProformaInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProformaInvoiceNo\' in table \'Report_SummaryPerArticle_View\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.ProformaInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SaleOrderInvoiceDate {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.SaleOrderInvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleOrderInvoiceDate\' in table \'Report_SummaryPerArticle_Vi" +
                                "ew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.SaleOrderInvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SaleOrderAmountInUSD {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.SaleOrderAmountInUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleOrderAmountInUSD\' in table \'Report_SummaryPerArticle_Vi" +
                                "ew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.SaleOrderAmountInUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SaleOrderAmountInEUR {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.SaleOrderAmountInEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleOrderAmountInEUR\' in table \'Report_SummaryPerArticle_Vi" +
                                "ew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.SaleOrderAmountInEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SaleOrderAmountConvertToEUR {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.SaleOrderAmountConvertToEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleOrderAmountConvertToEUR\' in table \'Report_SummaryPerArt" +
                                "icle_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.SaleOrderAmountConvertToEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TrackingStatusNM {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.TrackingStatusNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrackingStatusNM\' in table \'Report_SummaryPerArticle_View\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.TrackingStatusNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EurofarInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.EurofarInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EurofarInvoiceNo\' in table \'Report_SummaryPerArticle_View\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.EurofarInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EurofarInvoiceDate {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.EurofarInvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EurofarInvoiceDate\' in table \'Report_SummaryPerArticle_View" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.EurofarInvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Quantity {
                get {
                    try {
                        return ((int)(this[this.tableReport_SummaryPerArticle_View.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'Report_SummaryPerArticle_View\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EurofarNetAmountInUSD {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.EurofarNetAmountInUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EurofarNetAmountInUSD\' in table \'Report_SummaryPerArticle_V" +
                                "iew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.EurofarNetAmountInUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EurofarNetAmountInEUR {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.EurofarNetAmountInEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EurofarNetAmountInEUR\' in table \'Report_SummaryPerArticle_V" +
                                "iew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.EurofarNetAmountInEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EurofarNetAmountConvertToEUR {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.EurofarNetAmountConvertToEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EurofarNetAmountConvertToEUR\' in table \'Report_SummaryPerAr" +
                                "ticle_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.EurofarNetAmountConvertToEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BLNo {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.BLNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BLNo\' in table \'Report_SummaryPerArticle_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.BLNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierNM {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.SupplierNMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierNM\' in table \'Report_SummaryPerArticle_View\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.SupplierNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierUD {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.SupplierUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierUD\' in table \'Report_SummaryPerArticle_View\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.SupplierUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactoryInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.FactoryInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactoryInvoiceNo\' in table \'Report_SummaryPerArticle_View\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.FactoryInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PurchasingInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.PurchasingInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchasingInvoiceNo\' in table \'Report_SummaryPerArticle_Vie" +
                                "w\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.PurchasingInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PurchasingInvoiceDate {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.PurchasingInvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchasingInvoiceDate\' in table \'Report_SummaryPerArticle_V" +
                                "iew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.PurchasingInvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PurchasingQnt {
                get {
                    try {
                        return ((int)(this[this.tableReport_SummaryPerArticle_View.PurchasingQntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchasingQnt\' in table \'Report_SummaryPerArticle_View\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.PurchasingQntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FactoryInvoiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.FactoryInvoiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactoryInvoiceAmount\' in table \'Report_SummaryPerArticle_Vi" +
                                "ew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.FactoryInvoiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PurchasingInvoiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.PurchasingInvoiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchasingInvoiceAmount\' in table \'Report_SummaryPerArticle" +
                                "_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.PurchasingInvoiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FactoryInvoiceAmountConvertoToEUR {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.FactoryInvoiceAmountConvertoToEURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactoryInvoiceAmountConvertoToEUR\' in table \'Report_Summary" +
                                "PerArticle_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.FactoryInvoiceAmountConvertoToEURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GrossMarginGoods {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.GrossMarginGoodsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossMarginGoods\' in table \'Report_SummaryPerArticle_View\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.GrossMarginGoodsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GrossMarginPercentGoods {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.GrossMarginPercentGoodsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossMarginPercentGoods\' in table \'Report_SummaryPerArticle" +
                                "_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.GrossMarginPercentGoodsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CommissionPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.CommissionPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommissionPercent\' in table \'Report_SummaryPerArticle_View\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.CommissionPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CommissionAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.CommissionAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommissionAmount\' in table \'Report_SummaryPerArticle_View\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.CommissionAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GrossMarginExcludeTransport {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.GrossMarginExcludeTransportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossMarginExcludeTransport\' in table \'Report_SummaryPerArt" +
                                "icle_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.GrossMarginExcludeTransportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GrossMarginPercentExcludeTransport {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.GrossMarginPercentExcludeTransportColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossMarginPercentExcludeTransport\' in table \'Report_Summar" +
                                "yPerArticle_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.GrossMarginPercentExcludeTransportColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PurchasePriceFOB {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.PurchasePriceFOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchasePriceFOB\' in table \'Report_SummaryPerArticle_View\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.PurchasePriceFOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PurchasePriceDifference {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.PurchasePriceDifferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchasePriceDifference\' in table \'Report_SummaryPerArticle" +
                                "_View\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.PurchasePriceDifferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PriceStatus {
                get {
                    try {
                        return ((string)(this[this.tableReport_SummaryPerArticle_View.PriceStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceStatus\' in table \'Report_SummaryPerArticle_View\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.PriceStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QuantityDifference {
                get {
                    try {
                        return ((decimal)(this[this.tableReport_SummaryPerArticle_View.QuantityDifferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuantityDifference\' in table \'Report_SummaryPerArticle_View" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_SummaryPerArticle_View.QuantityDifferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeasonNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.SeasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeasonNull() {
                this[this.tableReport_SummaryPerArticle_View.SeasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfferUDNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.OfferUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfferUDNull() {
                this[this.tableReport_SummaryPerArticle_View.OfferUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfferDateNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.OfferDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfferDateNull() {
                this[this.tableReport_SummaryPerArticle_View.OfferDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientUDNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.ClientUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientUDNull() {
                this[this.tableReport_SummaryPerArticle_View.ClientUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientNMNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.ClientNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientNMNull() {
                this[this.tableReport_SummaryPerArticle_View.ClientNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientCountryNMNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.ClientCountryNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientCountryNMNull() {
                this[this.tableReport_SummaryPerArticle_View.ClientCountryNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSaleNMNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.SaleNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSaleNMNull() {
                this[this.tableReport_SummaryPerArticle_View.SaleNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.CurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyNull() {
                this[this.tableReport_SummaryPerArticle_View.CurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArticleCodeNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.ArticleCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArticleCodeNull() {
                this[this.tableReport_SummaryPerArticle_View.ArticleCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableReport_SummaryPerArticle_View.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfferQntNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.OfferQntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfferQntNull() {
                this[this.tableReport_SummaryPerArticle_View.OfferQntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfferPriceInUSDNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.OfferPriceInUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfferPriceInUSDNull() {
                this[this.tableReport_SummaryPerArticle_View.OfferPriceInUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfferPriceInEURNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.OfferPriceInEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfferPriceInEURNull() {
                this[this.tableReport_SummaryPerArticle_View.OfferPriceInEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfferPriceConvertToEURNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.OfferPriceConvertToEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfferPriceConvertToEURNull() {
                this[this.tableReport_SummaryPerArticle_View.OfferPriceConvertToEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfferAmountInUSDNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.OfferAmountInUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfferAmountInUSDNull() {
                this[this.tableReport_SummaryPerArticle_View.OfferAmountInUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfferAmountInEURNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.OfferAmountInEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfferAmountInEURNull() {
                this[this.tableReport_SummaryPerArticle_View.OfferAmountInEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfferAmountConvertToEURNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.OfferAmountConvertToEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfferAmountConvertToEURNull() {
                this[this.tableReport_SummaryPerArticle_View.OfferAmountConvertToEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProformaInvoiceNoNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.ProformaInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProformaInvoiceNoNull() {
                this[this.tableReport_SummaryPerArticle_View.ProformaInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSaleOrderInvoiceDateNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.SaleOrderInvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSaleOrderInvoiceDateNull() {
                this[this.tableReport_SummaryPerArticle_View.SaleOrderInvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSaleOrderAmountInUSDNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.SaleOrderAmountInUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSaleOrderAmountInUSDNull() {
                this[this.tableReport_SummaryPerArticle_View.SaleOrderAmountInUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSaleOrderAmountInEURNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.SaleOrderAmountInEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSaleOrderAmountInEURNull() {
                this[this.tableReport_SummaryPerArticle_View.SaleOrderAmountInEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSaleOrderAmountConvertToEURNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.SaleOrderAmountConvertToEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSaleOrderAmountConvertToEURNull() {
                this[this.tableReport_SummaryPerArticle_View.SaleOrderAmountConvertToEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTrackingStatusNMNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.TrackingStatusNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTrackingStatusNMNull() {
                this[this.tableReport_SummaryPerArticle_View.TrackingStatusNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEurofarInvoiceNoNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.EurofarInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEurofarInvoiceNoNull() {
                this[this.tableReport_SummaryPerArticle_View.EurofarInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEurofarInvoiceDateNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.EurofarInvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEurofarInvoiceDateNull() {
                this[this.tableReport_SummaryPerArticle_View.EurofarInvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityNull() {
                this[this.tableReport_SummaryPerArticle_View.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEurofarNetAmountInUSDNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.EurofarNetAmountInUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEurofarNetAmountInUSDNull() {
                this[this.tableReport_SummaryPerArticle_View.EurofarNetAmountInUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEurofarNetAmountInEURNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.EurofarNetAmountInEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEurofarNetAmountInEURNull() {
                this[this.tableReport_SummaryPerArticle_View.EurofarNetAmountInEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEurofarNetAmountConvertToEURNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.EurofarNetAmountConvertToEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEurofarNetAmountConvertToEURNull() {
                this[this.tableReport_SummaryPerArticle_View.EurofarNetAmountConvertToEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBLNoNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.BLNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBLNoNull() {
                this[this.tableReport_SummaryPerArticle_View.BLNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierNMNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.SupplierNMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierNMNull() {
                this[this.tableReport_SummaryPerArticle_View.SupplierNMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierUDNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.SupplierUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierUDNull() {
                this[this.tableReport_SummaryPerArticle_View.SupplierUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFactoryInvoiceNoNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.FactoryInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFactoryInvoiceNoNull() {
                this[this.tableReport_SummaryPerArticle_View.FactoryInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchasingInvoiceNoNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.PurchasingInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchasingInvoiceNoNull() {
                this[this.tableReport_SummaryPerArticle_View.PurchasingInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchasingInvoiceDateNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.PurchasingInvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchasingInvoiceDateNull() {
                this[this.tableReport_SummaryPerArticle_View.PurchasingInvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchasingQntNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.PurchasingQntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchasingQntNull() {
                this[this.tableReport_SummaryPerArticle_View.PurchasingQntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFactoryInvoiceAmountNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.FactoryInvoiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFactoryInvoiceAmountNull() {
                this[this.tableReport_SummaryPerArticle_View.FactoryInvoiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchasingInvoiceAmountNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.PurchasingInvoiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchasingInvoiceAmountNull() {
                this[this.tableReport_SummaryPerArticle_View.PurchasingInvoiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFactoryInvoiceAmountConvertoToEURNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.FactoryInvoiceAmountConvertoToEURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFactoryInvoiceAmountConvertoToEURNull() {
                this[this.tableReport_SummaryPerArticle_View.FactoryInvoiceAmountConvertoToEURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrossMarginGoodsNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.GrossMarginGoodsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrossMarginGoodsNull() {
                this[this.tableReport_SummaryPerArticle_View.GrossMarginGoodsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrossMarginPercentGoodsNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.GrossMarginPercentGoodsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrossMarginPercentGoodsNull() {
                this[this.tableReport_SummaryPerArticle_View.GrossMarginPercentGoodsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommissionPercentNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.CommissionPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommissionPercentNull() {
                this[this.tableReport_SummaryPerArticle_View.CommissionPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommissionAmountNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.CommissionAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommissionAmountNull() {
                this[this.tableReport_SummaryPerArticle_View.CommissionAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrossMarginExcludeTransportNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.GrossMarginExcludeTransportColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrossMarginExcludeTransportNull() {
                this[this.tableReport_SummaryPerArticle_View.GrossMarginExcludeTransportColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrossMarginPercentExcludeTransportNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.GrossMarginPercentExcludeTransportColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrossMarginPercentExcludeTransportNull() {
                this[this.tableReport_SummaryPerArticle_View.GrossMarginPercentExcludeTransportColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchasePriceFOBNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.PurchasePriceFOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchasePriceFOBNull() {
                this[this.tableReport_SummaryPerArticle_View.PurchasePriceFOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchasePriceDifferenceNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.PurchasePriceDifferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchasePriceDifferenceNull() {
                this[this.tableReport_SummaryPerArticle_View.PurchasePriceDifferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceStatusNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.PriceStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceStatusNull() {
                this[this.tableReport_SummaryPerArticle_View.PriceStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuantityDifferenceNull() {
                return this.IsNull(this.tableReport_SummaryPerArticle_View.QuantityDifferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuantityDifferenceNull() {
                this[this.tableReport_SummaryPerArticle_View.QuantityDifferenceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Report_SummaryPerArticle_ViewRowChangeEvent : global::System.EventArgs {
            
            private Report_SummaryPerArticle_ViewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Report_SummaryPerArticle_ViewRowChangeEvent(Report_SummaryPerArticle_ViewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Report_SummaryPerArticle_ViewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Module.SummaryPerArticleRpt.DAL.ReportDataObjectTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Report_SummaryPerArticle_ViewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Report_SummaryPerArticle_ViewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Report_SummaryPerArticle_View";
            tableMapping.ColumnMappings.Add("Season", "Season");
            tableMapping.ColumnMappings.Add("OfferUD", "OfferUD");
            tableMapping.ColumnMappings.Add("OfferDate", "OfferDate");
            tableMapping.ColumnMappings.Add("ClientUD", "ClientUD");
            tableMapping.ColumnMappings.Add("ClientNM", "ClientNM");
            tableMapping.ColumnMappings.Add("ClientCountryNM", "ClientCountryNM");
            tableMapping.ColumnMappings.Add("SaleNM", "SaleNM");
            tableMapping.ColumnMappings.Add("Currency", "Currency");
            tableMapping.ColumnMappings.Add("ArticleCode", "ArticleCode");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("OfferQnt", "OfferQnt");
            tableMapping.ColumnMappings.Add("OfferPriceInUSD", "OfferPriceInUSD");
            tableMapping.ColumnMappings.Add("OfferPriceInEUR", "OfferPriceInEUR");
            tableMapping.ColumnMappings.Add("OfferPriceConvertToEUR", "OfferPriceConvertToEUR");
            tableMapping.ColumnMappings.Add("OfferAmountInUSD", "OfferAmountInUSD");
            tableMapping.ColumnMappings.Add("OfferAmountInEUR", "OfferAmountInEUR");
            tableMapping.ColumnMappings.Add("OfferAmountConvertToEUR", "OfferAmountConvertToEUR");
            tableMapping.ColumnMappings.Add("ProformaInvoiceNo", "ProformaInvoiceNo");
            tableMapping.ColumnMappings.Add("SaleOrderInvoiceDate", "SaleOrderInvoiceDate");
            tableMapping.ColumnMappings.Add("SaleOrderAmountInUSD", "SaleOrderAmountInUSD");
            tableMapping.ColumnMappings.Add("SaleOrderAmountInEUR", "SaleOrderAmountInEUR");
            tableMapping.ColumnMappings.Add("SaleOrderAmountConvertToEUR", "SaleOrderAmountConvertToEUR");
            tableMapping.ColumnMappings.Add("TrackingStatusNM", "TrackingStatusNM");
            tableMapping.ColumnMappings.Add("EurofarInvoiceNo", "EurofarInvoiceNo");
            tableMapping.ColumnMappings.Add("EurofarInvoiceDate", "EurofarInvoiceDate");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            tableMapping.ColumnMappings.Add("EurofarNetAmountInUSD", "EurofarNetAmountInUSD");
            tableMapping.ColumnMappings.Add("EurofarNetAmountInEUR", "EurofarNetAmountInEUR");
            tableMapping.ColumnMappings.Add("EurofarNetAmountConvertToEUR", "EurofarNetAmountConvertToEUR");
            tableMapping.ColumnMappings.Add("BLNo", "BLNo");
            tableMapping.ColumnMappings.Add("SupplierNM", "SupplierNM");
            tableMapping.ColumnMappings.Add("SupplierUD", "SupplierUD");
            tableMapping.ColumnMappings.Add("FactoryInvoiceNo", "FactoryInvoiceNo");
            tableMapping.ColumnMappings.Add("PurchasingInvoiceNo", "PurchasingInvoiceNo");
            tableMapping.ColumnMappings.Add("PurchasingInvoiceDate", "PurchasingInvoiceDate");
            tableMapping.ColumnMappings.Add("PurchasingQnt", "PurchasingQnt");
            tableMapping.ColumnMappings.Add("FactoryInvoiceAmount", "FactoryInvoiceAmount");
            tableMapping.ColumnMappings.Add("PurchasingInvoiceAmount", "PurchasingInvoiceAmount");
            tableMapping.ColumnMappings.Add("FactoryInvoiceAmountConvertoToEUR", "FactoryInvoiceAmountConvertoToEUR");
            tableMapping.ColumnMappings.Add("GrossMarginGoods", "GrossMarginGoods");
            tableMapping.ColumnMappings.Add("GrossMarginPercentGoods", "GrossMarginPercentGoods");
            tableMapping.ColumnMappings.Add("CommissionPercent", "CommissionPercent");
            tableMapping.ColumnMappings.Add("CommissionAmount", "CommissionAmount");
            tableMapping.ColumnMappings.Add("GrossMarginExcludeTransport", "GrossMarginExcludeTransport");
            tableMapping.ColumnMappings.Add("GrossMarginPercentExcludeTransport", "GrossMarginPercentExcludeTransport");
            tableMapping.ColumnMappings.Add("PurchasePriceFOB", "PurchasePriceFOB");
            tableMapping.ColumnMappings.Add("PurchasePriceDifference", "PurchasePriceDifference");
            tableMapping.ColumnMappings.Add("PriceStatus", "PriceStatus");
            tableMapping.ColumnMappings.Add("QuantityDifference", "QuantityDifference");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Module.SummaryPerArticleRpt.Properties.Settings.Default.TILSOFTConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM Report_SummaryPerArticle_View";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ReportDataObject.Report_SummaryPerArticle_ViewDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ReportDataObject.Report_SummaryPerArticle_ViewDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ReportDataObject.Report_SummaryPerArticle_ViewDataTable dataTable = new ReportDataObject.Report_SummaryPerArticle_ViewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ReportDataObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ReportDataObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ReportDataObject dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ReportDataObject dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591