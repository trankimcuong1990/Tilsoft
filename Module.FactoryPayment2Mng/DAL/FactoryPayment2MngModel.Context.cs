//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.FactoryPayment2Mng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FactoryPayment2MngEntities : DbContext
    {
        public FactoryPayment2MngEntities()
            : base("name=FactoryPayment2MngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FactoryPayment2> FactoryPayment2 { get; set; }
        public virtual DbSet<FactoryPayment2Detail> FactoryPayment2Detail { get; set; }
        public virtual DbSet<FactoryPayment2Mng_FactoryPayment2_View> FactoryPayment2Mng_FactoryPayment2_View { get; set; }
        public virtual DbSet<FactoryPayment2Mng_FactoryPayment2Detail_View> FactoryPayment2Mng_FactoryPayment2Detail_View { get; set; }
        public virtual DbSet<FactoryPayment2Mng_FactoryPayment2SearchResult_View> FactoryPayment2Mng_FactoryPayment2SearchResult_View { get; set; }
        public virtual DbSet<FactoryPayment2Mng_PurchasingInvoiceSearchResult_View> FactoryPayment2Mng_PurchasingInvoiceSearchResult_View { get; set; }
        public virtual DbSet<FactoryPayment2Mng_SummaryRow_View> FactoryPayment2Mng_SummaryRow_View { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> FactoryPayment2Mng_function_GetRemainDPAmount(string season, Nullable<int> supplierID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("FactoryPayment2Mng_function_GetRemainDPAmount", seasonParameter, supplierIDParameter);
        }
    
        public virtual ObjectResult<FactoryPayment2Mng_FactoryPayment2SearchResult_View> FactoryPayment2Mng_function_SearchPayment(string season, Nullable<int> supplierID, Nullable<int> userID, string receiptNo, string bankReceiptNo, string invoiceNo, string sortedBy, string sortedDirection)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var bankReceiptNoParameter = bankReceiptNo != null ?
                new ObjectParameter("BankReceiptNo", bankReceiptNo) :
                new ObjectParameter("BankReceiptNo", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPayment2Mng_FactoryPayment2SearchResult_View>("FactoryPayment2Mng_function_SearchPayment", seasonParameter, supplierIDParameter, userIDParameter, receiptNoParameter, bankReceiptNoParameter, invoiceNoParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<FactoryPayment2Mng_FactoryPayment2SearchResult_View> FactoryPayment2Mng_function_SearchPayment(string season, Nullable<int> supplierID, Nullable<int> userID, string receiptNo, string bankReceiptNo, string invoiceNo, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var bankReceiptNoParameter = bankReceiptNo != null ?
                new ObjectParameter("BankReceiptNo", bankReceiptNo) :
                new ObjectParameter("BankReceiptNo", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPayment2Mng_FactoryPayment2SearchResult_View>("FactoryPayment2Mng_function_SearchPayment", mergeOption, seasonParameter, supplierIDParameter, userIDParameter, receiptNoParameter, bankReceiptNoParameter, invoiceNoParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<FactoryPayment2Mng_PurchasingInvoiceSearchResult_View> FactoryPayment2Mng_function_SearchPurchasingInvoice(Nullable<int> userID, Nullable<int> supplierID, string query)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPayment2Mng_PurchasingInvoiceSearchResult_View>("FactoryPayment2Mng_function_SearchPurchasingInvoice", userIDParameter, supplierIDParameter, queryParameter);
        }
    
        public virtual ObjectResult<FactoryPayment2Mng_PurchasingInvoiceSearchResult_View> FactoryPayment2Mng_function_SearchPurchasingInvoice(Nullable<int> userID, Nullable<int> supplierID, string query, MergeOption mergeOption)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPayment2Mng_PurchasingInvoiceSearchResult_View>("FactoryPayment2Mng_function_SearchPurchasingInvoice", mergeOption, userIDParameter, supplierIDParameter, queryParameter);
        }
    
        public virtual ObjectResult<FactoryPayment2Mng_SummaryRow_View> FactoryPayment2Mng_function_SearchPaymentSummary(string season, Nullable<int> supplierID, Nullable<int> userID, string receiptNo, string bankReceiptNo, string invoiceNo)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var bankReceiptNoParameter = bankReceiptNo != null ?
                new ObjectParameter("BankReceiptNo", bankReceiptNo) :
                new ObjectParameter("BankReceiptNo", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPayment2Mng_SummaryRow_View>("FactoryPayment2Mng_function_SearchPaymentSummary", seasonParameter, supplierIDParameter, userIDParameter, receiptNoParameter, bankReceiptNoParameter, invoiceNoParameter);
        }
    
        public virtual ObjectResult<FactoryPayment2Mng_SummaryRow_View> FactoryPayment2Mng_function_SearchPaymentSummary(string season, Nullable<int> supplierID, Nullable<int> userID, string receiptNo, string bankReceiptNo, string invoiceNo, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var bankReceiptNoParameter = bankReceiptNo != null ?
                new ObjectParameter("BankReceiptNo", bankReceiptNo) :
                new ObjectParameter("BankReceiptNo", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPayment2Mng_SummaryRow_View>("FactoryPayment2Mng_function_SearchPaymentSummary", mergeOption, seasonParameter, supplierIDParameter, userIDParameter, receiptNoParameter, bankReceiptNoParameter, invoiceNoParameter);
        }
    }
}
