//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.TypeOfDefectMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TypeOfDefectEntities : DbContext
    {
        public TypeOfDefectEntities()
            : base("name=TypeOfDefectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TypeOfDefect> TypeOfDefect { get; set; }
        public virtual DbSet<Support_TypeOfDefects_View> Support_TypeOfDefects_View { get; set; }
    
        public virtual ObjectResult<Support_TypeOfDefects_View> TypeOfDefectMng_function_TypeOfDefectSearchResult(string typeOfDefectUD, string typeOfDefectNM, string remark, string sortedBy, string sortedDirection)
        {
            var typeOfDefectUDParameter = typeOfDefectUD != null ?
                new ObjectParameter("TypeOfDefectUD", typeOfDefectUD) :
                new ObjectParameter("TypeOfDefectUD", typeof(string));
    
            var typeOfDefectNMParameter = typeOfDefectNM != null ?
                new ObjectParameter("TypeOfDefectNM", typeOfDefectNM) :
                new ObjectParameter("TypeOfDefectNM", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Support_TypeOfDefects_View>("TypeOfDefectMng_function_TypeOfDefectSearchResult", typeOfDefectUDParameter, typeOfDefectNMParameter, remarkParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<Support_TypeOfDefects_View> TypeOfDefectMng_function_TypeOfDefectSearchResult(string typeOfDefectUD, string typeOfDefectNM, string remark, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var typeOfDefectUDParameter = typeOfDefectUD != null ?
                new ObjectParameter("TypeOfDefectUD", typeOfDefectUD) :
                new ObjectParameter("TypeOfDefectUD", typeof(string));
    
            var typeOfDefectNMParameter = typeOfDefectNM != null ?
                new ObjectParameter("TypeOfDefectNM", typeOfDefectNM) :
                new ObjectParameter("TypeOfDefectNM", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Support_TypeOfDefects_View>("TypeOfDefectMng_function_TypeOfDefectSearchResult", mergeOption, typeOfDefectUDParameter, typeOfDefectNMParameter, remarkParameter, sortedByParameter, sortedDirectionParameter);
        }
    }
}
