//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.FactoryPerformanceRpt.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FactoryPerformanceRptEntities : DbContext
    {
        public FactoryPerformanceRptEntities()
            : base("name=FactoryPerformanceRptEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FactoryPerformanceRpt_FactoryInfoReportData_View> FactoryPerformanceRpt_FactoryInfoReportData_View { get; set; }
        public virtual DbSet<FactoryPerformanceRpt_WeekInfoReportData_View> FactoryPerformanceRpt_WeekInfoReportData_View { get; set; }
        public virtual DbSet<FactoryPerformanceRpt_WeeklyProducedReportData_View> FactoryPerformanceRpt_WeeklyProducedReportData_View { get; set; }
        public virtual DbSet<FactoryPerformanceRpt_YearlyProducedReportData_View> FactoryPerformanceRpt_YearlyProducedReportData_View { get; set; }
        public virtual DbSet<FactoryPerformanceRpt_TotalCapacityAndOrder_View> FactoryPerformanceRpt_TotalCapacityAndOrder_View { get; set; }
        public virtual DbSet<FactoryPerformanceRpt_TotalCapacityAndOrderByWeekOfFactory_View> FactoryPerformanceRpt_TotalCapacityAndOrderByWeekOfFactory_View { get; set; }
        public virtual DbSet<FactoryPerformanceRpt_WeeklyShippedReportData_View> FactoryPerformanceRpt_WeeklyShippedReportData_View { get; set; }
        public virtual DbSet<FactoryPerformanceRpt_YearlyShippedReportData_View> FactoryPerformanceRpt_YearlyShippedReportData_View { get; set; }
    
        public virtual ObjectResult<FactoryPerformanceRpt_WeeklyProducedReportData_View> FactoryPerformanceRpt_function_GetWeeklyProducedReportData(string season)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPerformanceRpt_WeeklyProducedReportData_View>("FactoryPerformanceRpt_function_GetWeeklyProducedReportData", seasonParameter);
        }
    
        public virtual ObjectResult<FactoryPerformanceRpt_WeeklyProducedReportData_View> FactoryPerformanceRpt_function_GetWeeklyProducedReportData(string season, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPerformanceRpt_WeeklyProducedReportData_View>("FactoryPerformanceRpt_function_GetWeeklyProducedReportData", mergeOption, seasonParameter);
        }
    
        public virtual ObjectResult<FactoryPerformanceRpt_YearlyProducedReportData_View> FactoryPerformanceRpt_function_GetYearlyProducedReportData(string season)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPerformanceRpt_YearlyProducedReportData_View>("FactoryPerformanceRpt_function_GetYearlyProducedReportData", seasonParameter);
        }
    
        public virtual ObjectResult<FactoryPerformanceRpt_YearlyProducedReportData_View> FactoryPerformanceRpt_function_GetYearlyProducedReportData(string season, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPerformanceRpt_YearlyProducedReportData_View>("FactoryPerformanceRpt_function_GetYearlyProducedReportData", mergeOption, seasonParameter);
        }
    
        public virtual ObjectResult<FactoryPerformanceRpt_YearlyShippedReportData_View> FactoryPerformanceRpt_function_GetYearlyShippedReportData(string season)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPerformanceRpt_YearlyShippedReportData_View>("FactoryPerformanceRpt_function_GetYearlyShippedReportData", seasonParameter);
        }
    
        public virtual ObjectResult<FactoryPerformanceRpt_YearlyShippedReportData_View> FactoryPerformanceRpt_function_GetYearlyShippedReportData(string season, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPerformanceRpt_YearlyShippedReportData_View>("FactoryPerformanceRpt_function_GetYearlyShippedReportData", mergeOption, seasonParameter);
        }
    
        public virtual ObjectResult<FactoryPerformanceRpt_TotalCapacityAndOrder_View> FactoryPerformanceRpt_function_TotalCapacityAndOrder(string season, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPerformanceRpt_TotalCapacityAndOrder_View>("FactoryPerformanceRpt_function_TotalCapacityAndOrder", seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<FactoryPerformanceRpt_TotalCapacityAndOrder_View> FactoryPerformanceRpt_function_TotalCapacityAndOrder(string season, Nullable<int> userID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPerformanceRpt_TotalCapacityAndOrder_View>("FactoryPerformanceRpt_function_TotalCapacityAndOrder", mergeOption, seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<FactoryPerformanceRpt_TotalCapacityAndOrderByWeekOfFactory_View> FactoryPerformanceRpt_function_TotalCapacityAndOrderByWeekOfFactory(string season, Nullable<int> userID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPerformanceRpt_TotalCapacityAndOrderByWeekOfFactory_View>("FactoryPerformanceRpt_function_TotalCapacityAndOrderByWeekOfFactory", seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<FactoryPerformanceRpt_TotalCapacityAndOrderByWeekOfFactory_View> FactoryPerformanceRpt_function_TotalCapacityAndOrderByWeekOfFactory(string season, Nullable<int> userID, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPerformanceRpt_TotalCapacityAndOrderByWeekOfFactory_View>("FactoryPerformanceRpt_function_TotalCapacityAndOrderByWeekOfFactory", mergeOption, seasonParameter, userIDParameter);
        }
    
        public virtual ObjectResult<FactoryPerformanceRpt_WeeklyShippedReportData_View> FactoryPerformanceRpt_function_GetWeeklyShippedReportData(string season)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPerformanceRpt_WeeklyShippedReportData_View>("FactoryPerformanceRpt_function_GetWeeklyShippedReportData", seasonParameter);
        }
    
        public virtual ObjectResult<FactoryPerformanceRpt_WeeklyShippedReportData_View> FactoryPerformanceRpt_function_GetWeeklyShippedReportData(string season, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryPerformanceRpt_WeeklyShippedReportData_View>("FactoryPerformanceRpt_function_GetWeeklyShippedReportData", mergeOption, seasonParameter);
        }
    }
}
