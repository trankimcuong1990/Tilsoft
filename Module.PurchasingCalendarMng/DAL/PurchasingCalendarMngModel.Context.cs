//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.PurchasingCalendarMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PurchasingCalendarMngEntities : DbContext
    {
        public PurchasingCalendarMngEntities()
            : base("name=PurchasingCalendarMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PurchasingCalendarAppointment> PurchasingCalendarAppointment { get; set; }
        public virtual DbSet<PurchasingCalendarAppointmentAttachedFile> PurchasingCalendarAppointmentAttachedFile { get; set; }
        public virtual DbSet<PurchasingCalendarUser> PurchasingCalendarUser { get; set; }
        public virtual DbSet<PurchasingCalendarMng_AppointmentAttachedFileType_View> PurchasingCalendarMng_AppointmentAttachedFileType_View { get; set; }
        public virtual DbSet<PurchasingCalendarMng_Employee_View> PurchasingCalendarMng_Employee_View { get; set; }
        public virtual DbSet<PurchasingCalendarMng_FactoryRawMaterial_View> PurchasingCalendarMng_FactoryRawMaterial_View { get; set; }
        public virtual DbSet<PurchasingCalendarMng_MeetingLocation_View> PurchasingCalendarMng_MeetingLocation_View { get; set; }
        public virtual DbSet<PurchasingCalendarMng_PurchasingCalendarAppointment_View> PurchasingCalendarMng_PurchasingCalendarAppointment_View { get; set; }
        public virtual DbSet<PurchasingCalendarMng_PurchasingCalendarAppointmentAttachedFile_View> PurchasingCalendarMng_PurchasingCalendarAppointmentAttachedFile_View { get; set; }
        public virtual DbSet<PurchasingCalendarMng_PurchasingCalendarAppointmentSearchResult_View> PurchasingCalendarMng_PurchasingCalendarAppointmentSearchResult_View { get; set; }
        public virtual DbSet<PurchasingCalendarMng_PurchasingCalendarUser_View> PurchasingCalendarMng_PurchasingCalendarUser_View { get; set; }
        public virtual DbSet<PurchasingCalendarMng_Sale_View> PurchasingCalendarMng_Sale_View { get; set; }
    
        public virtual ObjectResult<PurchasingCalendarMng_FactoryRawMaterial_View> PurchasingCalendarMng_function_SearchFactoryRawMaterial(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchasingCalendarMng_FactoryRawMaterial_View>("PurchasingCalendarMng_function_SearchFactoryRawMaterial", queryParameter);
        }
    
        public virtual ObjectResult<PurchasingCalendarMng_FactoryRawMaterial_View> PurchasingCalendarMng_function_SearchFactoryRawMaterial(string query, MergeOption mergeOption)
        {
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchasingCalendarMng_FactoryRawMaterial_View>("PurchasingCalendarMng_function_SearchFactoryRawMaterial", mergeOption, queryParameter);
        }
    
        public virtual ObjectResult<PurchasingCalendarMng_PurchasingCalendarAppointmentSearchResult_View> PurchasingCalendarMng_function_SearchPurchasingCalendarAppointment(string meetingLocations, Nullable<int> month, Nullable<int> year)
        {
            var meetingLocationsParameter = meetingLocations != null ?
                new ObjectParameter("MeetingLocations", meetingLocations) :
                new ObjectParameter("MeetingLocations", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchasingCalendarMng_PurchasingCalendarAppointmentSearchResult_View>("PurchasingCalendarMng_function_SearchPurchasingCalendarAppointment", meetingLocationsParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<PurchasingCalendarMng_PurchasingCalendarAppointmentSearchResult_View> PurchasingCalendarMng_function_SearchPurchasingCalendarAppointment(string meetingLocations, Nullable<int> month, Nullable<int> year, MergeOption mergeOption)
        {
            var meetingLocationsParameter = meetingLocations != null ?
                new ObjectParameter("MeetingLocations", meetingLocations) :
                new ObjectParameter("MeetingLocations", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchasingCalendarMng_PurchasingCalendarAppointmentSearchResult_View>("PurchasingCalendarMng_function_SearchPurchasingCalendarAppointment", mergeOption, meetingLocationsParameter, monthParameter, yearParameter);
        }
    }
}
