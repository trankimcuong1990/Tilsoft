@{
    ViewBag.Title = "Search Picking Plan";
    ViewBag.Module = "Picking Plan";
}

<div class="row">
    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="jarviswidget jarviswidget-color-darken" id="wid-id-search-filter" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                <h2>Search Filters</h2>
            </header>

            <div>
                <div class="widget-body">
                    <div class="row">
                        <div class="col-sm-2 m-bottom-15">
                            <label>Receipt No</label>
                            <input class="form-control" type="text" ng-model="filters.ReceiptNo">
                        </div>
                        <div class="col-sm-2 m-bottom-15">
                            <label>PI</label>
                            <input class="form-control" type="text" ng-model="filters.ProformaInvoiceNo">
                        </div>
                        <div class="col-sm-2 m-bottom-15">
                            <label>Client Code</label>
                            <input class="form-control" type="text" ng-model="filters.ClientUD">
                        </div>
                        <div class="col-sm-2 m-bottom-15">
                            <label>Client Name</label>
                            <input class="form-control" type="text" ng-model="filters.ClientNM">
                        </div>
                        <div class="col-sm-2 m-bottom-15">
                            <label>Art.Code</label>
                            <input class="form-control" type="text" ng-model="filters.ArticleCode">
                        </div>
                        <div class="col-sm-2 m-bottom-15">
                            <label>Description</label>
                            <input class="form-control" type="text" ng-model="filters.Description">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="jarviswidget jarviswidget-color-darken" id="wid-id-search-result" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                <h2>Search Result</h2>
            </header>

            <div>
                <div class="jarviswidget-editbox"></div>

                <div class="widget-body">
                    <div class="table-responsive" id="wareHouseImportTable">
                        <div id="searchResult" class="tilsoft-table-wrapper">
                            <div class="tilsoft-table">
                                <div class="tilsoft-table-header" style="width: 1800px;">
                                    <div style="width: 110px;"></div>
                                    <div style="width: 100px" data-colname="ProcessingStatusNM">Status</div>
                                    <div style="width: 100px" data-colname="invoicedStatus">Invoice Status</div>
                                    <div style="width: 100px;" class="sorting" data-colname="ReceiptNo">Receipt No</div>
                                    <div style="width: 110px;" class="sorting" data-colname="cmrNo">CMR No</div>
                                    <div style="width: 100px;" class="sorting" data-colname="PlaningDate">Planing Date</div>
                                    <div style="width: 80px;" class="sorting" data-colname="ClientUD">Client Code</div>
                                    <div style="width: 300px;" class="sorting" data-colname="ClientNM">Client Name</div>
                                    <div style="width: 300px;" class="sorting" data-colname="CMR2">Client Address</div>
                                    <div style="width: 100px;" class="sorting_asc" data-colname="UpdatedDate">Updated Date</div>
                                    <div style="width: 130px;" class="sorting" data-colname="UpdatorName">Updated By</div>
                                    <div style="width: 100px;" class="sorting" data-colname="StatusUpdatedDate">Status Date</div>
                                    <div  class="sorting" data-colname="StatusUpdatorName">Status Updated By</div>
                                </div>
                                <div class="tilsoft-table-body" style="width: 1800px;">
                                    <table>
                                        <tr ng-repeat="model in data">
                                            <td style="text-align: center; width: 110px;">
                                                @if (Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Update, HttpContext.Current) == "disabled")
                                                {
                                                    <a href="@Url.Action("Edit", "WarehousePickingList")/{{model.warehousePickingListID}}" title="View (Read Only)" class="btn btn-primary btn-xs" target="_blank"><i class="fa fa-folder-open"></i>View</a>
                                                }
                                                else
                                                {
                                                    <a href="@Url.Action("Edit", "WarehousePickingList")/{{model.warehousePickingListID}}" title="Edit" class="btn btn-primary btn-xs" target="_blank"><i class="fa fa-pencil"></i>Edit</a>
                                                }

                                                @if (Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Delete, HttpContext.Current) != "disabled")
                                                {
                                                    <a href="#" ng-click="delete(model.warehousePickingListID)" title="Delete" class="btn btn-danger btn-xs" ><i class="fa fa-times"></i>Del</a>
                                                }
                                            </td>
                                            <td style="width: 100px; ">{{model.processingStatusNM}}</td>
                                            <td style="width: 100px;">{{model.invoicedStatus}}</td>
                                            <td style="width: 100px;">{{model.receiptNo}}</td>
                                            <td style="width: 110px;">{{model.cmrNo}}</td>
                                            <td style="width: 100px;">{{model.planingDate}}</td>
                                            <td style="width: 80px;">{{model.clientUD}}</td>
                                            <td style="width: 300px;">{{model.clientNM}}</td>
                                            <td style="width: 300px;">{{model.cmR2}}</td>
                                            <td style="width: 100px;">{{model.updatedDate}}</td>
                                            <td style="width: 130px;">
                                                <a ng-if="model.updatedBy" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{model.updatedBy}}" da data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                                    <i class="fa fa-user"></i> {{model.updatorName}}
                                                </a>
                                            </td>
                                            <td style="width: 100px;">{{model.statusUpdatedDate}}</td>
                                            <td >
                                                <a ng-if="model.statusUpdatedBy" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{model.statusUpdatedBy}}" da data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                                    <i class="fa fa-user"></i> {{model.statusUpdatorName}}
                                                </a>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </article>
</div>

@section FormAction {
    <ul id="sparks">
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Search" ng-click="event.search()"><i class="fa fa-search"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Refresh" ng-click="event.search()"><i class="fa fa-refresh"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Export excel" ng-click="event.exportExcel()" style="color: #31B404"><i class="fa fa-file-excel-o"></i></a>
        </li>
        <li class="sparks-info">
            <a href="@Url.Action("Edit", "WarehousePickingList")/0" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Create, HttpContext.Current))" title="New"><i class="fa fa-file-o"></i></a>
        </li>
        
    </ul>
}

@section pagejs {
    <script src="~/Angular/app/warehousePickingList/service.js?c=@System.Guid.NewGuid().ToString().Replace("-", "")"></script>
    <script type="text/javascript">
    var searchResultGrid = jQuery('#searchResult').scrollableTable(
        function(currentPage){
            var scope = angular.element(jQuery('body')).scope();
            scope.$apply(function(){
                scope.pageIndex = currentPage;
                warehousePickingListService.searchFilter.pageIndex = scope.pageIndex;
                scope.search();
            });
        },
        function(sortedBy, sortedDirection){
            var scope = angular.element(jQuery('body')).scope();
            scope.$apply(function(){
                warehousePickingListService.searchFilter.sortedDirection = sortedDirection;
                scope.pageIndex = 1;
                warehousePickingListService.searchFilter.pageIndex = scope.pageIndex;
                warehousePickingListService.searchFilter.sortedBy = sortedBy;
                scope.search();
            });
        }
    );

    warehousePickingListService.serviceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/warehousepickinglist/';
    warehousePickingListService.token = '@Session[Frontend.Customize.Common.ProjectDefinition.TOKEN_SESSION]';
    warehousePickingListService.searchFilter.pageSize = @System.Configuration.ConfigurationManager.AppSettings["DefaultPageSize"];

        var warehousePickingListApp = angular.module('tilsoftApp', []);
        warehousePickingListApp.controller('tilsoftController', ['$scope', function ($scope) {
            $scope.data = null;
            $scope.filters = {
                ReceiptNo: '',
                ProformaInvoiceNo: '',
                ClientUD: '',
                ClientNM: '',
                ArticleCode: '',
                Description: ''
            };
            $scope.pageIndex = 1;
            $scope.totalPage = 0;

            //
            // event defined
            //
            $scope.event = {
                search: function(){
                    warehousePickingListService.searchFilter.filters = $scope.filters;
                    $scope.search();
                },
                exportExcel : function(){
                    warehousePickingListService.exportExcelPickingList(
                        function (data) {
                            window.location = '@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data + '.xlsm';
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            }

            //
            // private function defined
            //
            $scope.search = function () {
                warehousePickingListService.search(
                    function (data) {
                        $scope.data = data.data.data;
                        $scope.totalPage = Math.ceil(data.totalRows / warehousePickingListService.searchFilter.pageSize);
                        $scope.$apply();

                        if(data.totalRows < warehousePickingListService.searchFilter.pageSize) {
                            jQuery('#searchResultGrid').find('ul').hide();
                        }
                        else {
                            jQuery('#searchResultGrid').find('ul').show();
                        }

                        jQuery('#content').show();
                        searchResultGrid.updateLayout();
                    },
                    function (error) {
                        $scope.data = null;
                        $scope.pageIndex = 1;
                        $scope.totalPage = 0;
                        $scope.$apply();
                    }
                );
            }

            // function define
            $scope.delete = function (id) {
                if (confirm('Are you sure ?')) {
                    warehousePickingListService.delete(id,
                        function (data) {
                            jsHelper.processMessage(data.message);

                            if(data.message.type == 0) {
                                var j = -1;
                                for (var i = 0; i < $scope.data.length; i++) {
                                    if ($scope.data[i].warehouseImportID == data.data) {
                                        j = i;
                                        break;
                                    }
                                }

                                if (j >= 0) {
                                    $scope.data.splice(j, 1);
                                }

                                $scope.$apply();
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            }

            //
            // INIT
            //
            $scope.search();
        }]);
    </script>
}