@{
    if (ViewBag.ID == 0)
    {
        ViewBag.Title = "Create New Picking List";
    }
    else
    {
        ViewBag.Title = "Edit Picking List";
    }

    ViewBag.Module = "Picking List";
}
<form name="editForm" id="main-form">

    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="jarviswidget" id="wid-id-general" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <ul class="nav nav-tabs pull-left in">
                    <li class="active">
                        <a data-toggle="tab" href="#hb1"> <i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet"> General Information </span> </a>
                    </li>
                    <li>
                        <a data-toggle="tab" href="#hb2"> <i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet"> CMR Info</span> </a>
                    </li>
                </ul>
            </header>
            <div>
                <div class="jarviswidget-editbox"></div>

                <div class="widget-body">
                    <div class="tab-content">

                        <div class="tab-pane active" id="hb1">

                            <div class="row">

                                <div class="col-sm-1 m-bottom-15">
                                    <label>Season</label>
                                    <select class="form-control" name="season" ng-model="data.season" ng-options="item.seasonValue as item.seasonText for item in seasons | orderBy : 'seasonValue'" required>
                                        <option value=""></option>
                                    </select>
                                    <span class="help-block" ng-show="editForm.season.$error.required"><i class="fa fa-warning"></i>Season is required.</span>
                                </div>

                                <div class="col-sm-1 m-bottom-15">
                                    <label>Receipt No</label>
                                    <span class="form-control ">{{data.receiptNo}}</span>
                                </div>

                                <div class="col-sm-1 m-bottom-15">
                                    <label>Client Code</label>
                                    <span class="form-control">{{data.clientUD}}</span>
                                </div>

                                <div class="col-sm-5 m-bottom-15">
                                    <label>Client Name</label>
                                    <span class="form-control">{{data.clientNM}}</span>
                                </div>

                                <div class="col-sm-1 m-bottom-15">
                                    <label>Export Status</label>
                                    <span class="form-control">{{data.processingStatusNM}}</span>
                                </div>
                              

                                <div class="col-sm-1 m-bottom-15">
                                    <label>Set Status Date</label>
                                    <span class="form-control">{{data.statusUpdatedDate}}</span>
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Set Status By</label>
                                    <span class="form-control">{{data.statusUpdatorName}}</span>
                                </div>

                            </div>

                            <div class="row">

                                <section class="col-sm-2 m-bottom-15">
                                    <label>Planning Date</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control datepicker" data-dateformat="dd/mm/yy" ng-model="data.planingDate">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </section>

                                <section class="col-sm-1 m-bottom-15">
                                    <label>Planning By</label>
                                    <select class="form-control" name="plannedBy" ng-model="data.plannedBy" ng-options="item.userID as item.fullName for item in users | orderBy : 'fullName'">
                                        <option value=""></option>
                                    </select>
                                </section>

                                <section class="col-sm-2 m-bottom-15">
                                    <label>Real Picking Date</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control datepicker" data-dateformat="dd/mm/yy" ng-model="data.realPickingDate">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </section>

                                <section class="col-sm-1 m-bottom-15">
                                    <label>Picking By</label>
                                    <select class="form-control" name="pickingBy" ng-model="data.pickingBy" ng-options="item.userID as item.fullName for item in users | orderBy : 'fullName'">
                                        <option value=""></option>
                                    </select>
                                </section>

                                <section class="col-sm-2 m-bottom-15">
                                    <label>Delivery Date</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control datepicker" data-dateformat="dd/mm/yy" ng-model="data.deliveryDate">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </section>

                                <section class="col-sm-2 m-bottom-15">
                                    <label>Picking Status</label>
                                    <span class="form-control">{{data.pickingStatus}}</span>
                                </section>

                                <section class="col-sm-2 m-bottom-15">
                                    <label>Invoice Status</label>
                                    <span class="form-control">{{data.invoicedStatus}}</span>
                                </section>

                            </div>

                            <div class="row">

                                <section class="col-sm-1 m-bottom-15">
                                    <label>RefNo</label>
                                    <input class="form-control" type="text" ng-model="data.refNo">
                                </section>

                                <section class="col-sm-1 m-bottom-15">
                                    <label>CMRNo</label>
                                    <input class="form-control" type="text" ng-model="data.cmrNo">
                                </section>

                                <section class="col-sm-2 m-bottom-15">
                                    <label>CMR Date</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control datepicker" data-dateformat="dd/mm/yy" ng-model="data.cmrDate" ng-change="event.selectCMRDate()">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </section>
                               
                                <section class="col-sm-1 m-bottom-15">
                                    <label><font color="white">Pallet</font></label>
                                    <label><input type="checkbox" ng-model="data.isInvoicePalletToClient"> Invoiced Pallet</label>
                                </section>


                                <section class="col-sm-1 m-bottom-15">
                                    <label>Euro Pallet Qnt</label>
                                    <input class="form-control" type="text" ng-model="data.euroPalletQnt">
                                </section>


                                <section class="col-sm-2 m-bottom-15">
                                    <label>Remark</label>
                                    <input class="form-control" type="text" ng-model="data.remark">

                                </section>

                                <section class="col-sm-2 m-bottom-15">
                                    <label>Updated By</label>
                                    <span class="form-control">{{data.updatorName}}</span>
                                </section>
                                <section class="col-sm-2 m-bottom-15">
                                    <label>Updated Date</label>
                                    <span class="form-control">{{data.updatedDate}}</span>
                                </section>

                            </div>

                           
                        </div>

                        <div class="tab-pane" id="hb2">

                            <div class="row">

                                <div class="col-sm-4 m-bottom-15">
                                    <label>Eurofar Address (Point 1) / <a class="btn btn-primary btn-xs" ng-click="event.editCMR1()">Edit</a></label>
                                    <textarea rows="6" class="form-control" ng-model="data.cmR1" readonly></textarea>
                                </div>

                                <div class="col-sm-4 m-bottom-15">
                                    <label>Client Address (Point 2) / <a class="btn btn-primary btn-xs" ng-click="event.editCMR2()">Edit</a></label>
                                    <textarea rows="6" class="form-control" ng-model="data.cmR2" readonly></textarea>
                                </div>

                                <div class="col-sm-4 m-bottom-15">
                                    <label>Place / Country of delivery (Point 3)</label>
                                    <textarea rows="6" class="form-control" ng-model="data.cmR3"></textarea>
                                </div>
                            </div>

                            <div class="row">

                                <div class="col-sm-4 m-bottom-15">
                                    <label>Checked By / Remark (Point 13)</label>
                                    <textarea rows="3" class="form-control" ng-model="data.cmR13"></textarea>
                                </div>

                                <div class="col-sm-4 m-bottom-15">
                                    <label>Name transport company (Point 16)</label>
                                    <textarea rows="3" class="form-control" ng-model="data.cmR16"></textarea>
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Issues at (Point 21)</label>
                                    <textarea rows="3" class="form-control" ng-model="data.cmR21"></textarea>
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Name authorized Eurofar (Point 22)</label>
                                    <textarea rows="3" class="form-control" ng-model="data.cmR22"></textarea>
                                </div>

                               

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </article>

    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="jarviswidget" id="wid-id-general" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <ul class="nav nav-tabs pull-left in">
                    <li class="active">
                        <a data-toggle="tab" href="#hb3"> <i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet">Product</span> </a>
                    </li>
                    <li>
                        <a data-toggle="tab" href="#hb4"> <i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet">Sparepart</span> </a>
                    </li>
                </ul>
            </header>
            <div>
                <div class="jarviswidget-editbox"></div>

                <div class="widget-body">
                    <div class="tab-content">

                        <div class="tab-pane active" id="hb3">
                            <div>
                                <div class="widget-body-toolbar">
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                            <div class="input-group">
                                                <input id="quickSearchBoxProduct" placeholder="press enter to search all product or type at least 3 chars to search product" class="form-control" type="text" ng-keyup="quicksearchproduct.event.searchBoxKeyUp($event)" autocomplete="off">
                                                <span class="input-group-addon" ng-click="quicksearchproduct.event.searchClick()"><i class="fa fa-search"></i></span>
                                                <div id="product-popup" class="popup-container-2" style="display: none; left: 0px; top: 32px;">
                                                    <div style="float: right; margin-bottom: 8px;">
                                                        <a href="javascript:void(0);" ng-click="quicksearchproduct.event.close($event)" class="btn btn-danger btn-xs">Close</a>
                                                        <a href="javascript:void(0);" ng-click="quicksearchproduct.event.itemSelected($event)" class="btn btn-primary btn-xs">OK</a>
                                                    </div>
                                                    <div class="clear"></div>
                                                    <div id="productSearchResultGrid" class="tilsoft-table-wrapper">
                                                        <div class="tilsoft-table">
                                                            <div class="tilsoft-table-header" style="width: 1000px;">
                                                                <div style="width: 60px;"></div>
                                                                <div style="width: 100px;">Image</div>
                                                                <div style="width: 80px;">P/I</div>
                                                                <div style="width: 110px;">Art.Code</div>
                                                                <div style="width: 100px;">Product Status</div>
                                                                <div style="width: 110px;">Ordered Remain Qnt</div>
                                                                <div>Description</div>
                                                            </div>

                                                            <div class="tilsoft-table-body" style="width: 1000px;">
                                                                <table>
                                                                    <tr ng-repeat="product in quicksearchproduct.data">
                                                                        <td style="width: 60px; text-align:center"><input type="checkbox" ng-model="product.isSelected" /></td>
                                                                        <td style="width: 100px; text-align: center; vertical-align: middle;"><img ng-src="{{model.thumbnailLocation}}" style="width: 70px; height: 70px;" /></td>
                                                                        <td style="width: 80px;">{{product.proformaInvoiceNo}}</td>
                                                                        <td style="width: 110px;">{{product.articleCode}}</td>
                                                                        <td style="width: 100px;">{{product.productStatusNM}}</td>
                                                                        <td style="width: 110px;text-align:center">{{product.remainingReserved}}</td>
                                                                        <td>{{product.description}}</td>
                                                                    </tr>
                                                                </table>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="widget-body">
                                    <div id="productGrid" class="tilsoft-table-wrapper">
                                        <div class="tilsoft-table">
                                            <div class="tilsoft-table-header" style="width: 1600px; ">
                                                <div style="width: 130px;"></div>
                                                <div style="width: 60px;">Check ed</div>
                                                <div style="width: 80px">P/I</div>
                                                <div style="width: 100px;">Product Status</div>
                                                <div style="width: 400px; ">Description</div>
                                                <div style="width: 70px;">Physical Qnt</div>
                                                <div style="width: 80px;">Ordered RemainQnt</div>
                                                <div style="width: 50px">unit</div>
                                                <div style="width: 100px; ">Picked/ LoadedQnt</div>
                                                <div style="width: 60px">colli</div>
                                                <div style="width: 150px">packaging Method</div>
                                                <div style="width: 70px;">Planing Qnt</div>
                                                <div style="width: 90px">Picking Status</div>
                                                <div>remark</div>
                                            </div>
                                            <div class="tilsoft-table-body" style="width: 1600px; ">
                                                <table>
                                                    <tbody ng-repeat="product in data.details">
                                                        <tr>
                                                            <td style="text-align: center; width: 130px;">
                                                                <a href="#" class="btn btn-primary btn-xs font-11" title="Location" ng-click="warehouseArea.event.viewArea($event,'product-' + product.warehousePickingListProductDetailID)"><i id="icon-area-product-{{product.warehousePickingListProductDetailID}}" class="fa fa-minus-square-o"></i> Location</a>
                                                                <a href="#" title="Delete" ng-click="event.removeProduct($event, product.warehousePickingListProductDetailID)" class="btn btn-danger btn-xs"><i class="fa fa-times"></i> Del</a>
                                                            </td>
                                                            <td style="width: 60px; text-align: center">
                                                                <input type="checkbox" ng-model="product.isChecked"/>
                                                            </td>
                                                            <td style="width: 80px">{{product.proformaInvoiceNo}}</td>
                                                            <td style="width: 100px">{{product.productStatusNM}}</td>
                                                            <td style="width:400px;text-align:left;"><span style="font-weight:bold;">{{product.articleCode}}</span><br />{{product.description}}</td>
                                                            <td style="width: 70px"><span class="form-control">{{product.physicalQnt}}</span></td>
                                                            <td style="width: 80px"><span class="form-control">{{product.remainingReserved}}</span></td>
                                                            <td style="width: 50px"><input type="text" ng-model="product.unit" style="width: 100%;" /></td>
                                                            <td style="width: 100px; "><input type="text" ng-model="product.quantity" style="width: 100%; text-align: right;" ng-keyup="event.changePickingQnt($event,product.warehousePickingListProductDetailID,product.productID,product.productStatusID,'PRODUCT',product.quantity)" /></td>
                                                            <td style="width: 60px; "><input type="text" ng-model="product.colli" style="width: 100%;text-align:right;" /></td>
                                                            <td style="width: 150px">
                                                                <select class="form-control" name="packagingMethodID" ng-model="product.packagingMethodID" ng-options="item.packagingMethodID as item.packagingMethodNM for item in packagingMethods | orderBy : 'packagingMethodNM'">
                                                                    <option value=""></option>
                                                                </select>
                                                            </td>
                                                            <td style="width: 70px"><input type="text" ng-model="product.planingQuantity" style="width: 100%; text-align: right;" /></td>
                                                            <td style="width: 90px">{{product.itemPickingStatus}}</td>
                                                            <td><input type="text" ng-model="product.remark" style="width: 100%;" /></td>
                                                        </tr>
                                                        <tr id="product-{{product.warehousePickingListProductDetailID}}">
                                                            <td></td>
                                                            <td colspan="13">
                                                                <a class="btn btn-primary btn-xs font-11" href="javascript:void(0);" ng-click="warehouseArea.event.addProductToArea($event,product.warehousePickingListProductDetailID)" style=" margin-bottom:10px;"><i class="fa fa-plus"></i> Add Location</a>
                                                                <table>
                                                                    <tr>
                                                                        <th style="width:60px"></th>
                                                                        <th style="width:160px">Location</th>
                                                                        <th style="width:80px">Quantity</th>
                                                                        <th>Remark</th>
                                                                    </tr>
                                                                    <tr ng-repeat="item in product.warehousePickingListAreaDetails">
                                                                        <td style="text-align:center">
                                                                            <a href="#" class="btn btn-danger btn-xs font-11" title="Remove" ng-click="warehouseArea.event.removeProductFromArea($event, product.warehousePickingListProductDetailID, item.warehousePickingListAreaDetailID)"><i class="fa fa-times"></i>Del</a>
                                                                        </td>
                                                                        <td>
                                                                            <input type="text" ng-model="item.warehouseAreaUD" style="text-align:center" ng-keyup="quicksearchAreaFrom.event.searchBoxKeyUp($event,item,product)" />
                                                                            <div id="receipt_product_detail_id{{item.warehousePickingListAreaDetailID}}"></div>
                                                                        </td>
                                                                        <td>
                                                                            <input type="text" class="form-control" ng-model="item.quantity" />
                                                                        </td>
                                                                        <td>
                                                                            <input type="text" class="form-control" ng-model="item.remark" />
                                                                        </td>
                                                                    </tr>
                                                                </table>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                    
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane" id="hb4">
                            <div>
                                <div class="widget-body-toolbar">
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                            <div class="input-group">
                                                <input id="quickSearchBoxSparepart" placeholder="press enter to search all sparepart or type at least 3 chars to search sparepart" class="form-control" type="text" ng-keyup="quicksearchsparepart.event.searchBoxKeyUp($event)" autocomplete="off">
                                                <span class="input-group-addon" ng-click="quicksearchsparepart.event.searchClick()"><i class="fa fa-search"></i></span>
                                                <div id="sparepart-popup" class="popup-container-2" style="display: none; left: 0px; top: 32px;">
                                                    <div style="float: right; margin-bottom: 8px;">
                                                        <a href="javascript:void(0);" ng-click="quicksearchsparepart.event.close($event)" class="btn btn-danger btn-xs">Close</a>
                                                        <a href="javascript:void(0);" ng-click="quicksearchsparepart.event.itemSelected($event)" class="btn btn-primary btn-xs">OK</a>
                                                    </div>
                                                    <div class="clear"></div>
                                                    <div id="sparepartSearchResultGrid" class="tilsoft-table-wrapper">
                                                        <div class="tilsoft-table">
                                                            <div class="tilsoft-table-header" style="width: 1000px;">
                                                                <div style="width: 60px;"></div>
                                                                <div style="width: 80px;">P/I</div>
                                                                <div style="width: 100px;">Art.Code</div>
                                                                <div style="width: 150px;">Product Status</div>
                                                                <div style="width: 110px;">Ordered Remain Qnt</div>
                                                                <div>Description</div>

                                                            </div>

                                                            <div class="tilsoft-table-body" style="width: 1000px;">
                                                                <table>
                                                                    <tr ng-repeat="product in quicksearchsparepart.data">
                                                                        <td style="width: 60px; text-align:center"><input type="checkbox" ng-model="product.isSelected" /></td>
                                                                        <td style="width: 80px;">{{product.proformaInvoiceNo}}</td>
                                                                        <td style="width: 100px;">{{product.articleCode}}</td>
                                                                        <td style="width: 150px;">{{product.productStatusNM}}</td>
                                                                        <td style="width: 110px; text-align:center">{{product.remainingReserved}}</td>
                                                                        <td>{{product.description}}</td>
                                                                    </tr>
                                                                </table>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="widget-body">
                                    <div id="sparepartGrid" class="tilsoft-table-wrapper">
                                        <div class="tilsoft-table">
                                            <div class="tilsoft-table-header" style="width: 1600px; ">
                                                <div style="width: 130px"></div>
                                                <div style="width: 60px;">Check ed</div>
                                                <div style="width: 80px">P/I</div>
                                                <div style="width: 100px;">Product Status</div>
                                                <div style="width: 400px;">Description</div>
                                                <div style="width: 70px;">Physical Qnt</div>
                                                <div style="width: 80px;">Ordered RemainQnt</div>
                                                <div style="width: 50px">unit</div>
                                                <div style="width: 100px;">Picked/ LoadedQnt</div>
                                                <div style="width: 80px">colli</div>
                                                <div style="width: 150px">packaging Method</div>
                                                <div style="width: 70px;">Planing Qnt</div>
                                                <div style="width: 90px">Picking Status</div>
                                                <div>remark</div>
                                            </div>
                                            <div class="tilsoft-table-body" style="width: 1600px; ">
                                                <table>
                                                    <tbody ng-repeat="sparepart in data.sparepartDetails">
                                                        <tr>
                                                            <td style="text-align: center; width: 130px;">
                                                                <a href="#" class="btn btn-primary btn-xs font-11" title="Location" ng-click="warehouseArea.event.viewArea($event,'sparepart-' + sparepart.warehousePickingListSparepartDetailID)"><i id="icon-area-sparepart-{{sparepart.warehousePickingListSparepartDetailID}}" class="fa fa-minus-square-o"></i> Location</a>
                                                                <a href="#" title="Delete" ng-click="event.removeSparepart($event, sparepart.warehousePickingListSparepartDetailID)" class="btn btn-danger btn-xs"><i class="fa fa-times"></i>Del</a>
                                                            </td>
                                                            <td style="width:60px;text-align:center">
                                                                <input type="checkbox" ng-model="sparepart.isChecked" />
                                                            </td>
                                                            <td style="width: 80px; ">{{sparepart.proformaInvoiceNo}}</td>
                                                            <td style="width: 100px">{{sparepart.productStatusNM}}</td>
                                                            <td style="width:400px;text-align:left;"><span style="font-weight:bold;">{{sparepart.articleCode}}</span><br />{{sparepart.description}}</td>
                                                            <td style="width: 70px"><span class="form-control">{{sparepart.physicalQnt}}</span></td>
                                                            <td style="width: 80px"><span class="form-control">{{sparepart.remainingReserved}}</span></td>
                                                            <td style="width: 50px"><input type="text" ng-model="sparepart.unit" style="width: 100%;" /></td>
                                                            <td style="width: 100px; "><input type="text" ng-model="sparepart.quantity" style="width: 100%; text-align: right;" /></td>
                                                            <td style="width: 80px; "><input type="text" ng-model="sparepart.colli" style="width: 100%;text-align:right;" /></td>
                                                            <td style="width: 150px">
                                                                <select class="form-control" name="packagingMethodID" ng-model="sparepart.packagingMethodID" ng-options="item.packagingMethodID as item.packagingMethodNM for item in packagingMethods | orderBy : 'packagingMethodNM'">
                                                                    <option value=""></option>
                                                                </select>
                                                            </td>
                                                            <td style="width: 70px"><input type="text" ng-model="sparepart.planingQuantity" style="width: 100%; text-align: right;" /></td>
                                                            <td style="width: 90px">{{sparepart.itemPickingStatus}}</td>
                                                            <td><input type="text" ng-model="sparepart.remark" style="width: 100%;" /></td>
                                                        </tr>
                                                        <tr id="sparepart-{{sparepart.warehousePickingListSparepartDetailID}}">
                                                            <td></td>
                                                            <td colspan="13">
                                                                <a class="btn btn-primary btn-xs font-11" href="javascript:void(0);" ng-click="warehouseArea.event.addSparepartToArea($event,sparepart.warehousePickingListSparepartDetailID)" style=" margin-bottom:10px;"><i class="fa fa-plus"></i> Add Location</a>
                                                                <div class="tilsoft-table">
                                                                    <div class="tilsoft-table-body" style="width: 1000px; height:auto; margin-top:0px">
                                                                        <table>
                                                                            <tr>
                                                                                <th style="width:60px"></th>
                                                                                <th style="width:160px">Location</th>
                                                                                <th style="width:60px">Quantity</th>
                                                                                <th>Remark</th>
                                                                            </tr>
                                                                            <tr ng-repeat="item in sparepart.warehousePickingListAreaDetails">
                                                                                <td style="width: 60px; text-align:center">
                                                                                    <a href="#" class="btn btn-danger btn-xs font-11" title="Remove" ng-click="warehouseArea.event.removeSparepartFromArea($event, sparepart.warehousePickingListSparepartDetailID, item.warehousePickingListAreaDetailID)"><i class="fa fa-times"></i>Del</a>
                                                                                </td>
                                                                                <td style="width: 155px">
                                                                                    <select ng-model="item.warehouseAreaID" ng-options="item.warehouseAreaID as item.warehouseAreaUD for item in warehouseAreas | filter : { goodsID : sparepart.sparepartID, productStatusID : sparepart.productStatusID, productType : 'SPAREPART' }" class="form-control"></select>
                                                                                </td>
                                                                                <td style="width: 80px">
                                                                                    <input type="text" class="form-control" ng-model="item.quantity" />
                                                                                </td>
                                                                                <td>
                                                                                    <input type="text" class="form-control" ng-model="item.remark" />
                                                                                </td>
                                                                            </tr>
                                                                        </table>
                                                                    </div>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                    
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </article>

    <div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="frmCMR1" class="modal fade" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button aria-hidden="true" data-dismiss="modal" class="close" type="button">
                        ×
                    </button>
                    <h4 id="myModalLabel" class="modal-title">Edit CMR1 Info</h4>
                </div>
                <div class="modal-body smart-form">
                    <fieldset>
                        <div class="row">
                            <section class="col col-lg-12">
                                <label>Name</label>
                                <input  class="form-control" ng-model="data.senderName"/>
                            </section>
                            <section class="col col-lg-12">
                                <label>Address</label>
                                <input class="form-control" ng-model="data.senderAddress" />
                            </section>
                            <section class="col col-lg-6">
                                <label>Zip Code</label>
                                <input class="form-control" ng-model="data.senderZipCode" />
                            </section>
                            <section class="col col-lg-6">
                                <label>City</label>
                                <input class="form-control" ng-model="data.senderCity" />
                            </section>
                            <section class="col col-lg-12">
                                <label>Country</label>
                                <input class="form-control" ng-model="data.senderCountry" />
                            </section>
                        </div>
                    </fieldset>
                </div>
                <div class="modal-footer">
                    <button data-dismiss="modal" class="btn btn-default" type="button">
                        CANCEL
                    </button>
                    <button class="btn btn-primary" type="button" ng-click="event.okEditCMR1()">
                        OK
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="frmCMR2" class="modal fade" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button aria-hidden="true" data-dismiss="modal" class="close" type="button">
                        ×
                    </button>
                    <h4 id="myModalLabel" class="modal-title">Edit CMR2 Info</h4>
                </div>
                <div class="modal-body smart-form">
                    <fieldset>
                        <div class="row">
                            <section class="col col-lg-12">
                                <label>Name</label>
                                <input class="form-control" ng-model="data.receiverName" />
                            </section>
                            <section class="col col-lg-12">
                                <label>Address</label>
                                <input class="form-control" ng-model="data.receiverAddress" />
                            </section>
                            <section class="col col-lg-6">
                                <label>Zip Code</label>
                                <input class="form-control" ng-model="data.receiverZipCode" />
                            </section>
                            <section class="col col-lg-6">
                                <label>City</label>
                                <input class="form-control" ng-model="data.receiverCity" />
                            </section>
                            <section class="col col-lg-12">
                                <label>Country</label>
                                <input class="form-control" ng-model="data.receiverCountry" />
                            </section>
                        </div>
                    </fieldset>
                </div>
                <div class="modal-footer">
                    <button data-dismiss="modal" class="btn btn-default" type="button">
                        CANCEL
                    </button>
                    <button class="btn btn-primary" type="button" ng-click="event.okEditCMR2()">
                        OK
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="frmExportXML" class="modal fade" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button aria-hidden="true" data-dismiss="modal" class="close" type="button">
                        ×
                    </button>
                    <h4 id="myModalLabel" class="modal-title">Export to xlm file</h4>
                </div>
                <div class="modal-body smart-form">
                    <fieldset>
                        <legend>Sender</legend>
                        <div class="row">
                            <section class="col col-lg-12">
                                <label>Name</label>
                                <input class="form-control" ng-model="data.senderName" />
                            </section>
                            <section class="col col-lg-12">
                                <label>Address</label>
                                <input class="form-control" ng-model="data.senderAddress" />
                            </section>
                            <section class="col col-lg-4">
                                <label>Zip Code</label>
                                <input class="form-control" ng-model="data.senderZipCode" />
                            </section>
                            <section class="col col-lg-4">
                                <label>City</label>
                                <input class="form-control" ng-model="data.senderCity" />
                            </section>
                            <section class="col col-lg-4">
                                <label>Country</label>
                                <input class="form-control" ng-model="data.senderCountry" />
                            </section>
                        </div>
                    </fieldset>

                    <fieldset>
                        <legend>Receiver</legend>
                        <div class="row">
                            <section class="col col-lg-12">
                                <label>Name</label>
                                <input class="form-control" ng-model="data.receiverName" />
                            </section>
                            <section class="col col-lg-12">
                                <label>Address</label>
                                <input class="form-control" ng-model="data.receiverAddress" />
                            </section>
                            <section class="col col-lg-4">
                                <label>Zip Code</label>
                                <input class="form-control" ng-model="data.receiverZipCode" />
                            </section>
                            <section class="col col-lg-4">
                                <label>City</label>
                                <input class="form-control" ng-model="data.receiverCity" />
                            </section>
                            <section class="col col-lg-4">
                                <label>Country</label>
                                <input class="form-control" ng-model="data.receiverCountry" />
                            </section>
                            <section class="col col-lg-6">
                                <label>Phone</label>
                                <input class="form-control" ng-model="data.receiverPhone" />
                            </section>
                            <section class="col col-lg-6">
                                <label>Email</label>
                                <input class="form-control" ng-model="data.receiverEmail" />
                            </section>
                        </div>
                    </fieldset>
                </div>
                <div class="modal-footer">
                    <button data-dismiss="modal" class="btn btn-default" type="button">
                        CANCEL
                    </button>
                    <button class="btn btn-primary" type="button" ng-click="exportXML.event.exportXML($event)">
                        EXPORT
                    </button>
                </div>
            </div>
        </div>
    </div>

</form>



<div id="origin-position-area">
    <div id="popup-area-from" class="popup-container-2" style="width:200px">
        <div style="float: right; margin-bottom: 8px;">
            <a ng-click="quicksearchAreaFrom.event.close($event, true)" class="btn btn-danger btn-xs" href="javascript:void(0);">X</a>
        </div>
        <div class="clear"></div>
        <div id="quickSearchResultGrid-area-from" class="tilsoft-table-wrapper">
            <div class="tilsoft-table">
                <div class="tilsoft-table-body" style="width: 120px;height:auto;margin-top:0px">
                    <table>
                        <tr ng-repeat="item in quicksearchAreaFrom.data">
                            <td style="width: 70px; text-align: center;"><a ng-click="quicksearchAreaFrom.event.itemSelected($event,item)" class="btn btn-primary btn-xs" href="javascript:void(0);">Select</a></td>
                            <td style="text-align:left">{{item.warehouseAreaUD}}</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section pagepopup2
{
    <div id="popupFormClient" class="row" style="display:none">
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="jarviswidget" id="wid-id-product-information" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
                <header>
                    <h2>Select client to create picking list</h2>
                </header>
                <div>
                    <div class="widget-body no-padding">
                        <div class="smart-form">
                            <fieldset>
                                <section class="col-lg-12">
                                    <input type="text" class="form-control" placeholder="enter client code or client name to search client" id="txtClient" ng-keyup="quicksearchClient.event.searchBoxKeyUp($event)" />
                                    <i class="icon-append fa fa-search" ng-click="quicksearchClient.event.searchClick()"></i>
                                </section>
                                
                                <section class="col-lg-12">
                                    <div id="client-popup" class="popup-container-2">
                                        <div style="float: right; margin-bottom: 8px;">
                                            <a ng-click="quicksearchClient.event.close($event, true)" class="btn btn-primary btn-xs" href="javascript:void(0);"><i class="fa fa-remove"></i> Close</a>
                                        </div>
                                        <div class="clear"></div>
                                        <div id="quickSearchClientTable" class="tilsoft-table-wrapper">
                                            <div class="tilsoft-table">
                                                <div class="tilsoft-table-header" style="width: 360px;">
                                                    <div style="width: 90px;"></div>
                                                    <div style="width: 100px;">CLIENT CODE</div>
                                                    <div>CLIENT NAME</div>
                                                </div>
                                                <div class="tilsoft-table-body" style="width: 360px;">
                                                    <table>
                                                        <tr ng-repeat="item in quicksearchClient.data">
                                                            <td style="width: 90px; text-align: center;"><a ng-click="quicksearchClient.event.ok($event, item.clientID)" class="btn btn-primary btn-xs" href="javascript:void(0);"><i class="fa fa-check"></i> Select</a></td>
                                                            <td style="width: 100px; text-align:center">{{item.clientUD}}</td>
                                                            <td>{{item.clientNM}}</td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </section>
                               
                            </fieldset>
                            <footer>
                                <button class="btn btn-primary" type="button" ng-click="quicksearchClient.event.cancel()">
                                    CANCEL
                                </button>
                            </footer>
                        </div>
                    </div>
                </div>
            </div>
        </article>
    </div>
}



@section FormAction {
    <ul id="sparks">
        <li class="sparks-info">
            <a href="@Url.Action("Index", "WarehousePickingList")" class="btn btn-default" title="Go Back"><i class="fa fa-arrow-left"></i></a>
        </li>
        @*<li class="sparks-info">
            <a href="javascript:void(0)" ng-disabled="data.processingStatusID > 1" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Update, HttpContext.Current))" title="Save" ng-click="event.update($event)"><i class="fa fa-save"></i></a>
        </li>*@

        <li class="sparks-info">
            <a href="javascript:void(0)"  class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Update, HttpContext.Current))" title="Save" ng-click="event.update($event)"><i class="fa fa-save"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0)" ng-disabled="data.processingStatusID > 1 || data.warehousePickingListID == 0" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Create, HttpContext.Current))" title="Delete" style="color: #ff0000;" ng-click="event.delete($event)"><i class="fa fa-times"></i></a>
        </li>
        
        <li class="sparks-info">
            <a href="#" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Print, HttpContext.Current))" title="Print Old PickingList" ng-click="printPickingList($event)" style="color:#0026ff"><i class="fa fa-print"></i></a>
        </li>

        <li class="sparks-info">
            <a href="#" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Print, HttpContext.Current))" title="Print pickingList with location detail" ng-click="printNewPickingList($event)" style="color:#0026ff"><i class="fa fa-print"></i></a>
        </li>

        <li class="sparks-info">
            <a href="#" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Print, HttpContext.Current))" title="Print CMR" ng-click="printCMR($event)" style="color:#0026ff"><i class="fa fa-print"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0)" ng-disabled="data.processingStatusID > 1 || data.warehousePickingListID == 0" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Approve, HttpContext.Current))" title="Approve" ng-click="event.approve($event)"><i class="fa fa-thumbs-o-up"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0)" ng-disabled="data.processingStatusID != 2 || data.warehousePickingListID == 0" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Reset, HttpContext.Current))" title="Cancel" ng-click="event.cancel($event)"><i class="fa fa-thumbs-o-down"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0)" class="btn btn-default" title="Import from xlm file" ng-click="importXML.event.importFromXMLFile($event)" style="color:#2fbf13"><i class="fa fa-file-code-o"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0)" class="btn btn-default" title="Export to xml file" ng-click="exportXML.event.load($event)" style="color:#ff6a00"><i class="fa fa-file-code-o"></i></a>
        </li>

    </ul>
}

@section pagejs {
    <script src="~/Angular/app/warehousePickingList/service.js?c=@System.Guid.NewGuid().ToString().Replace("-", "")"></script>
    <script type="text/javascript">

    var quickSearchClientGrid = jQuery('#quickSearchClientTable').scrollableTable2(
        'quicksearchClient.filters.pageIndex',
        'quicksearchClient.totalPage',
        function(currentPage){
            var scope = angular.element(jQuery('body')).scope();
            scope.$apply(function(){
                scope.quicksearchClient.filters.pageIndex = currentPage;
                scope.quicksearchClient.method.searchClient();
            });
        },
        function(sortedBy, sortedDirection){
            //do nothing
        }
    );


    var productSearchResultGrid = jQuery('#productSearchResultGrid').scrollableTable2(
        'quicksearchproduct.filters.pageIndex',
        'quicksearchproduct.totalPage',
        function(currentPage){
            var scope = angular.element(jQuery('body')).scope();
            scope.$apply(function(){
                scope.quicksearchproduct.filters.pageIndex = currentPage;
                scope.quicksearchproduct.method.search();
            });
        },
        function(sortedBy, sortedDirection){
            var scope = angular.element(jQuery('body')).scope();
            scope.$apply(function(){
                scope.quicksearchproduct.filters.sortedDirection = sortedDirection;
                scope.quicksearchproduct.filters.pageIndex = 1;
                scope.quicksearchproduct.filters.sortedBy = sortedBy;
                scope.quicksearchproduct.method.search();
            });
        }
    );


    var sparepartSearchResultGrid = jQuery('#sparepartSearchResultGrid').scrollableTable2(
        'quicksearchsparepart.filters.pageIndex',
        'quicksearchsparepart.totalPage',
        function(currentPage){
            var scope = angular.element(jQuery('body')).scope();
            scope.$apply(function(){
                scope.quicksearchsparepart.filters.pageIndex = currentPage;
                scope.quicksearchsparepart.method.search();
            });
        },
        function(sortedBy, sortedDirection){
            var scope = angular.element(jQuery('body')).scope();
            scope.$apply(function(){
                scope.quicksearchsparepart.filters.sortedDirection = sortedDirection;
                scope.quicksearchsparepart.filters.pageIndex = 1;
                scope.quicksearchsparepart.filters.sortedBy = sortedBy;
                scope.quicksearchsparepart.method.search();
            });
        }
    );

    var productGrid = jQuery('#productGrid').scrollableTable2(null,null)
    var sparepartGrid = jQuery('#sparepartGrid').scrollableTable2(null,null)

    warehousePickingListService.serviceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/warehousepickinglist/';
    warehousePickingListService.supportServiceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/support/';
    warehousePickingListService.token = '@Session[Frontend.Customize.Common.ProjectDefinition.TOKEN_SESSION]';


    var warehousePickingListApp = angular.module('tilsoftApp', []);
    warehousePickingListApp.controller('tilsoftController', ['$scope', function ($scope) {
        //
        // scope data
        //
        $scope.data = null;
        $scope.clients = null;
        $scope.users = null;
        $scope.warehouseAreas = null;
        $scope.packagingMethods = null;
        $scope.seasons = null;
        $scope.newID = 0;
        var searchProductTimer = null;

        //
        // scope event
        //
        $scope.event = {
            update: function($event){
                $event.preventDefault();

                if($scope.editForm.$valid)
                {
                    warehousePickingListService.update(
                        '@ViewBag.ID',
                        $scope.data,
                        function (data) {
                            jsHelper.processMessage(data.message);
                            if(data.message.type == 0) {
                                $scope.data = data.data;
                                window.location = '@Url.Action("Edit", "WarehousePickingList", new { id = UrlParameter.Optional })/' + data.data.warehousePickingListID;
                                $scope.$apply();
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
                else
                {
                    jsHelper.showMessage('warning', '@Frontend.Properties.Resources.INPUT_VALIDATION_FAILED');
                }
            },
            delete: function($event){
                $event.preventDefault();

                if (confirm('Are you sure ?')) {
                    warehousePickingListService.delete(
                        @ViewBag.ID,
                        function (data) {
                            jsHelper.processMessage(data.message);
                            if(data.message.type == 0) {
                                window.location = '@Url.Action("Index", "WarehouseImport")';
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            },
            approve: function($event){
                $event.preventDefault();

                if ( $scope.data.cmrNo=='' || $scope.data.cmrNo == undefined)
                {
                    alert('You need fill in CMRNo before confirm');
                    return;
                }

                if (confirm('Confirm picking receipt ?')) {
                    warehousePickingListService.changestatus(
                        @ViewBag.ID,
                        2,
                        $scope.data,
                        function (data) {
                            jsHelper.processMessage(data.message);
                            if(data.message.type == 0) {
                                $scope.data = data.data;
                                $scope.$apply();
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            },
            cancel: function($event){
                $event.preventDefault();

                if (confirm('Cancel picking reset ?')) {
                    warehousePickingListService.changestatus(
                        @ViewBag.ID,
                        3,
                        $scope.data,
                        function (data) {
                            jsHelper.processMessage(data.message);
                            if(data.message.type == 0) {
                                $scope.data = data.data;
                                $scope.$apply();
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            },
            removeProduct: function($event, id){
                if($event !== null) {
                    $event.preventDefault();
                }
                isExist = false;
                for(j=0; j< $scope.data.details.length; j++) {
                    if($scope.data.details[j].warehousePickingListProductDetailID == id) {
                        isExist = true;
                        break;
                    }
                }
                if(isExist){
                    $scope.data.details.splice(j, 1);
                }
            },
            removeSparepart: function($event, id){
                if($event !== null) {
                    $event.preventDefault();
                }
                isExist = false;
                for(j=0; j< $scope.data.sparepartDetails.length; j++) {
                    if($scope.data.sparepartDetails[j].warehousePickingListSparepartDetailID == id) {
                        isExist = true;
                        break;
                    }
                }
                if(isExist){
                    $scope.data.sparepartDetails.splice(j, 1);
                }
            },

            changePickingQnt: function($event, warehousePickingListProductDetailID, productID, productStatusID, productType, pickingQnt){
                if ($event.keyCode == 13)
                {
                    //open div warehouseArea
                    if ($("#icon-area-product-" + warehousePickingListProductDetailID).hasClass('fa-plus-square-o'))
                    {
                        $("#" + 'product-' + warehousePickingListProductDetailID).toggle();
                        $("#icon-area-product-" + warehousePickingListProductDetailID).removeClass('fa-plus-square-o');
                        $("#icon-area-product-" + warehousePickingListProductDetailID).addClass('fa-minus-square-o');
                    }

                    //begin process data
                    var arr = $scope.data.details.filter(function(o){ return o.warehousePickingListProductDetailID == warehousePickingListProductDetailID });

                    //delete all warehouseArea is adding (warehousePickingListAreaDetailID < 0)
                    var arr_need_deleted = [];
                    angular.forEach(arr[0].warehousePickingListAreaDetails,function(value,key){
                        if (value.warehousePickingListAreaDetailID < 0)
                        {
                            this.push(value.warehousePickingListAreaDetailID);
                        }
                    }, arr_need_deleted);

                    angular.forEach(arr_need_deleted,function(value){
                        for(i = 0; i < arr[0].warehousePickingListAreaDetails.length; i++)
                        {
                            if (arr[0].warehousePickingListAreaDetails[i].warehousePickingListAreaDetailID == value)
                            {
                                arr[0].warehousePickingListAreaDetails.splice(i,1);
                                break;
                            }
                        }
                    }, null);

                    //take position that at this total quantity picked that enought
                    var arr_areas = $scope.warehouseAreas.filter(function(o){return o.goodsID == productID && o.productStatusID == productStatusID && o.productType == productType});
                    i = 0;
                    totalQnt = 0;
                    for (i = 0; i < arr_areas.length; i++)
                    {
                        totalQnt += arr_areas[i].physicalQnt;
                        if (totalQnt >= pickingQnt)
                        {
                            break;
                        }
                    }
                    //distribute quantity picked for every area
                    j = 0;
                    totalQnt = 0;
                    for (j = 0; j < arr_areas.length; j++)
                    {
                        if (j < i)
                        {
                            totalQnt += arr_areas[j].physicalQnt;
                            arr[0].warehousePickingListAreaDetails.push({
                                warehousePickingListAreaDetailID : -1 * parseInt(j+1) ,
                                warehouseAreaID : arr_areas[j].warehouseAreaID,
                                quantity : arr_areas[j].physicalQnt
                            });
                        }
                    }
                    //distribute remaining picked to final area
                    arr[0].warehousePickingListAreaDetails.push({
                        warehousePickingListAreaDetailID : -1 * parseInt(j),
                        warehouseAreaID : arr_areas[i].warehouseAreaID,
                        quantity : pickingQnt - totalQnt
                    });
                }
            },

            selectCMRDate : function(){
                $scope.data.planingDate = $scope.data.cmrDate;
                $scope.data.realPickingDate = $scope.data.cmrDate;
                $scope.data.deliveryDate = $scope.data.cmrDate;
            },

            editCMR1 : function(){
                $('#frmCMR1').modal('show');
            },

            editCMR2 : function(){
                $('#frmCMR2').modal('show');
            }

            ,
            okEditCMR1 : function(){
                $scope.data.cmR1 = $scope.data.senderName + '\n' + $scope.data.senderAddress + '\n' + $scope.data.senderZipCode + ' ' + $scope.data.senderCity + '\n' + $scope.data.senderCountry;
                $('#frmCMR1').modal('hide');
            },

            okEditCMR2 : function(){
                $scope.data.cmR2 = $scope.data.receiverName + '\n' + $scope.data.receiverAddress + '\n' + $scope.data.receiverZipCode + ' ' + $scope.data.receiverCity + '\n' + $scope.data.receiverCountry;
                $('#frmCMR2').modal('hide');
            }

        };

        //
        // scope function
        //
        $scope.method = {
            load: function(){
                warehousePickingListService.load(
                    '@ViewBag.ID',
                    function (data) {
                        $scope.data = data.data.data;
                        $scope.clients = data.data.clients;
                        $scope.users = data.data.users;
                        $scope.warehouseAreas = data.data.physicalStockByWarehouseAreas;
                        $scope.packagingMethods = data.data.packagingMethods;
                        $scope.seasons = data.data.seasons

                        $scope.$apply();
                        jQuery('#content').show();

                        // monitor changes
                        $scope.$watch('data', function() {
                            jQuery('#changeNotification').html('<i class="fa fa-save blink_me"></i>');
                        });

                        if ('@ViewBag.ID' == 0)
                        {
                            //set default value
                            userID = parseInt('@Frontend.Helper.AuthHelper.GetCurrentUserInfo(HttpContext.Current).Data.UserId');
                            $scope.data.plannedBy = userID;
                            $scope.data.pickingBy = userID;
                            //show form to select client
                            jsHelper.showPopup('popupFormClient',function(){});
                        }
                    },
                    function (error) {
                        jsHelper.showMessage('warning', error);

                        $scope.data = null;
                        $scope.$apply();
                    }
                );
            },
            getNewID: function(){
                $scope.newID--;
                return $scope.newID;
            },
        };

        //
        // search product form
        //
        $scope.quicksearchproduct = {
            data: null,
            filters : {
                filters: {
                    searchQuery: '',
                    clientID: 0
                },
                sortedBy: 'ProformaInvoiceNo',
                sortedDirection: 'ASC',
                pageSize: 20,
                pageIndex: 1
            },
            totalPage : 0,
            method: {
                search: function(){
                    warehousePickingListService.quicksearchremainproduct(
                        $scope.quicksearchproduct.filters,
                        function (data) {
                            if(data.message.type == 0) {
                                $scope.quicksearchproduct.data = data.data;
                                $scope.quicksearchproduct.totalPage = Math.ceil(data.totalRows / $scope.quicksearchproduct.filters.pageSize);
                                productSearchResultGrid.updateLayout();
                                $scope.$apply();
                                jQuery('#product-popup').show();
                            }
                            else {
                                jsHelper.processMessage(data.message);
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                },

                searchWithoutShowForm : function(clientID,articleCode,callBack){

                    //set filter input
                    $scope.quicksearchproduct.filters.filters.clientID = clientID;
                    $scope.quicksearchproduct.filters.filters.searchQuery = articleCode;
                    $scope.quicksearchproduct.filters.sortedBy = 'RemainingReserved';
                    $scope.quicksearchproduct.filters.sortedDirection = 'DESC';

                    //search
                    warehousePickingListService.quicksearchremainproduct(
                        $scope.quicksearchproduct.filters,
                        function (data) {
                            if(data.message.type == 0) {
                                callBack(data.data);
                            }
                            else {
                                jsHelper.processMessage(data.message);
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            },
            event: {
                searchBoxKeyUp: function($event){
                    if ($event.keyCode == 13)
                    {
                        $scope.quicksearchproduct.event.searchClick();
                    }
                    else if (jQuery('#quickSearchBoxProduct').val().length >= 3){
                        clearTimeout(searchProductTimer);
                        searchProductTimer = setTimeout(
                            function(){
                                $scope.quicksearchproduct.event.searchClick();
                            },
                            500);
                    }
                },

                searchClick : function(){
                    $scope.quicksearchproduct.filters.filters.clientID = $scope.data.clientID;
                    $scope.quicksearchproduct.filters.filters.searchQuery = jQuery('#quickSearchBoxProduct').val();
                    $scope.quicksearchproduct.filters.pageIndex = 1;
                    $scope.quicksearchproduct.method.search();
                },

                close: function($event){
                    jQuery('#product-popup').hide();
                    jQuery('#quickSearchBoxProduct').val('');
                    $scope.quicksearchproduct.data = null;
                    $event.preventDefault();
                },
                itemSelected: function($event, id){
                    jQuery.each($scope.quicksearchproduct.data, function(){
                        if(this.isSelected)
                        {
                            saleOrderDetailID = this.saleOrderDetailID;
                            if ($scope.data.details.filter(function(o){return o.saleOrderDetailID == saleOrderDetailID}).length==0)
                            {
                                // add product to list
                                $scope.data.details.push({
                                    warehousePickingListProductDetailID: $scope.method.getNewID(),
                                    productID: this.productID,
                                    productStatusID: this.productStatusID,
                                    productStatusNM: this.productStatusNM,
                                    saleOrderDetailID: this.saleOrderDetailID,
                                    creditNoteDetailID: this.creditNoteDetailID,
                                    articleCode: this.articleCode,
                                    description: this.description,
                                    quantity: 0,
                                    planingQuantity: 0,
                                    proformaInvoiceNo: this.proformaInvoiceNo,
                                    unit:this.unit,
                                    colli:this.colli,
                                    packagingMethodID:this.packagingMethodID,
                                    physicalQnt : this.physicalQnt,
                                    remainingReserved : this.remainingReserved,
                                });
                            }                            
                        }
                    });

                    $scope.quicksearchproduct.data = null;
                    jQuery('#product-popup').hide();
                    jQuery('#quickSearchBoxProduct').val('');
                    $event.preventDefault();
                }
            }
        };

        //
        // search product form
        //
        var searchSparepartTimer = null;
        $scope.quicksearchsparepart = {
            data: null,
            filters : {
                filters: {
                    searchQuery: '',
                    clientID: 0
                },
                sortedBy: 'ProformaInvoiceNo',
                sortedDirection: 'ASC',
                pageSize: 20,
                pageIndex: 1
            },
            totalPage : 0,
            method: {
                search: function(){
                    warehousePickingListService.quicksearchremainsparepart(
                        $scope.quicksearchsparepart.filters,
                        function (data) {
                            if(data.message.type == 0) {
                                $scope.quicksearchsparepart.data = data.data;
                                $scope.quicksearchsparepart.totalPage = Math.ceil(data.totalRows / $scope.quicksearchsparepart.filters.pageSize);
                                sparepartSearchResultGrid.updateLayout();
                                $scope.$apply();
                                jQuery('#sparepart-popup').show();
                            }
                            else {
                                jsHelper.processMessage(data.message);
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                },

                searchWithoutShowForm : function(clientID,articleCode,callBack){

                    //set filter input
                    $scope.quicksearchsparepart.filters.filters.clientID = clientID;
                    $scope.quicksearchsparepart.filters.filters.searchQuery = articleCode;
                    $scope.quicksearchsparepart.filters.sortedBy = 'RemainingReserved';
                    $scope.quicksearchsparepart.filters.sortedDirection = 'DESC';

                    //search
                    warehousePickingListService.quicksearchremainsparepart(
                       $scope.quicksearchsparepart.filters,
                        function (data) {
                            if(data.message.type == 0) {
                                callBack(data.data);
                            }
                            else {
                                jsHelper.processMessage(data.message);
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            },
            event: {
                searchBoxKeyUp: function($event){
                    if ($event.keyCode == 13){
                        $scope.quicksearchsparepart.event.searchClick();
                    }
                    else if(jQuery('#quickSearchBoxSparepart').val().length >= 3){
                        clearTimeout(searchSparepartTimer);
                        searchSparepartTimer = setTimeout(
                            function(){
                                $scope.quicksearchsparepart.event.searchClick();
                            },
                            500);
                    }
                },

                searchClick : function(){
                    $scope.quicksearchsparepart.filters.filters.clientID = $scope.data.clientID;
                    $scope.quicksearchsparepart.filters.filters.searchQuery = jQuery('#quickSearchBoxSparepart').val();
                    $scope.quicksearchsparepart.filters.pageIndex = 1;
                    $scope.quicksearchsparepart.method.search();
                },

                close: function($event){
                    jQuery('#sparepart-popup').hide();
                    jQuery('#quickSearchBoxSparepart').val('');
                    $scope.quicksearchsparepart.data = null;
                    $event.preventDefault();
                },
                itemSelected: function($event, id){
                    jQuery.each($scope.quicksearchsparepart.data, function(){
                        if(this.isSelected)
                        {
                            saleOrderDetailSparepartID = this.saleOrderDetailSparepartID;
                            if ($scope.data.sparepartDetails.filter(function(o){return o.saleOrderDetailSparepartID == saleOrderDetailSparepartID}).length==0)
                            {
                                // add product to list
                                $scope.data.sparepartDetails.push({
                                    warehousePickingListSparepartDetailID: $scope.method.getNewID(),
                                    sparepartID: this.sparepartID,
                                    saleOrderDetailSparepartID: this.saleOrderDetailSparepartID,
                                    articleCode: this.articleCode,
                                    description: this.description,
                                    quantity: 0,
                                    planingQuantity: 0,
                                    proformaInvoiceNo: this.proformaInvoiceNo,
                                    unit:this.unit,
                                    colli:this.colli,
                                    packagingMethodID:this.packagingMethodID,
                                    productStatusID: this.productStatusID,
                                    productStatusNM: this.productStatusNM,
                                    physicalQnt : this.physicalQnt,
                                    remainingReserved : this.remainingReserved,
                                });
                            }                            
                        }
                    });

                    $scope.quicksearchsparepart.data = null;
                    jQuery('#sparepart-popup').hide();
                    jQuery('#quickSearchBoxSparepart').val('');
                    $event.preventDefault();
                }
            }
        };


        //quick seach client form
        searchClientTimer = null;
        $scope.quicksearchClient = {
            data: null,
            filters: {
                filters: {
                    searchQuery: ''
                },
                sortedBy: 'ClientNM',
                sortedDirection: 'ASC',
                pageSize: 10,
                pageIndex: 1
            },
            totalPage: 0,

            method :{
                searchClient : function() {
                    warehousePickingListService.quicksearchClient(
                        $scope.quicksearchClient.filters,
                        function (data) {
                            if (data.message.type == 0) {
                                $scope.quicksearchClient.data = data.data;
                                $scope.quicksearchClient.totalPage = Math.ceil(data.totalRows / $scope.quicksearchClient.filters.pageSize);
                                //quickSearchClientGrid.updateLayout();
                                $scope.$apply();
                                jQuery('#client-popup').show();
                            }
                            else {
                                jsHelper.processMessage(data.message);
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            },

            event: {
                searchBoxKeyUp: function ($event) {
                    if ($event.keyCode == 13){
                        $scope.quicksearchClient.event.searchClick();
                    }
                    else if (jQuery('#txtClient').val().length >= 3) {
                        clearTimeout(searchClientTimer);
                        searchClientTimer = setTimeout(
                            function () {
                                $scope.quicksearchClient.event.searchClick();
                            },
                            500);
                    }
                },

                searchClick : function(){
                    $scope.quicksearchClient.filters.filters.searchQuery = jQuery('#txtClient').val();
                    $scope.quicksearchClient.filters.pageIndex = 1;
                    $scope.quicksearchClient.method.searchClient();
                },

                close: function ($event, clearSearchBox) {
                    jQuery('#client-popup').hide();
                    if (clearSearchBox) {
                        //do nothing
                    }
                    $scope.quicksearchClient.data = null;
                    $event.preventDefault();
                },

                ok: function ($event, id) {
                    $scope.data.clientID = id;
                    jQuery.each($scope.quicksearchClient.data, function () {
                        if (this.clientID == id) {
                            $scope.data.clientUD = this.clientUD;
                            $scope.data.clientNM = this.clientNM;
                            $scope.data.cmR2 = this.fullAddress;

                            $scope.data.receiverName = this.clientNM;
                            $scope.data.receiverAddress = this.streetAddress1;
                            $scope.data.receiverZipCode = this.zipCode;
                            $scope.data.receiverCity = this.clientCityNM;
                            $scope.data.receiverCountry = this.clientCountryNM;
                            $scope.data.receiverPhone = this.telephone;
                            $scope.data.receiverEmail = this.email;
                        }
                    });
                    $scope.quicksearchClient.event.close($event, false);

                    //hide popup
                    jsHelper.hidePopup('popupFormClient',function(){});
                },

                cancel: function(){
                    window.location = '@Url.Action("Index", "WarehousePickingList")';
                }


            }
        }

        $scope.printPickingList = function ($event) {
            $event.preventDefault();
            warehousePickingListService.printPickingList(@ViewBag.ID,
                function (data) {
                    //window.open('@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data ,'');
                    window.location = '@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data + '.xlsm';
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        };

        $scope.printCMR = function ($event) {
            $event.preventDefault();

            if ( $scope.data.cmrNo=='' || $scope.data.cmrNo == undefined)
            {
                alert('You need fill in CMRNo  before print CMR');
                return;
            }

            if ( $scope.data.cmrDate=='' || $scope.data.cmrDate == undefined)
            {
                alert('You need fill in CMR Date  before print CMR');
                return;
            }

            if ( $scope.data.cmR3=='' || $scope.data.cmR3 == undefined )
            {
                alert('You need fill in Point 3 before print CMR');
                return;
            }

            if ( $scope.data.cmR16=='' || $scope.data.cmR16 == undefined)
            {
                alert('You need fill in  Point 16 before print CMR');
                return;
            }

            warehousePickingListService.printCMR(@ViewBag.ID,
                function (data) {
                    window.open('@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data ,'');
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        }

        $scope.printNewPickingList = function ($event) {
            $event.preventDefault();
            warehousePickingListService.printNewPickingList(@ViewBag.ID,
                function (data) {
                    window.open('@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data ,'');
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        };


        $scope.warehouseArea = {
            event : {
                viewArea : function($event,id){
                    $event.preventDefault();

                    $("#" + id).toggle();
                    //set icon is plus or minus
                    if ($("#icon-area-" + id).hasClass('fa-plus-square-o'))
                    {
                        $("#icon-area-" + id).removeClass('fa-plus-square-o');
                        $("#icon-area-" + id).addClass('fa-minus-square-o');
                    }
                    else  if ($("#icon-area-" + id).hasClass('fa-minus-square-o'))
                    {
                        $("#icon-area-" + id).removeClass('fa-minus-square-o');
                        $("#icon-area-" + id).addClass('fa-plus-square-o');
                    }
                },

                addProductToArea : function($event,warehousePickingListProductDetailID) {
                    $event.preventDefault();

                    var arr = $scope.data.details.filter(function(o){ return o.warehousePickingListProductDetailID == warehousePickingListProductDetailID });
                    if (arr[0].warehousePickingListAreaDetails == null)
                    {
                        arr[0].warehousePickingListAreaDetails = [];
                    }
                    var arr_area = arr[0].warehousePickingListAreaDetails.filter(function(o){ return o.warehousePickingListAreaDetailID < 0});

                    max_id = -1;
                    if (arr_area.length > 0)
                    {
                        arr_area.sort(function(a,b){return a.warehousePickingListAreaDetailID - b.warehousePickingListAreaDetailID});
                        max_id = arr_area[0].warehousePickingListAreaDetailID - 1;
                    }
                    arr[0].warehousePickingListAreaDetails.push({
                        warehousePickingListAreaDetailID : max_id,
                        warehouseAreaUD : ''
                    });
                },

                removeProductFromArea : function($event,warehousePickingListProductDetailID,warehousePickingListAreaDetailID){
                    $event.preventDefault();
                    var arr = $scope.data.details.filter(function(o){ return o.warehousePickingListProductDetailID == warehousePickingListProductDetailID });
                    var arr_area = arr[0].warehousePickingListAreaDetails;
                    
                    isExist = false;
                    for(j=0; j< arr_area.length; j++) {
                        if(arr_area[j].warehousePickingListAreaDetailID == warehousePickingListAreaDetailID) {
                            isExist = true;
                            break;
                        }
                    }
                    if(isExist){
                        arr_area.splice(j, 1);
                    }
                },

                addSparepartToArea : function($event,warehousePickingListSparepartDetailID) {
                    $event.preventDefault();

                    var arr = $scope.data.sparepartDetails.filter(function(o){ return o.warehousePickingListSparepartDetailID == warehousePickingListSparepartDetailID });
                    if (arr[0].warehousePickingListAreaDetails == null)
                    {
                        arr[0].warehousePickingListAreaDetails = [];
                    }
                    var arr_area = arr[0].warehousePickingListAreaDetails.filter(function(o){ return o.warehousePickingListAreaDetailID < 0});

                    max_id = -1;
                    if (arr_area.length > 0)
                    {
                        arr_area.sort(function(a,b){return a.warehousePickingListAreaDetailID - b.warehousePickingListAreaDetailID});
                        max_id = arr_area[0].warehousePickingListAreaDetailID - 1;
                    }
                    arr[0].warehousePickingListAreaDetails.push({
                        warehousePickingListAreaDetailID : max_id,
                        warehouseAreaUD : ''
                    });
                },

                removeSparepartFromArea : function($event,warehousePickingListSparepartDetailID,warehousePickingListAreaDetailID){
                    $event.preventDefault();
                    var arr = $scope.data.sparepartDetails.filter(function(o){ return o.warehousePickingListSparepartDetailID == warehousePickingListSparepartDetailID });
                    var arr_area = arr[0].warehousePickingListAreaDetails;

                    isExist = false;
                    for(j=0; j< arr_area.length; j++) {
                        if(arr_area[j].warehousePickingListAreaDetailID == warehousePickingListAreaDetailID) {
                            isExist = true;
                            break;
                        }
                    }
                    if(isExist){
                        arr_area.splice(j, 1);
                    }
                },
            }
        }


        $scope.importXML = {
            netherland : {
                id : 92780,
                code : '000221',
                name : 'TUINMEUBEL.NL',
            },

            belgium : {
                id : 510781,
                code : '001315',
                name : 'TUINMEUBELEN.BE',
            },

            event : {
                importFromXMLFile : function () {
                    var input = document.createElement ("input");
                    input.setAttribute ("type", "file");
                    input.setAttribute ("accept", ".xml");
                    input.addEventListener ("change", function (e) {
                        var file = e.target.files[0];
                        //var file = this.files[0];
                        var reader = new FileReader();
                        reader.onload = function() {
                            var xmlInput = this.result;
                            var jsonOutput = xml2json(xmlInput);
                            // Beautify the JSON if needed
                            //var beautifiedJson = JSON.stringify(jsonOutput, undefined, 4);

                            //apply data for scope data
                            client = $scope.importXML.netherland; // set default client
                            if (jsonOutput.shipment.sender.name.toUpperCase().indexOf($scope.importXML.belgium.name)!=-1)
                            {
                                client = $scope.importXML.belgium
                            }

                            //apply client info
                            $scope.data.clientID = client.id;
                            $scope.data.clientUD = client.code;
                            $scope.data.clientNM = client.name;

                            //apply client sender address
                            $scope.data.cmR1 = jsonOutput.shipment.sender.name + '\n' + jsonOutput.shipment.sender.address + '\n' + jsonOutput.shipment.sender.postalcode + ' ' + jsonOutput.shipment.sender.city + '\n' + jsonOutput.shipment.sender.country;
                            $scope.data.senderName = jsonOutput.shipment.sender.name;
                            $scope.data.senderAddress = jsonOutput.shipment.sender.address;
                            $scope.data.senderZipCode = jsonOutput.shipment.sender.postalcode;
                            $scope.data.senderCity = jsonOutput.shipment.sender.city;
                            $scope.data.senderCountry = jsonOutput.shipment.sender.country;


                            //apply receiver address
                            $scope.data.cmR2 = jsonOutput.shipment.receiver.name + '\n' + jsonOutput.shipment.receiver.address + '\n' + jsonOutput.shipment.receiver.postalCode + ' ' + jsonOutput.shipment.receiver.city + '\n' + jsonOutput.shipment.receiver.countryCode;
                            $scope.data.receiverName = jsonOutput.shipment.receiver.name;
                            $scope.data.receiverAddress = jsonOutput.shipment.receiver.address;
                            $scope.data.receiverZipCode = jsonOutput.shipment.receiver.postalCode;
                            $scope.data.receiverCity = jsonOutput.shipment.receiver.city;
                            $scope.data.receiverCountry = jsonOutput.shipment.receiver.countryCode;
                            $scope.data.receiverPhone = jsonOutput.shipment.receiver.phoneNumber;
                            $scope.data.receiverEmail = jsonOutput.shipment.receiver.emailAddress;

                            //order number as remark
                            $scope.data.remark = jsonOutput.shipment.id;

                            //product
                            errorResult = '';
                            magentoData = [];

                            //create magento buffer
                            if (Array.isArray(jsonOutput.shipment.items.item))
                            {
                                magentoData = jsonOutput.shipment.items.item;
                            }
                            else {
                                magentoData.push(jsonOutput.shipment.items.item);
                            }

                            //add to tilsoft
                            $scope.data.details = [];
                            $scope.data.sparepartDetails = [];
                            angular.forEach(magentoData,function(item){
                                if (item.product.ean.length == 26) // type is product
                                {
                                    $scope.quicksearchproduct.method.searchWithoutShowForm(client.id,item.product.ean,function(data){
                                        if (data.length != 0)
                                        {
                                            tilsoftProduct = data[0];
                                            $scope.data.details.push({
                                                warehousePickingListProductDetailID: $scope.method.getNewID(),
                                                productID: tilsoftProduct.productID,
                                                productStatusID: tilsoftProduct.productStatusID,
                                                productStatusNM: tilsoftProduct.productStatusNM,
                                                saleOrderDetailID: tilsoftProduct.saleOrderDetailID,
                                                creditNoteDetailID: tilsoftProduct.creditNoteDetailID,
                                                articleCode: tilsoftProduct.articleCode,
                                                description: tilsoftProduct.description,
                                                quantity: item.quantity,
                                                planingQuantity: item.quantity,
                                                proformaInvoiceNo: tilsoftProduct.proformaInvoiceNo,
                                                unit:tilsoftProduct.unit,
                                                //colli:tilsoftProduct.colli,
                                                packagingMethodID:tilsoftProduct.packagingMethodID
                                            });
                                            $scope.$apply();
                                        }
                                        else{
                                            errorResult +=  item.product.ean + '(' + item.product.manufacturerCode + ')' + '</br>';
                                            jsHelper.showMessage('info','There are products which can not import beause system can not find in Tilsoft: </br>' + errorResult);
                                        }
                                    });
                                }
                                else if (item.product.ean.length == 9) // type is sparepart
                                {
                                    $scope.quicksearchsparepart.method.searchWithoutShowForm(client.id,item.product.ean,function(data){
                                        if (data.length != 0)
                                        {
                                            tilsoftProduct = data[0];
                                            $scope.data.sparepartDetails.push({
                                                warehousePickingListSparepartDetailID: $scope.method.getNewID(),
                                                sparepartID: tilsoftProduct.sparepartID,
                                                saleOrderDetailSparepartID: tilsoftProduct.saleOrderDetailSparepartID,
                                                articleCode: tilsoftProduct.articleCode,
                                                description: tilsoftProduct.description,
                                                quantity: item.quantity,
                                                planingQuantity: item.quantity,
                                                proformaInvoiceNo: tilsoftProduct.proformaInvoiceNo,
                                                unit:tilsoftProduct.unit,
                                                //colli:tilsoftProduct.colli,
                                                packagingMethodID:tilsoftProduct.packagingMethodID,
                                                productStatusID: tilsoftProduct.productStatusID,
                                                productStatusNM: tilsoftProduct.productStatusNM
                                            });
                                            $scope.$apply();
                                        }
                                        else{
                                            errorResult +=  item.product.ean + '(' + item.product.manufacturerCode + ')' + '</br>';
                                            jsHelper.showMessage('info','There are products which can not import beause system can not find in Tilsoft: </br>' + errorResult);
                                        }
                                    });
                                }
                            });
                        }
                        reader.readAsText(file)
                    }, false);
                    input.click();
                }
            },

        }

        $scope.exportXML = {
            event : {
                load : function($event){
                    $event.preventDefault();
                    $('#frmExportXML').modal('show');
                },

                exportXML : function($event){
                    $event.preventDefault();
                    //save data then export data to xml
                    if($scope.editForm.$valid)
                    {
                        warehousePickingListService.update(
                            '@ViewBag.ID',
                            $scope.data,
                            function (data) {
                                if(data.message.type == 0) {
                                    $scope.data = data.data;
                                    //export to xml
                                    warehousePickingListService.exportXML($scope.data.warehousePickingListID,
                                            function (data) {
                                                window.open('@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data ,'');
                                            },
                                            function (error) {
                                                jsHelper.showMessage('warning', error);
                                            }
                                        );
                                }
                            },
                            function (error) {
                                jsHelper.showMessage('warning', error);
                            }
                        );
                    }
                    else
                    {
                        jsHelper.showMessage('warning', '@Frontend.Properties.Resources.INPUT_VALIDATION_FAILED');
                    }
                }

            },
            method : {

            }
        }

        //warehouse area
        quicksearchAreaFromTimer = null;
        $scope.quicksearchAreaFrom = {
            data: null,
            currentEditItem : null,

            popupformID : 'popup-area-from',

            event: {
                searchClick: function ($event, areaItem, productItem) {
                    //mark the id of row that is editing
                    $scope.quicksearchAreaFrom.currentEditItem = areaItem;
                    //set data
                    if (areaItem.warehouseAreaUD == '')
                    {
                        $scope.quicksearchAreaFrom.data = $scope.warehouseAreas.filter(function(o){return o.goodsID == productItem.productID && o.productStatusID == productItem.productStatusID});
                    }
                    else {
                        areaUD = areaItem.warehouseAreaUD.toUpperCase();
                        $scope.quicksearchAreaFrom.data = $scope.warehouseAreas.filter(function(o){return o.goodsID == productItem.productID && o.productStatusID == productItem.productStatusID && o.warehouseAreaUD.toUpperCase().indexOf(areaUD) !=-1});
                    }
                    //show search result
                    jQuery("#receipt_product_detail_id" + areaItem.warehousePickingListAreaDetailID).append(jQuery('#' + $scope.quicksearchAreaFrom.popupformID));
                    jQuery('#' + $scope.quicksearchAreaFrom.popupformID).show();
                },

                searchBoxKeyUp: function ($event, areaItem, productItem) {
                    if ($event.keyCode == 13) {
                        $scope.quicksearchAreaFrom.event.searchClick($event, areaItem, productItem);
                    }
                    else if (areaItem.warehouseAreaUD.length >= 2) {
                        clearTimeout(quicksearchAreaFromTimer);
                        quicksearchAreaFromTimer = setTimeout(
                            function () {
                                $scope.quicksearchAreaFrom.event.searchClick($event, areaItem, productItem);
                            },
                            500
                        );
                    }
                },

                close: function ($event) {
                    jQuery('#' + $scope.quicksearchAreaFrom.popupformID).hide();
                    $scope.quicksearchAreaFrom.data = null;
                    $event.preventDefault();
                },
                itemSelected: function ($event, warehouseItem) {
                    //set selected area
                    areaItem = $scope.quicksearchAreaFrom.currentEditItem;
                    areaItem.warehouseAreaID = warehouseItem.warehouseAreaID;
                    areaItem.warehouseAreaUD = warehouseItem.warehouseAreaUD;

                    //return list area to oringin position
                    jQuery("#origin-position-area").append(jQuery('#' + $scope.quicksearchAreaFrom.popupformID));
                    
                    $scope.quicksearchAreaFrom.event.close($event);
                }
            }
        }


        //
        // init
        //
        $scope.method.load();
    }]);
</script>
}

