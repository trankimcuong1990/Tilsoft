
@{
    ViewBag.Title = "Eurofar Commercial Invoice";
    ViewBag.Module = "Eurofar Commercial Invoice";
}

<div class="row">

    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div ng-show="forms.currentForm===forms.search">
            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
                <header>
                    <span class="widget-icon"> <i class="fa fa-search"></i> </span>
                    <h2>Search Filter</h2>
                </header>

                <div>
                    <div class="jarviswidget-editbox"></div>
                    <div class="widget-body">
                        <fieldset>
                            <div class="row">
                                <div class="col-sm-2">
                                    <label>Invoice for company</label>
                                    <select ng-model="filters.InternalCompanyID" ng-options="item.internalCompanyID as item.internalCompanyNM for item in internalCompany3s" class="form-control">
                                        <option value=""></option>
                                    </select>
                                </div>
                                <div class="col-sm-1">
                                    <label>Inv.No</label>
                                    <input class="form-control search-filter" type="text" id="txtinvoiceno" ng-model="filters.InvoiceNo">
                                </div>

                                <div class="col-sm-1">
                                    <label>Season</label>
                                    <select ng-model="filters.Season" ng-options="item.seasonValue as item.seasonText for item in seasons | orderBy : 'seasonValue' : 'reverse' " class="form-control">
                                        <option value=""></option>
                                    </select>
                                </div>

                                <div class="col-sm-2">
                                    <label>Client Code</label>
                                    <input class="form-control search-filter" type="text" id="txtclientcode" ng-model="filters.ClientUD">
                                </div>
                                <div class="col-sm-2">
                                    <label>Client Name</label>
                                    <input class="form-control search-filter" type="text" id="txtclientnm" ng-model="filters.ClientNM">
                                </div>
                                <div class="col-sm-2">
                                    <label>BL No</label>
                                    <input class="form-control search-filter" type="text" id="txtblno" ng-model="filters.BLNo">
                                </div>
                                <div class="col-sm-2">
                                    <label>Order No</label>
                                    <input class="form-control search-filter" type="text" id="txtorderno" ng-model="filters.OrderNo">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-2">
                                    <label>Invoice Type</label>
                                    <select ng-model="filters.TypeOfInvoice" ng-options="item.invoiceTypeValue as item.invoiceTypeText for item in invoiceTypes" class="form-control">
                                        <option value=""></option>
                                    </select>
                                </div>
                                <div class="col-sm-2">
                                    <label>Invoice.No at client system</label>
                                    <input class="form-control search-filter" type="text" id="txtclientInvoiceNo" ng-model="filters.ClientInvoiceNo">
                                </div>
                                <div class="col-sm-2">
                                    <label>Container No</label>
                                    <input class="form-control search-filter" type="text" id="txtContainerNo" ng-model="filters.ContainerNo">
                                </div>
                                <div class="col-sm-2">
                                    <label>CMR No</label>
                                    <input class="form-control search-filter" type="text" id="txtCMRNo" ng-model="filters.CMRNo">
                                </div>
                                <div class="col-sm-2">
                                    <label>ETA 1</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control datepicker" data-dateformat="dd/mm/yy" ng-model="filters.ETA">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                                <div class="col-sm-1">
                                    <label>ETA 2</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control datepicker" data-dateformat="dd/mm/yy" ng-model="filters.ETA2">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                                <div class="col-sm-1">
                                    <label>ETD</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control datepicker" data-dateformat="dd/mm/yy" ng-model="filters.ETD">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
            </div>

            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-search-result" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
                <header>
                    <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                    <h2>Search Result</h2>
                </header>

                <div>
                    <div class="jarviswidget-editbox"></div>

                    <div class="widget-body">
                        <div id="searchResult" class="tilsoft-table-wrapper">
                            <div class="tilsoft-table">
                                <div class="tilsoft-table-header" style="width: 3100px;">
                                    <div style="width: 60px;"></div>
                                    <div style="width: 50px; text-align:center"><input type="checkbox" ng-model="isAllSelected" ng-click="toggleAll()" style="margin-left:9px" /></div>
                                    <div style="width: 80px;" class="sorting" data-colname="invoiceNo">invoice No</div>

                                    <div style="width: 90px;" class="sorting" data-colname="invoiceDateFormated">Invoice Date</div>
                                    <div style="width: 120px;" class="sorting" data-colname="proformaInvoiceNo">Order No</div>
                                    <div style="width: 80px;" class="sorting" data-colname="clientUD">client Code</div>
                                    <div style="width: 200px;" class="sorting" data-colname="clientNM">client Name</div>


                                    <div style="width: 60px;" class="sorting" data-colname="accountNo">Acc No</div>
                                    <div style="width: 50px;" class="sorting" data-colname="vatRate">vat Rate</div>
                                    <div style="width: 80px;" class="sorting" data-colname="netAmount">net Amount</div>
                                    <div style="width: 70px;" class="sorting" data-colname="vatAmount">vat Amount</div>
                                    <div style="width: 80px;" class="sorting" data-colname="totalAmount">total Amount</div>
                                    <div style="width: 60px;" class="sorting" data-colname="currency">curr ency</div>

                                    <div style="width: 100px;" class="sorting" data-colname="netAmount">net Amount(&euro;)</div>
                                    <div style="width: 90px;" class="sorting" data-colname="vatAmount">vat Amount(&euro;)</div>
                                    <div style="width: 100px;" class="sorting" data-colname="totalAmount">total Amount(&euro;)</div>

                                    <div style="width: 70px;" class="sorting" data-colname="season">Season</div>
                                    <div style="width: 60px;" class="sorting" data-colname="typeOfInvoiceText">Type</div>
                                    <div style="width: 110px;" class="sorting" data-colname="isConfirmedText">Status</div>
                                    <div style="width: 150px;" class="sorting" data-colname="lcRefNo">lc Ref.No</div>
                                    <div style="width: 150px;" class="sorting" data-colname="refNo">ref.No</div>
                                    <div style="width: 150px;" class="sorting" data-colname="blNo">BL No</div>

                                    <div style="width: 150px;" class="sorting" data-colname="factoryInvoiceNo">Factory Invoice No</div>



                                    <div style="width: 250px;" class="sorting" data-colname="deliveryTerm">delivery Term</div>
                                    <div style="width: 250px;" class="sorting" data-colname="paymentTerm">payment Term</div>
                                    <div style="width: 100px;" class="sorting" data-colname="mvBookingNo">Client Inv.No</div>
                                    <div class="sorting" data-colname="remark">Condition</div>
                                </div>
                                <div class="tilsoft-table-body" style="width: 3100px; ">
                                    <table>
                                        <tr>
                                            <td colspan="13" style="font-weight:bold">Total</td>
                                            <td style="text-align:right;background-color:yellow;width:100px">&euro;{{sumNetAmountEUR  | number : 2}}</td>
                                            <td style="text-align:right;background-color:yellow;width:90px">&euro;{{sumVATAmountEUR | number : 2}}</td>
                                            <td style="text-align:right;background-color:yellow;width:100px">&euro;{{sumTotalAmountEUR | number : 2}}</td>
                                            <td colspan="15"></td>
                                        </tr>
                                        @*<tr>
                                            <td colspan="9" style="font-weight:bold">Sub Total</td>
                                            <td style="text-align:right;background-color:yellow">&euro;{{calSubTotalVATAmountEUR()  | number : 2}}</td>
                                            <td style="text-align:right;background-color:yellow">&euro;{{calSubTotalVATAmountEUR() | number : 2}}</td>
                                            <td style="text-align:right;background-color:yellow">&euro;{{calSubTotalTotalAmountEUR() | number : 2}}</td>
                                            <td colspan="15"></td>
                                        </tr>*@
                                        <tr ng-repeat="model in ecommercialinvoices">
                                            <td style="width: 60px; text-align: center">

                                                @if (Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Update, HttpContext.Current) == "disabled")
                                                {
                                                    <a href="@Url.Action("Edit", "ECommercialInvoice")/{{model.eCommercialInvoiceID}}?internalCompanyID={{model.companyID}}" class="btn btn-primary btn-xs font-11" target="_blank"><i class="fa fa-folder-open"></i> View</a>
                                                }
                                                else
                                                {
                                                    <a href="@Url.Action("Edit", "ECommercialInvoice")/{{model.eCommercialInvoiceID}}?internalCompanyID={{model.companyID}}" title="Edit" class="btn btn-primary btn-xs font-11" target="_blank"><i class="fa fa-pencil"></i> Edit</a>
                                                }
                                                <a href="@Url.Action("Overview", "ECommercialInvoice")/{{model.eCommercialInvoiceID}}" title="Over View" class="btn btn-default btn-xs font-11" target="_blank" style="margin-top:3px"><i class="fa fa-eye"></i>View</a>

                                                @*@if (Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Delete, HttpContext.Current) != "disabled")
                                                {
                                                    <a href="javascript:void(0)" ng-click="delete(model.eCommercialInvoiceID)" title="Delete" class="btn btn-danger btn-xs font-11" target="_blank"><i class=" fa fa-times"></i>Del</a>
                                                }*@
                                            </td>
                                            <td style="width:50px; text-align:center"><input type="checkbox" ng-model="model.isSelected" title="check here to select invoices to print" ng-change="itemToggled()" /></td>
                                            <td style="width: 80px; text-align: center">{{model.invoiceNo}}</td>

                                            <td style="width: 90px; text-align: center; ">{{model.invoiceDateFormated}}</td>
                                            <td style="width: 120px;text-align: left;">{{model.proformaInvoiceNo}}</td>
                                            <td style="width: 80px;text-align: center;">{{model.clientUD}}</td>
                                            <td style="width: 200px;">{{model.clientNM}}</td>


                                            <td style="width: 60px; text-align: center">{{model.accountNo}}</td>
                                            <td style="width: 50px; text-align:right">{{model.vatRate | number : 2}}</td>
                                            <td style="width: 80px; text-align: right">{{model.netAmount | number : 2}}</td>
                                            <td style="width: 70px; text-align: right; ">{{model.vatAmount | number : 2}}</td>
                                            <td style="width: 80px; text-align: right; ">{{model.totalAmount | number : 2}}</td>
                                            <td style="width: 60px; text-align: center">{{model.currency}}</td>

                                            <td style="width: 100px; text-align: right">&euro;{{model.netAmountEUR | number : 2}}</td>
                                            <td style="width: 90px; text-align: right; ">&euro;{{model.vatAmountEUR | number : 2}}</td>
                                            <td style="width: 100px; text-align: right; ">&euro;{{model.totalAmountEUR | number : 2}}</td>

                                            <td style="width: 70px; text-align:center">{{model.season}}</td>
                                            <td style="width: 60px; text-align:center">{{model.typeOfInvoiceText}}</td>
                                            <td style="width: 110px; text-align:center">{{model.isConfirmedText}}</td>
                                            <td style="width: 150px;">{{model.lcRefNo}}</td>
                                            <td style="width: 150px;">{{model.refNo}}</td>
                                            <td style="width: 150px;">{{model.blNo}}</td>

                                            <td style="width: 150px;">{{model.factoryInvoiceNo}}</td>




                                            <td style="width: 250px;">{{model.deliveryTerm}}</td>
                                            <td style="width: 250px;">{{model.paymentTerm}}</td>
                                            <td style="width: 100px;">{{model.clientInvoiceNo}}</td>
                                            <td>{{model.conditions}}</td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="frmPrintOption" class="modal fade" style="display: none;">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button aria-hidden="true" data-dismiss="modal" class="close" type="button">
                                ×
                            </button>
                            <h4 id="myModalLabel" class="modal-title">Select season to print</h4>
                        </div>
                        <div class="modal-body smart-form">
                            <fieldset>
                                <div class="row">
                                    <section class="col col-6">
                                        <label>Season</label>
                                        <select class="form-control search-filter" name="season_search" ng-model="filters.Season" ng-options="item.seasonValue as item.seasonText for item in seasons">
                                            <option value=""></option>
                                        </select>
                                    </section>
                                </div>
                            </fieldset>
                        </div>
                        <div class="modal-footer">
                            <button data-dismiss="modal" class="btn btn-default" type="button">
                                Cancel
                            </button>
                            <button class="btn btn-primary" type="button" ng-click="exportExcel($event)">
                                Print
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @Html.Partial("~/Views/ECommercialInvoice/PartialView/BizBloqsImporter.cshtml")

    </article>
</div>

@section FormAction {
<ul id="sparks">
    <li class="sparks-info">
        <a href="javascript:void(0);" class="btn btn-default" title="Search" ng-click="search()"><i class=" fa fa-search"></i></a>
    </li>
    <li class="sparks-info">
        <a href="javascript:void(0);" class="btn btn-default" title="Refresh" ng-click="search()"><i class="fa fa-refresh"></i></a>
    </li>
    <li class="sparks-info">
        <a href="@Url.Action("Init", "ECommercialInvoice")" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Create, HttpContext.Current))" title="New" target="_blank"><i class="fa fa-file-o"></i></a>
    </li>
    <li class="sparks-info">
        <a href="javascript:void(0);" class="btn btn-default" title="Print" ng-click="printInvoice($event,'PDF','InvoicePrint',0)"><i class="fa fa-print"></i></a>
    </li>
    <li class="sparks-info">
        <a href="javascript:void(0);" class="btn btn-default" title="Export Excel" style="color: #31B404" ng-click="openExportExcelForm($event)"><i class="fa fa-file-excel-o"></i></a>
    </li>
    <li class="sparks-info">
        <a href="javascript:void(0);" class="btn btn-default" title="Export Exact Online File" style="color: #ff6a00" ng-click="exportExactOnlineSoftware($event)"><i class="fa fa-file-code-o"></i></a>
    </li>
    <li class="sparks-info">
        <a href="javascript:void(0);" class="btn btn-default" title="Bizbloq Import" style="color: #31B404" ng-click="showBizBloqsForm()"><i class="fa fa-file-code-o"></i></a>
    </li>    
</ul>
}

@section pagejs {
    <script src="~/Views/Ecommercialinvoice/service.js?c=@System.Guid.NewGuid().ToString().Replace("-","")"></script>
    <script type="text/javascript">

    jQuery('.search-filter').keypress(function(e){
        if (e.keyCode == 13) {
            var scope = angular.element(jQuery('body')).scope();
            scope.search();
        }
    });

    var searchResultGrid = jQuery('#searchResult').scrollableTable(
        function(currentPage){
            var scope = angular.element(jQuery('body')).scope();
            scope.$apply(function(){
                scope.pageIndex = currentPage;
                eCommercialInvoiceService.searchFilter.pageIndex = scope.pageIndex;
                scope.search();
            });
        },
        function(sortedBy, sortedDirection){
            var scope = angular.element(jQuery('body')).scope();
            scope.$apply(function(){
                eCommercialInvoiceService.searchFilter.sortedDirection = sortedDirection;
                scope.pageIndex = 1;
                eCommercialInvoiceService.searchFilter.pageIndex = scope.pageIndex;
                eCommercialInvoiceService.searchFilter.sortedBy = sortedBy;
                scope.search();
            });
        }
    );

    eCommercialInvoiceService.serviceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/ecommercialinvoice/';
    eCommercialInvoiceService.supportServiceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/support/';
    eCommercialInvoiceService.token = '@Session[Frontend.Customize.Common.ProjectDefinition.TOKEN_SESSION]';
    eCommercialInvoiceService.searchFilter.pageSize = @System.Configuration.ConfigurationManager.AppSettings["DefaultPageSize"];

    var modelApp = angular.module('tilsoftApp', []);
        modelApp.controller('tilsoftController', ['$scope', '$rootScope', function ($scope, $rootScope) {
        $scope.forms = {
            currentForm: 'Search result form',
            search: 'Search result form',
            bizBloqsImporter: 'Import invoice from BizBloqs'
        };
        $scope.ecommercialinvoices = null;
        $scope.pageIndex = 1;
        $scope.totalPage = 0;
        $scope.filters = {
            InvoiceNo : '',
            ClientUD : '',
            ClientNM : '',
            BLNo : '',
            OrderNo : '',
            ClientInvoiceNo : '',
            TypeOfInvoice : null,
            ContainerNo : '',
            CMRNo : '',
            Season: '@Frontend.Helper.Common.GetCurrentSeason()',
            InternalCompanyID: null,
        };

        $scope.invoiceTypes = null;
        $scope.internalCompany3s = null;
        $scope.seasons = null;

        $scope.sumNetAmountEUR = null;
        $scope.sumVATAmountEUR = null;
        $scope.sumTotalAmountEUR = null;

        //
        // private function defined
        //
            $scope.search = function () {
                $scope.forms.currentForm = $scope.forms.search;
                eCommercialInvoiceService.searchFilter.filters = $scope.filters;
                eCommercialInvoiceService.search(
                    function (data) {
                        $scope.ecommercialinvoices = data.data.data;
                        $scope.invoiceTypes = data.data.invoiceTypes;
                        $scope.internalCompany3s = data.data.internalCompany3s;
                        $scope.seasons = data.data.seasons;

                        $scope.sumNetAmountEUR = data.data.sumNetAmountEUR;;
                        $scope.sumVATAmountEUR = data.data.sumVATAmountEUR;;
                        $scope.sumTotalAmountEUR = data.data.sumTotalAmountEUR;;

                        $scope.totalPage = Math.ceil(data.totalRows / eCommercialInvoiceService.searchFilter.pageSize);
                        $scope.$apply();

                        if(data.totalRows < eCommercialInvoiceService.searchFilter.pageSize) {
                            jQuery('#searchResult').find('ul').hide();
                        }
                        else {
                            jQuery('#searchResult').find('ul').show();
                        }
                        jQuery('#content').show();
                        searchResultGrid.updateLayout();
                        if (data.message.type == 2)
                        {
                            jsHelper.processMessage(data.message);
                            return;
                        }
                    },
                    function (error) {
                        $scope.ecommercialinvoices = null;
                        $scope.pageIndex = 1;
                        $scope.totalPage = 0;
                        $scope.$apply();
                    }
            );
        }

        // function define
        $scope.delete = function (id) {
            if (confirm('Are you sure ?')) {
                eCommercialInvoiceService.delete(id,
                    function (data) {
                        jsHelper.processMessage(data.message);

                        if(data.message.type == 0) {
                            var j = -1;
                            for (var i = 0; i < $scope.ecommercialinvoices.length; i++) {
                                if ($scope.ecommercialinvoices[i].eCommercialInvoiceID == data.data) {
                                    j = i;
                                    break;
                                }
                            }

                            if (j >= 0) {
                                $scope.ecommercialinvoices.splice(j, 1);
                            }

                            $scope.$apply();
                        }
                    },
                    function (error) {
                        jsHelper.showMessage('warning', error);
                    }
                );
            }
        }

        $scope.printInvoice = function ($event, formatType, reportName, invoiceType) {
            $event.preventDefault();
            for(i=0; i< $scope.ecommercialinvoices.length;i++)
            {
                if ($scope.ecommercialinvoices[i].isSelected)
                {
                    eCommercialInvoiceService.printInvoice($scope.ecommercialinvoices[i].eCommercialInvoiceID, formatType, reportName, invoiceType,
                        function (data) {
                            if (data.message.type == 2)
                            {
                                jsHelper.processMessage(data.message);
                                return;
                            }
                            window.open('@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data ,'');
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            }
        }

        //list invoice type use to search filter
        $scope.getInvoiceType = function () {
            eCommercialInvoiceService.getInvoiceType(
                function (data) {
                    $scope.invoiceTypes = data.data;
                    $scope.$apply();
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                    $scope.invoiceTypes = null;
                    $scope.$apply();
                }
            );
        }

        $scope.getSeasons = function () {
            eCommercialInvoiceService.getSeasons(
                function (data) {
                    $scope.seasons = data.data;
                    $scope.$apply();
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                    $scope.seasons = null;
                    $scope.$apply();
                }
            );
        }

        //check all invoice
        $scope.toggleAll = function() {
            var toggleStatus = $scope.isAllSelected;
            angular.forEach($scope.ecommercialinvoices, function(item){ item.isSelected = toggleStatus; });
        }
        $scope.itemToggled = function(){
            $scope.isAllSelected = $scope.ecommercialinvoices.every(function(item){ return item.isSelected; })
        }

        $scope.openExportExcelForm = function ($event) {
            $event.preventDefault();
            $('#frmPrintOption').modal('show');
        }
        $scope.exportExcel = function ($event) {
            $event.preventDefault();
            eCommercialInvoiceService.exportExcel($scope.filters.Season,
                function (data) {
                    jsHelper.processMessage(data.message);
                    if (data.message.type !=2)
                    {
                        window.open('@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data + ".xlsm");
                        }
                    },
                    function (error) {
                        jsHelper.showMessage('warning', error);
                    }
                );
                $('#frmPrintOption').modal('hide');
        }

        $scope.exportExactOnlineSoftware = function ($event) {
            $event.preventDefault();
            ids = '';
            angular.forEach($scope.ecommercialinvoices,function(item){
                if(item.isSelected)
                {
                    ids = ids + item.eCommercialInvoiceID + ',';
                }
            });
            eCommercialInvoiceService.exportExactOnlineSoftware(ids,
                function (data) {
                    jsHelper.processMessage(data.message);
                    if (data.message.type !=2)
                    {
                        window.open('@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data + ".xlsm");
                    }
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        }

        $scope.calSubTotalNetAmountEUR = function () {
            if ($scope.ecommercialinvoices == null) return;
            var total = parseFloat('0');
            angular.forEach($scope.ecommercialinvoices, function (item) {
                total += (JSON.stringify(item.netAmountEUR) == 'null' ? parseFloat('0') : parseFloat(item.netAmountEUR));
            }, total);
            return total;
        },

            $scope.calSubTotalVATAmountEUR = function () {
                if ($scope.ecommercialinvoices == null) return;
                var total = parseFloat('0');
                angular.forEach($scope.ecommercialinvoices, function (item) {
                    total += (JSON.stringify(item.vatAmountEUR) == 'null' ? parseFloat('0') : parseFloat(item.vatAmountEUR));
                }, total);
                return total;
            },

            $scope.calSubTotalVATAmountEUR = function () {
                if ($scope.ecommercialinvoices == null) return;
                var total = parseFloat('0');
                angular.forEach($scope.ecommercialinvoices, function (item) {
                    total += (JSON.stringify(item.vatAmountEUR) == 'null' ? parseFloat('0') : parseFloat(item.vatAmountEUR));
                }, total);
                return total;
            },

            $scope.calSubTotalTotalAmountEUR = function () {
                if ($scope.ecommercialinvoices == null) return;
                var total = parseFloat('0');
                angular.forEach($scope.ecommercialinvoices, function (item) {
                    total += (JSON.stringify(item.totalAmountEUR) == 'null' ? parseFloat('0') : parseFloat(item.totalAmountEUR));
                }, total);
                return total;
            },

            $scope.showBizBloqsForm = function () {                
                $rootScope.$emit('bizBloqForm');
            }


        //
        // INIT
        //

        $scope.search();
    }]);
    </script>
    <script src="~/Views/ECommercialInvoice/PartialView/BizBloqsImporter.js?c=@System.Guid.NewGuid().ToString().Replace("-","")"></script>
}
