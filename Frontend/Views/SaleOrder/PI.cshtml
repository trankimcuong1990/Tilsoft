@{
    ViewBag.Title = "Search PI";
    ViewBag.Module = "Proforma Invoice";
}

<div class="row">

    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        
        <div class="jarviswidget jarviswidget-color-darken" id="wid-id-search-result" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                <h2>PI Search Result</h2>
            </header>

            <div>
                <div class="jarviswidget-editbox"></div>
                <div class="widget-body">
                    <div id="saleOrder" avs-scroll grid-handler="gridHandler" class="tilsoft-table-wrapper" >
                        <div class="tilsoft-table">
                            <div class="tilsoft-table-header" style="width: 4200px;">
                                <div style="width: 110px;"></div>
                                <div style="width: 50px;"></div>
                                <div style="width: 130px;" class="sorting" data-colname="orderType">Order Type</div>
                                <div style="width: 90px;" class="sorting" data-colname="season">Season</div>
                                <div style="width: 80px;" class="sorting" data-colname="proformaInvoiceNo">Prof.No TILSOFT</div>
                                <div style="width: 80px;" class="sorting" data-colname="proformaInvoiceNo">Prof.No OMS</div>
                                <div style="width: 150px;" class="sorting" data-colname="invoiceDateFormated">Invoice Date</div>
                                <div style="width: 50px;" class="sorting" data-colname="saleOrderVersion">Ver sion</div>
                                <div style="width: 100px;" class="sorting" data-colname="trackingStatusNM">Status</div>
                                <div style="width: 100px;" class="sorting" data-colname="ispiReceived">Signed PI Received</div>
                                <div style="width: 180px;" class="sorting" data-colname="piReceiver">Signed PI Received By</div>
                                <div style="width: 90px;" class="sorting" data-colname="piReceivedDateFormated">Date Received</div>
                                <div style="width: 250px;" class="sorting" data-colname="piReceivedRemark">PI Received Remark</div>
                                <div style="width: 90px;" class="sorting" data-colname="ldsFormated">LDS</div>
                                <div style="width: 300px;" class="sorting" data-colname="reference">Reference</div>
                                <div style="width: 300px;" class="sorting" data-colname="conditions">Conditions</div>
                                <div style="width: 90px;" class="sorting" data-colname="deliveryDateFormated">Delivery Date</div>
                                <div style="width: 90px;" class="sorting" data-colname="deliveryDateInternalFormated">Delivery Date Internal</div>
                                <div style="width: 250px;" class="sorting" data-colname="paymentTermNM">Payment Term</div>
                                <div style="width: 250px;" class="sorting" data-colname="paymentTypeNM">Payment Type</div>
                                <div style="width: 250px;" class="sorting" data-colname="deliveryTermNM">Delivery Term</div>
                                <div style="width: 250px;" class="sorting" data-colname="deliveryTypeNM">Delivery Type</div>
                                <div style="width: 150px;" class="sorting" data-colname="creatorName">Created By</div>
                                <div style="width: 90px;" class="sorting" data-colname="createdDateFormated">Created Date</div>
                                <div style="width: 150px;" class="sorting" data-colname="updatorName">Updated By</div>
                                <div style="width: 90px;" class="sorting" data-colname="updatedDateFormated">Updated Date</div>
                                <div class="sorting" data-colname="remark">Remark</div>
                            </div>
                            <div class="tilsoft-table-filter" style="width: 4200px; margin-top:50px">
                                <div style="width: 110px;">
                                    <a href="javascript:void(0)" class="btn btn-default btn-xs" title="Clear Filter" ng-click="clearFilter()"><i class="fa fa-ban"></i></a>
                                </div>
                                <div style="width: 50px;"></div>
                                <div style="width: 130px;">
                                    <select class="form-control" ng-model="searchField.orderType">
                                        <option value=""></option>
                                        <option value="WAREHOUSE">WAREHOUSE</option>
                                        <option value="FACTORY">FACTORY</option>
                                    </select>
                                </div>
                                <div style="width: 90px;">
                                    <select class="form-control search-filter" ng-model="searchField.season" ng-options="season.seasonValue as season.seasonText for season in seasons">
                                        <option value=""></option>
                                    </select>
                                </div>
                                <div style="width: 80px;">
                                    <input class="form-control" type="text" id="reference" ng-model="searchField.piNoTilfSoft" autocomplete="off">
                                </div>
                                <div style="width: 80px;">
                                    <input class="form-control" type="text" id="reference" ng-model="searchField.piNoOms" autocomplete="off">
                                </div>
                                <div style="width: 150px;">
                                    <input type="text" class="datepicker form-control" data-dateformat="dd/mm/yy" ng-model="searchField.invoiceDate">
                                </div>
                                <div style="width: 50px;" ></div>
                                <div style="width: 100px;">
                                    <select class="form-control search-filter" ng-model="searchField.status" ng-options="saleOrderSattu.trackingStatusNM as saleOrderSattu.trackingStatusNM for saleOrderSattu in saleOrderSattus">
                                        <option value=""></option>
                                    </select>
                                </div>
                                <div style="width: 100px;">
                                    <select class="form-control" ng-model="searchField.signedPI">
                                        <option value=""></option>
                                        <option value="true">YES</option>
                                        <option value="false">NO</option>
                                    </select>
                                </div>
                                <div style="width: 180px;"></div>
                                <div style="width: 90px;" ></div>
                                <div style="width: 250px;" ></div>
                                <div style="width: 90px;" ></div>
                                <div style="width: 300px;" ></div>
                                <div style="width: 300px;" ></div>
                                <div style="width: 90px;" ></div>
                                <div style="width: 90px;" ></div>
                                <div style="width: 250px;" ></div>
                                <div style="width: 250px;" ></div>
                                <div style="width: 250px;" ></div>
                                <div style="width: 250px;" ></div>
                                <div style="width: 150px;" ></div>
                                <div style="width: 90px;" ></div>
                                <div style="width: 150px;" ></div>
                                <div style="width: 90px;" ></div>
                                <div></div>
                            </div>
                            <div class="tilsoft-table-body" style="width: 4200px; margin-top:95px">
                                <table>
                                    <tbody ng-repeat="item in saleorder | searchPI:searchField">
                                        <tr>
                                            <td style="width: 110px; text-align: center; ">
                                                @if (Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Update, HttpContext.Current) == "disabled")
                                                {
                                                    <a class="btn btn-primary btn-xs font-11" href="@Url.Action("Edit", "SaleOrder")/{{item.saleOrderID}}/@ViewBag.OfferID" title="View (Read Only)"><i class="fa fa-folder-open"></i>View</a>
                                                }
                                                else
                                                {
                                                    <a class="btn btn-primary btn-xs font-11" href="@Url.Action("Edit", "SaleOrder")/{{item.saleOrderID}}/@ViewBag.OfferID" title="Edit"><i class="fa fa-pencil"></i>Edit</a>
                                                }

                                                @*@if (Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Delete, HttpContext.Current) != "disabled")
                                                {
                                                    <a class="btn btn-danger btn-xs font-11" href="#" ng-click="deletePI(item.saleOrderID)" title="Delete"><i class="fa fa-times"></i>Del</a>
                                                }*@
                                                <a href="#" class="btn btn-primary btn-xs font-11" title="View product detail"  ng-click="searchSaleOrderDetail($event,item.saleOrderID)"><i id="icon-view-detail-{{item.saleOrderID}}" class="fa fa-plus-square-o"></i> View</a>
                                            </td>
                                            <td style="width: 50px; text-align: center"><input type="checkbox" ng-model="item.isSelected" value="false"/></td>
                                            <td style="width: 130px; ">{{item.orderType}}</td>
                                            <td style="width: 90px;">{{item.season}}</td>
                                            <td style="width: 80px;">{{item.proformaInvoiceNo}}</td>
                                            <td style="width: 80px;">{{item.v4piNo}}</td>
                                            <td style="width: 150px; ">{{item.invoiceDateFormated}}</td>
                                            <td style="width: 50px; ">{{item.saleOrderVersion}}</td>
                                            <td style="width: 100px;">{{item.trackingStatusNM}}</td>
                                            <td style="width: 100px;" align="center"><input type="checkbox" ng-model="item.ispiReceived" /></td>
                                            <td style="width: 180px;">{{item.piReceiver}}</td>
                                            <td style="width: 90px;">{{item.piReceivedDateFormated}}</td>
                                            <td style="width: 250px;">{{item.piReceivedRemark}}</td>
                                            <td style="width: 90px;">{{item.ldsFormated}}</td>
                                            <td style="width: 300px;">{{item.reference}}</td>
                                            <td style="width: 300px;">{{item.conditions}}</td>
                                            <td style="width: 90px;">{{item.deliveryDateFormated}}</td>
                                            <td style="width: 90px;">{{item.deliveryDateInternalFormated}}</td>
                                            <td style="width: 250px;">{{item.paymentTermNM}}</td>
                                            <td style="width: 250px;">{{item.paymentTypeNM}}</td>
                                            <td style="width: 250px;">{{item.deliveryTermNM}}</td>
                                            <td style="width: 250px;">{{item.deliveryTypeNM}}</td>
                                            <td style="width: 150px;">{{item.creatorName}}</td>
                                            <td style="width: 90px;">{{item.createdDateFormated}}</td>
                                            <td style="width: 150px;">{{item.updatorName}}</td>
                                            <td style="width: 90px;">{{item.updatedDateFormated}}</td>
                                            <td>{{item.remark}}</td>
                                        </tr>

                                        <tr style="display:none" id="{{item.saleOrderID}}">
                                            <td></td>
                                            <td colspan="25">
                                                <div class="tilsoft-table">
                                                    <div class="tilsoft-table-header" style="width: 2000px;">
                                                        <div style="width: 220px;" class="sorting" data-colname="articleCode">Article Code</div>
                                                        <div style="width: 400px;" class="sorting" data-colname="description">Desciption</div>
                                                        <div style="width: 60px; " class="sorting" data-colname="quantity">Offer Qnt</div>
                                                        <div style="width: 70px; " class="sorting" data-colname="physicalQnt">Physi cal</div>
                                                        <div style="width: 70px; " class="sorting" data-colname="onSeaQnt">on Sea</div>
                                                        <div style="width: 70px; " class="sorting" data-colname="tobeShippedQnt">tobe Shipped</div>
                                                        <div style="width: 70px; " class="sorting" data-colname="reservationQnt">reser vation</div>
                                                        <div style="width: 70px; " class="sorting" data-colname="ftsQnt">FTS</div>
                                                        <div style="width: 70px;" class="sorting" data-colname="orderQnt">Order Qnt</div>
                                                        <div style="width: 100px; " class="sorting" data-colname="unitPrice">Unit Price</div>
                                                        <div style="width: 150px;" class="sorting" data-colname="clientArticleCode">Client Article Code</div>
                                                        <div style="width: 250px; " class="sorting" data-colname="clientArticleName">Client Article Name</div>
                                                        <div style="width: 150px;" class="sorting" data-colname="clientOrderNumber">Client Order Number</div>
                                                        <div style="width: 150px;" class="sorting" data-colname="clientEANCode">Client EAN Code</div>
                                                        <div class="sorting" data-colname="reference">Reference</div>

                                                    </div>
                                                    <div class="tilsoft-table-body" style="width: 2000px; height:auto">
                                                        <table>
                                                            <tr ng-repeat="item_detail in item.saleOrderDetailSearchs">
                                                                <td style="width: 220px; ">{{item_detail.articleCode}}</td>
                                                                <td style="width: 400px;">{{item_detail.description}}</td>
                                                                <td style="width: 60px; text-align: right; ">{{item_detail.quantity | number}}</td>
                                                                <td style="width: 70px; text-align: right; ">{{item_detail.physicalQnt | number}}</td>
                                                                <td style="width: 70px; text-align: right; ">{{item_detail.onSeaQnt | number}}</td>
                                                                <td style="width: 70px; text-align: right; ">{{item_detail.tobeShippedQnt | number}}</td>
                                                                <td style="width: 70px; text-align: right; ">{{item_detail.reservationQnt | number}}</td>
                                                                <td style="width: 70px; text-align: right; ">{{item_detail.ftsQnt | number}}</td>
                                                                <td style="width: 70px; text-align: right; ">{{item_detail.orderQnt | number}}</td>
                                                                <td style="width: 100px; text-align: right; ">{{item_detail.unitPrice | number:2}}</td>
                                                                <td style="width: 150px;">{{item_detail.clientArticleCode}}</td>
                                                                <td style="width: 250px;">{{item_detail.clientArticleName}}</td>
                                                                <td style="width: 150px;">{{item_detail.clientOrderNumber}}</td>
                                                                <td style="width: 150px;">{{item_detail.clientEANCode}}</td>
                                                                <td>{{item_detail.reference}}</td>
                                                            </tr>
                                                        </table>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>


                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </article>

</div>

<div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="frmNewPI" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="margin-top:90px !important">
            <div class="modal-header">
                <button aria-hidden="true" data-dismiss="modal" class="close" type="button">
                    ×
                </button>
                <h4 class="modal-title">Create new P/I</h4>
            </div>
            <div class="modal-body smart-form" style="padding: 0px;">
                <div>
                    <div class="widget-body">
                        <fieldset>
                            <section>
                                <label class="label">Order Type</label>
                                <label class="select">
                                    <select class="form-control" ng-model="orderType" ng-options="item.orderTypeValue as item.orderTypeText for item in orderTypes">
                                        <option></option>
                                    </select>
                                    <i></i>
                                </label>
                            </section>
                        </fieldset>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" ng-click="frmNewPI_onOKClick()">
                    Create P/I
                </button>
                <button type="button" class="btn btn-default" data-dismiss="modal">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

@section FormAction {
    <ul id="sparks">
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Search" ng-click="search()"><i class=" fa fa-search"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Refresh" ng-click="search()"><i class="fa fa-refresh"></i></a>
        </li>
        <li class="sparks-info">
            @*<a href="@Url.Action("Edit", "SaleOrder")/0/@ViewBag.OfferID" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Create, HttpContext.Current))" title="New"><i class="fa fa-file-o"></i></a>*@
            <a href="javascript:void(0)" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Create, HttpContext.Current))" title="New" ng-click="newPI(e)"><i class="fa fa-file-o"></i></a>
        </li>
        
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Confirm" style="color: #0066ff; " ng-click="confirm($event,false)"><i class="fa fa-check"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Confirm without signed" style="color: #0066ff; " ng-click="confirm($event,true)"><i class="fa fa-check-square-o"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Revise" style="color: #ff0000;" ng-click="revise($event)"><i class="fa fa-reply"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Delete" style="color: #ff0000;" ng-click="delete($event)"><i class="fa fa-times"></i></a>
        </li>

        <li class="sparks-info">
            <a href="@Url.Action("Edit", "OfferToClientMng")/@ViewBag.OfferID?ClientID={{linkInfos.clientID}}&season={{linkInfos.season}}&currency={{linkInfos.currency}}" class="btn btn-default" title="Go to offer" style="color: #0066ff;" target="_blank"><i class="fa fa-arrow-left"></i></a>
        </li>
    </ul>
}

@section pagejs {
    <script src="~/Angular/app/saleorder/service.js?c=@System.Guid.NewGuid().ToString().Replace("-", "")"></script>
    <script type="text/javascript">
        //// config data table
        jQuery('#saleOrderTable').furnindoTableSortAtClient();
        jQuery('#saleOrderDetailTable').furnindoTableSortAtClient();
        //// end config data table

        saleOrderService.serviceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/saleOrder/';
        saleOrderService.token = '@Session[Frontend.Customize.Common.ProjectDefinition.TOKEN_SESSION]';

        var modelApp = angular.module('tilsoftApp', []);
        modelApp.filter('searchPI', function () {
            return function (data, strFilter) {
                debugger;
                // If no data is given, exit.
                if (!data) {
                    return;
                }
                else {
                    var type, season, piNoTs, piNoOms, invoiceDate, status, signedPI ;
                    // Convert filter text to lower case.
                    if (strFilter.orderType) {
                        type = strFilter.orderType.toLowerCase();
                    }
                    if (strFilter.season) {
                        season = strFilter.season.toLowerCase();
                    }
                    if (strFilter.piNoTilfSoft) {
                        piNoTs = strFilter.piNoTilfSoft.toLowerCase();
                    }
                    if (strFilter.piNoOms) {
                        piNoOms = strFilter.piNoOms.toLowerCase();
                    }
                    if (strFilter.invoiceDate) {
                        invoiceDate = strFilter.invoiceDate.toLowerCase();
                    }
                    if (strFilter.status) {
                        status = strFilter.status.toLowerCase();
                    }
                    if (strFilter.signedPI) {
                        signedPI = (strFilter.signedPI == "true");
                    }

                    return data.filter(function (item) {
                        var orderTypeStatus, seasonStatus, piNoTsStatus, piNoOmsStatus, invoiceDateStatus, statusStatus, signedPIStatus;

                        if (strFilter.orderType != null && strFilter.orderType != "") {
                            orderTypeStatus = item.orderType.toLowerCase().indexOf(type) > -1;
                        }
                        else {
                            orderTypeStatus = true;
                        }

                        if (strFilter.season != null && strFilter.season != "") {
                            seasonStatus = item.season.toLowerCase().indexOf(season) > -1;
                        }
                        else {
                            seasonStatus = true;
                        }

                        if (strFilter.piNoTilfSoft != null && strFilter.piNoTilfSoft != "") {
                            piNoTsStatus = item.proformaInvoiceNo.toLowerCase().indexOf(piNoTs) > -1;
                        }
                        else {
                            piNoTsStatus = true;
                        }

                        if (strFilter.piNoOms != null && strFilter.piNoOms != "") {
                            piNoOmsStatus = item.v4piNo.toLowerCase().indexOf(piNoOms) > -1;
                        }
                        else {
                            piNoOmsStatus = true;
                        }

                        if (strFilter.invoiceDate != null && strFilter.invoiceDate != "") {
                            invoiceDateStatus = item.invoiceDateFormated.toLowerCase().indexOf(invoiceDate) > -1;
                        }
                        else {
                            invoiceDateStatus = true;
                        }

                        if (strFilter.signedPI != null && strFilter.signedPI != "") {
                            signedPIStatus = (item.ispiReceived == signedPI);
                            if (item.ispiReceived == null && signedPI == false) {
                                signedPIStatus = true;
                            }
                        }
                        else {
                            signedPIStatus = true;
                        }

                        if (strFilter.status != null && strFilter.status != "") {
                            statusStatus = item.trackingStatusNM.toLowerCase().indexOf(status) > -1;
                        }
                        else {
                            statusStatus = true;
                        }

                        //Check status
                        if (orderTypeStatus && seasonStatus && piNoTsStatus && piNoOmsStatus && invoiceDateStatus && statusStatus && signedPIStatus) {
                            return true;
                        }
                        else {
                            return false;
                        }
                    });
                }
            }
        })

        modelApp.controller('tilsoftController', ['$scope', function ($scope) {
            $scope.saleorder = null;
            $scope.saleorderdetail = null;
            $scope.orderTypes = null;
            $scope.orderType = null;

            $scope.searchField = {
                orderType : '',
                season: '',
                piNoTilfSoft: '',
                piNoOms: '',
                invoiceDate: '',
                status: '',
                signedPI: ''
            }

            $scope.clearFilter = function(){
                $scope.searchField = {
                    orderType: '',
                    season: '',
                    piNoTilfSoft: '',
                    piNoOms: '',
                    invoiceDate: '',
                    status: '',
                    signedPI: ''
                }
            }
                        
            $scope.search = function () {
                saleOrderService.search_saleOrder(@ViewBag.OfferID,
                    function (data) {
                        $scope.saleorder = data.data.data;
                        $scope.orderTypes = data.data.orderTypes;
                        $scope.linkInfos = data.data.linkInfos;
                        $scope.seasons = data.data.seasons;
                        $scope.saleOrderSattus = data.data.saleOrderStatusDTOs;
                        $scope.$apply();
                        jQuery('#content').show();
                    },
                    function (error) {
                        $scope.saleorder = null;
                        $scope.$apply();
                    }
                );
            }

            $scope.searchSaleOrderDetail = function ($event,saleOrderID) {
                $event.preventDefault();
                
                var arr = $scope.saleorder.filter(function(o){ return o.saleOrderID == saleOrderID});
                saleOrderService.search_saleOrderDetail(saleOrderID,
                    function (data) {
                        arr[0].saleOrderDetailSearchs = data.data;
                        $scope.$apply();

                        $("#"+ saleOrderID).toggle();
                        //$("#icon-view-detail-"+ saleOrderID).toggleClass("fa-minus");
                        if ($("#icon-view-detail-" + saleOrderID).hasClass('fa-plus-square-o'))
                        {
                            $("#icon-view-detail-" + saleOrderID).removeClass('fa-plus-square-o');
                            $("#icon-view-detail-" + saleOrderID).addClass('fa-minus-square-o');
                        }
                        else  if ($("#icon-view-detail-" + saleOrderID).hasClass('fa-minus-square-o'))
                        {
                            $("#icon-view-detail-" + saleOrderID).removeClass('fa-minus-square-o');
                            $("#icon-view-detail-" + saleOrderID).addClass('fa-plus-square-o');
                        }
                    },
                    function (error) {
                        $scope.saleorder = null;
                        $scope.$apply();
                    }
                );
            }

            $scope.deletePI = function (id) {
                if (confirm('Are you sure ?')) {
                    saleOrderService.delete(id,
                        function (data) {
                            jsHelper.processMessage(data.message);

                            if(data.message.type == 0) {
                                var j = -1;
                                for (var i = 0; i < $scope.saleorder.length; i++) {
                                    if ($scope.saleorder[i].saleOrderID == data.data) {
                                        j = i;
                                        break;
                                    }
                                }

                                if (j >= 0) {
                                    $scope.saleorder.splice(j, 1);
                                }

                                $scope.$apply();
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            }


            $scope.confirm = function ($event,withoutSigned) {
                if (confirm('Are you sure you want to confirm?')) {
                    var selectedorder = $scope.saleorder.filter(function(o){ return o.isSelected == true});
                    var selected_ids = [];
                    $(selectedorder).each(function(){
                        selected_ids.push(this.saleOrderID)
                    });
                    //confirm
                    saleOrderService.multi_confirm(selected_ids,withoutSigned,
                        function (data) {
                            jsHelper.processMessage(data.message);
                            for(i = 0; i < data.data.length; i++)
                            {
                                var success_pi = $scope.saleorder.filter(function(o){ return o.saleOrderID == data.data[i]});
                                success_pi[0].trackingStatusNM = 'CONFIRMED';
                                success_pi[0].isSelected = false;
                            }
                            $scope.$apply();
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            }

            $scope.revise = function ($event) {
                if (confirm('Are you sure you want to revise?')) {
                    var selectedorder = $scope.saleorder.filter(function(o){ return o.isSelected == true});
                    var selected_ids = [];
                    $(selectedorder).each(function(){
                        selected_ids.push(this.saleOrderID)
                    });
                    //confirm
                    saleOrderService.multi_revise(selected_ids,
                        function (data) {
                            jsHelper.processMessage(data.message);
                            for(i = 0; i < data.data.length; i++)
                            {
                                var success_pi = $scope.saleorder.filter(function(o){ return o.saleOrderID == data.data[i]});
                                success_pi[0].trackingStatusNM = 'REVISED';
                                success_pi[0].isSelected = false;
                            }
                            $scope.$apply();
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            }

            $scope.delete = function ($event) {
                if (confirm('Are you sure you want to delete?')) {
                    var selectedorder = $scope.saleorder.filter(function(o){ return o.isSelected == true});
                    var selected_ids = [];
                    $(selectedorder).each(function(){
                        selected_ids.push(this.saleOrderID)
                    });
                    //confirm
                    saleOrderService.multi_delete(selected_ids,
                        function (data) {
                            jsHelper.processMessage(data.message);
                            for(k = 0; k < data.data.length; k++)
                            {
                                var j = -1;
                                for (var i = 0; i < $scope.saleorder.length; i++) {
                                    if ($scope.saleorder[i].saleOrderID == data.data[k]) {
                                        j = i;
                                        break;
                                    }
                                }

                                if (j >= 0) {
                                    $scope.saleorder.splice(j, 1);
                                }
                            }
                            $scope.$apply();
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            }

            $scope.newPI = function (e) {
                saleOrderService.getOfferTrackingStatus('@ViewBag.OfferID',
                    function (data) {
                        offerTrackingStatusID = data.data;
                        if (offerTrackingStatusID === 3 || offerTrackingStatusID === 5) {
                            //window.open('@Url.Action("Edit", "SaleOrder", new  {id = UrlParameter.Optional, id2 = UrlParameter.Optional })/' + 0 + '/' + '@ViewBag.OfferID', '');
                            $scope.orderType = null;
                            $('#frmNewPI').modal('show');
                        }
                        else{
                            jsHelper.showMessage('warning', 'Offer should be confimred before create new  PI');
                        }
                    },
                    function (error) {
                        return false;
                    }
                );
        }
        $scope.frmNewPI_onOKClick = function () {
            if ($scope.orderType) {
                window.open('@Url.Action("Edit", "SaleOrder", new  {id = UrlParameter.Optional, id2 = UrlParameter.Optional })/' + 0 + '/' + '@ViewBag.OfferID?t=' + $scope.orderType, '');
            }
            else {
                alert('Please select order type to continue!');
            }
        }


            //$scope.sortAtClient = function ($event) {
            //    $event.preventDefault();
            //    colName = jQuery($event.target).data('colname');
            //    tableId = jQuery($event.target).data('tableid')
                                
            //    if (tableId =="saleOrderTable")
            //    {
            //        datasource = $scope.saleorder;
            //    }
            //    else if(tableId =="saleOrderDetailTable")
            //    {
            //        datasource = $scope.saleorderdetail;
            //    }
                
            //    if (jQuery($event.target).hasClass('sorting_asc')) {
            //        datasource.sort(function(a,b){
            //            return a[colName] > b[colName] ? 1: -1;
            //        });
            //    }
            //    else if (jQuery($event.target).hasClass('sorting_desc') || jQuery($event.target).hasClass('sorting')) {
            //        datasource.sort(function(a,b){
            //            return a[colName] < b[colName] ? 1: -1;
            //        });
            //    }
            //}

            //
            // INIT
            //
            $scope.search();
        }]);
    </script>
}
