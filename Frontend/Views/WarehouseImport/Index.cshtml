@{
    ViewBag.Title = "Search Import Receipt";
    ViewBag.Module = "Import Receipt";
}

<div class="row">
    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="jarviswidget jarviswidget-color-darken" id="wid-id-search-filter" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                <h2>Search Filters</h2>
            </header>

            <div>
                <div class="widget-body">
                    <div class="row">
                        <div class="col-sm-2 m-bottom-15">
                            <label>Receipt No</label>
                            <input class="form-control" type="text" ng-model="filters.ReceiptNo">
                        </div>
                        <div class="col-sm-2 m-bottom-15">
                            <label>PI</label>
                            <input class="form-control" type="text" ng-model="filters.ProformaInvoiceNo">
                        </div>
                        <div class="col-sm-2 m-bottom-15">
                            <label>Ref#</label>
                            <input class="form-control" type="text" ng-model="filters.RefNo">
                        </div>
                        <div class="col-sm-2 m-bottom-15">
                            <label>Type</label>
                            <select class="form-control" name="ImportTypeID" ng-model="filters.ImportTypeID" ng-options="type.importTypeID as type.importTypeNM for type in importTypes" required>
                                <option value=""></option>
                            </select>
                        </div>
                        <div class="col-sm-2 m-bottom-15">
                            <label>Client Code</label>
                            <input class="form-control" type="text" ng-model="filters.ClientUD">
                        </div>
                        <div class="col-sm-2 m-bottom-15">
                            <label>Client Name</label>
                            <input class="form-control" type="text" ng-model="filters.ClientNM">
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-sm-2 m-bottom-15">
                            <label>B/L</label>
                            <input class="form-control" type="text" ng-model="filters.BLNo">
                        </div>
                        <div class="col-sm-2 m-bottom-15">
                            <label>Container No</label>
                            <input class="form-control" type="text" ng-model="filters.ContainerNo">
                        </div>
                        <div class="col-sm-2 m-bottom-15">
                            <label>Art.Code</label>
                            <input class="form-control" type="text" ng-model="filters.ArticleCode">
                        </div>
                        <div class="col-sm-6 m-bottom-15">
                            <label>Description</label>
                            <input class="form-control" type="text" ng-model="filters.Description">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="jarviswidget jarviswidget-color-darken" id="wid-id-search-result" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                <h2>Search Result</h2>
            </header>

            <div>
                <div class="jarviswidget-editbox"></div>

                <div class="widget-body">
                    <div class="table-responsive" id="wareHouseImportTable">
                        <div avs-scroll grid-handler="gridHandler" id="searchResult" class="tilsoft-table-wrapper">
                            <div class="tilsoft-table">
                                <div class="tilsoft-table-header" style="width: 1300px;">
                                    <div style="width: 110px;"></div>
                                    <div style="width: 100px" data-colname="IsConfirmed">Confirmed</div>
                                    <div style="width: 100px;" class="sorting" data-colname="ReceiptNo">Receipt No</div>
                                    <div style="width: 100px;" class="sorting" data-colname="Season">Season</div>
                                    <div style="width: 120px;" class="sorting" data-colname="ImportTypeNM">Type</div>
                                    <div style="width: 100px;" class="sorting_asc" data-colname="ImportedDate">Imported Date</div>
                                    <div style="width: 100px;" class="sorting" data-colname="UpdatedDate">Updated Date</div>
                                    <div style="width: 150px;" class="sorting" data-colname="UpdatorName">Updated By</div>
                                    <div style="width: 100px;" class="sorting" data-colname="ConfirmedDate">Confirmed Date</div>
                                    <div style="width: 150px;" class="sorting" data-colname="ConfirmerName">Confirmed By</div>
                                    <div class="sorting" data-colname="Remark">Remark</div>
                                </div>
                                <div class="tilsoft-table-body" style="width: 1300px;">
                                    <table>
                                        <tr ng-repeat="model in data">
                                            <td style="text-align: center; width: 110px;">

                                                @if (Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Update, HttpContext.Current) != "disabled")
                                                {
                                                    <a ng-if="model.importTypeID == 1" href="@Url.Action("Free", "WarehouseImport")/{{model.warehouseImportID}}" title="Edit" class="btn btn-primary btn-xs font-11" target="_blank"><i class="fa fa-pencil"></i>Edit</a>
                                                    <a ng-if="model.importTypeID == 2" href="@Url.Action("Reservation", "WarehouseImport")/{{model.warehouseImportID}}" title="Edit" class="btn btn-primary btn-xs font-11" target="_blank"><i class="fa fa-pencil">Edit</i></a>
                                                    <a ng-if="model.importTypeID == 3" href="@Url.Action("Return", "WarehouseImport")/{{model.warehouseImportID}}" title="Edit" class="btn btn-primary btn-xs font-11" target="_blank"><i class="fa fa-pencil"></i>Edit</a>
                                                }
                                                else
                                                {
                                                    <a ng-if="model.importTypeID == 1" href="@Url.Action("Free", "WarehouseImport")/{{model.warehouseImportID}}" title="View (Read Only)" class="btn btn-primary btn-xs font-11" target="_blank"><i class="fa fa-folder-open">View</i></a>
                                                    <a ng-if="model.importTypeID == 2" href="@Url.Action("Reservation", "WarehouseImport")/{{model.warehouseImportID}}" title="View (Read Only)" class="btn btn-primary btn-xs font-11" target="_blank"><i class="fa fa-folder-open">View</i></a>
                                                    <a ng-if="model.importTypeID == 3" href="@Url.Action("Return", "WarehouseImport")/{{model.warehouseImportID}}" title="View (Read Only)" class="btn btn-primary btn-xs font-11" target="_blank"><i class="fa fa-folder-open">View</i></a>
                                                }

                                                @if (Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Delete, HttpContext.Current) != "disabled")
                                                {
                                                    @*<a href="#" ng-click="delete(model.warehouseImportID)" title="Delete"><i class="fa fa-times-circle grid-button"></i></a>*@
                                                    <a href="javascript:void(0)" ng-click="delete(model.warehouseImportID)" title="Delete" class="btn btn-danger btn-xs font-11"><i class=" fa fa-times"></i>Del</a>
                                                }
                                            </td>
                                            <td style="text-align: center; width: 100px;"><input type="checkbox" disabled ng-model="model.isConfirmed" /></td>
                                            <td style="width: 100px;">{{model.receiptNo}}</td>
                                            <td style="width: 100px;">{{model.season}}</td>
                                            <td style="width: 120px;">{{model.importTypeNM}}</td>
                                            <td style="width: 100px;">{{model.importedDate}}</td>
                                            <td style="width: 100px;">{{model.updatedDate}}</td>
                                            <td style="width: 150px;">
                                                <a ng-if="model.updatedBy" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{model.updatedBy}}" data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                                    <i class="fa fa-user"></i>
                                                    {{model.updatorName}}
                                                </a>
                                            </td>
                                            <td style="width: 100px;">{{model.confirmedDate}}</td>
                                            <td style="width: 150px;">
                                                <a ng-if="model.confirmedBy" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{model.confirmedBy}}" data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                                    <i class="fa fa-user"></i>
                                                    {{model.confirmerName}}
                                                </a>
                                            </td>
                                            <td>{{model.remark}}</td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </article>
</div>

@section FormAction {
    <ul id="sparks">
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Search" ng-click="event.search()"><i class="fa fa-search"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Refresh" ng-click="event.search()"><i class="fa fa-refresh"></i></a>
        </li>
        <li class="sparks-info">
            <a href="@Url.Action("SelectType", "WarehouseImport")" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Create, HttpContext.Current))" title="New" target="_blank"><i class="fa fa-file-o"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default disabled" title="Print"><i class="fa fa-print"></i></a>
        </li>
    </ul>
}

@section pagejs {
    <script src="~/Angular/app/jsonService.js?c=@System.Guid.NewGuid().ToString().Replace("-", "")"></script>
    <script src="~/Angular/app/WarehouseImport/service.js"></script>
    <script type="text/javascript">
        /*
        var searchResultGrid = jQuery('#searchResult').scrollableTable(
            function(currentPage){
                var scope = angular.element(jQuery('body')).scope();
                scope.$apply(function(){
                    scope.pageIndex = currentPage;
                    warehouseImportService.searchFilter.pageIndex = scope.pageIndex;
                    scope.search();
                });
            },
            function(sortedBy, sortedDirection){
                var scope = angular.element(jQuery('body')).scope();
                scope.$apply(function(){
                    warehouseImportService.searchFilter.sortedDirection = sortedDirection;
                    scope.pageIndex = 1;
                    warehouseImportService.searchFilter.pageIndex = scope.pageIndex;
                    warehouseImportService.searchFilter.sortedBy = sortedBy;
                    scope.search();
                });
            }
        );
        */

        warehouseImportService.serviceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/warehouseimport/';
        warehouseImportService.token = '@Session[Frontend.Customize.Common.ProjectDefinition.TOKEN_SESSION]';
        warehouseImportService.searchFilter.pageSize = @System.Configuration.ConfigurationManager.AppSettings["DefaultPageSize"];

        var cookieId = '@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString()';

        var warehouseImportApp = angular.module('tilsoftApp', ['ngCookies', 'avs-directives']);
        warehouseImportApp.controller('tilsoftController', ['$scope', '$cookieStore', function ($scope, $cookieStore) {
            $scope.data = [];

            $scope.filters = {
                ReceiptNo: '',
                ProformaInvoiceNo: '',
                RefNo: '',
                ImportTypeID: '',
                ClientUD: '',
                ClientNM: '',
                BLNo: '',
                ContainerNo: '',
                ArticleCode: '',
                Description: ''
            };

            $scope.importTypes = null;

            $scope.pageIndex = 1;
            $scope.totalPage = 0;
            $scope.totalRows = 0;

            var cookieValue = $cookieStore.get(cookieId);
            if (cookieValue) {
                $scope.filters = cookieValue;
            }

            //
            // event defined
            //
            $scope.event = {
                search: function(){
                    $scope.data = [];
                    $scope.pageIndex = 1 ;
                    warehouseImportService.searchFilter.pageIndex = 1;
                    warehouseImportService.searchFilter.filters = $scope.filters;
                    $scope.search();
                }
            }

            $scope.gridHandler = {
                loadMore: function () {
                    if ($scope.pageIndex < $scope.totalPage) {
                        $scope.pageIndex++;
                        warehouseImportService.searchFilter.pageIndex = $scope.pageIndex;
                        $scope.search(true);
                    }
                },
                sort: function (sortedBy, sortedDirection) {
                    $scope.searchdata = [];
                    warehouseImportService.searchFilter.sortedDirection = sortedDirection;
                    $scope.pageIndex = 1;
                    warehouseImportService.searchFilter.pageIndex = scope.pageIndex;
                    warehouseImportService.searchFilter.sortedBy = sortedBy;
                    $scope.search();
                },
                isTriggered: false
            };

            //
            // private function defined
            //
            $scope.search = function (isLoadMore) {
                $cookieStore.put(cookieId, $scope.filters);
                $scope.gridHandler.isTriggered = false;
                warehouseImportService.searchFilter.filters = $scope.filters;
                warehouseImportService.search(
                    function (data) {
                        //$scope.data = data.data.data;
                        Array.prototype.push.apply($scope.data, data.data.data);
                        if($scope.importTypes == null) {
                            $scope.importTypes = data.data.importTypes;
                        }
                        $scope.totalPage = Math.ceil(data.totalRows / warehouseImportService.searchFilter.pageSize);
                        $scope.totalRows = data.totalRows;
                        $scope.$apply();

                        /*
                        if(data.totalRows < warehouseImportService.searchFilter.pageSize) {
                            jQuery('#searchResultGrid').find('ul').hide();
                        }
                        else {
                            jQuery('#searchResultGrid').find('ul').show();
                        }
                        */

                        jQuery('#content').show();
                        //searchResultGrid.updateLayout();
                        if (!isLoadMore) {
                            $scope.gridHandler.goTop();
                        }
                        $scope.gridHandler.isTriggered = true;
                    },
                    function (error) {
                        $scope.data = null;
                        $scope.pageIndex = 1;
                        $scope.totalPage = 0;
                        $scope.$apply();
                    }
                );
            }

            // function define
            $scope.delete = function (id) {
                if (confirm('Are you sure ?')) {
                    warehouseImportService.delete(id,
                        function (data) {
                            jsHelper.processMessage(data.message);

                            if(data.message.type == 0) {
                                var j = -1;
                                for (var i = 0; i < $scope.data.length; i++) {
                                    if ($scope.data[i].warehouseImportID == data.data) {
                                        j = i;
                                        break;
                                    }
                                }

                                if (j >= 0) {
                                    $scope.data.splice(j, 1);
                                }

                                $scope.$apply();
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            }

            @*$scope.importFromWexForm = {
                load: function(){
                    var input = document.createElement ("input");
                    input.setAttribute ("type", "file");
                    input.setAttribute ("accept", ".csv");
                    input.addEventListener ("change", function (e) {
                        var file = e.target.files[0];
                        Papa.parse(file, {
                            quoteChar: "''",
                            delimiter: "",
                            //header: true,
                            skipEmptyLines: true,
                            complete: function(results) {
                                //adjust source data (replace ' by string empty)
                                var wexItems=[];
                                var wexItem={};
                                var hearder = results.data[0];
                                for(var i=0;i<results.data.length;i++){
                                    if (i>0){
                                        var item=results.data[i];
                                        wexItem={};
                                        for(var j=0;j<hearder.length;j++){
                                            wexItem[hearder[j].replace(/'/g , '')]=item[j].replace(/'/g , '');
                                        }
                                        wexItems.push(wexItem);
                                    }
                                }
                                //push to server
                                warehouseImportService.wexInputData(wexItems,
                                    function (data) {
                                        if(data.message.type == 0) {
                                            window.open('@Url.Action("Free", "WarehouseImport", new { id = UrlParameter.Optional })/' + data.data,'');
                                        }
                                        },
                                    function (error) {
                                        jsHelper.showMessage('warning', error);
                                    }
                                );
                            }
                        });
                    }, false);
                    input.click();
                }
            }*@

            //
            // INIT
            //
            $scope.search();
        }]);
    </script>
}