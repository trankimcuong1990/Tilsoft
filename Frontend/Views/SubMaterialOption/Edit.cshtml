@{
    if (ViewBag.ID == 0)
    {
        ViewBag.Title = "Create New Sub Material Option";
    }
    else
    {
        ViewBag.Title = "Edit Sub Material Option";
    }

    ViewBag.Module = "Sub Material Option";
}

<form class="row" name="editForm" id="main-form">
    <article class="col-sm-12 col-md-12 col-lg-12">
        <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <ul class="nav nav-tabs pull-left in">
                    <li class="active">
                        <a data-toggle="tab" href="#tabGeneral"> <span> General Information </span> </a>
                    </li>
                </ul>
            </header>
            <div>
                <div class="widget-body">
                    <div class="tab-content">
                        <div class="tab-pane active" id="tabGeneral">
                            <div class="smart-form">
                                <fieldset>
                                    <div class="row">
                                        <section class="col col-3">
                                            <label class="label">Sub Material</label>
                                            <label class="select">
                                                <select ng-model="data.subMaterialID" ng-change="event.onOptionChange()" ng-options="subMaterial.subMaterialID as subMaterial.subMaterialNM for subMaterial in subMaterials | orderBy:'+subMaterialNM'" required>
                                                    <option value=""></option>
                                                </select>
                                                <i></i>
                                            </label>
                                        </section>
                                        <section class="col col-3">
                                            <label class="label">Sub Material Color</label>
                                            <label class="select">
                                                <select ng-model="data.subMaterialColorID" ng-change="event.onOptionChange()" ng-options="subMaterialColor.subMaterialColorID as subMaterialColor.subMaterialColorNM for subMaterialColor in subMaterialColors | orderBy:'+subMaterialColorNM'" required>
                                                    <option value=""></option>
                                                </select>
                                                <i></i>
                                            </label>
                                        </section>
                                        <section class="col col-2">
                                            <label class="label">Code</label>
                                            <label class="input">
                                                <span class="form-control">{{data.subMaterialOptionUD}}</span>
                                            </label>
                                        </section>
                                        <section class="col col-2">
                                            <label class="label">Name</label>
                                            <label class="input">
                                                <span class="form-control">{{data.subMaterialOptionNM}}</span>
                                            </label>
                                        </section>
                                        <section class="col col-2">
                                            <label class="label">Display Index</label>
                                            <label class="input">
                                                <input type="text" ng-model="data.displayIndex" />
                                            </label>
                                        </section>
                                    </div>
                                    <div class="row">
                                        <div class="col col-6">
                                            <section>
                                                <label class="label">Image</label>
                                                <div class="input-group" style="width: 100%;">
                                                    @Html.Partial("~/Views/Shared/_Controls/_ImageBox.cshtml", new Frontend.Models.ImageBoxViewModel() { URLBinding = "data.imageFile_DisplayUrl", JSOnChangeHandler = "event.changeImage", JSONRemoveHandler = "event.removeImage" })
                                                </div>
                                            </section>
                                        </div>
                                        <div class="col col-6">
                                            <section>
                                                <label class="label">Season</label>
                                                <label class="select">
                                                    <select class="form-control" ng-model="data.season" ng-options="season.seasonValue as season.seasonText for season in seasons">
                                                        <option value=""></option>
                                                    </select>
                                                    <i></i>
                                                </label>
                                            </section>
                                            <section>
                                                <label class="label">&nbsp;</label>
                                                <label class="checkbox">
                                                    <input type="checkbox" ng-model="data.isStandard">
                                                    <i></i>Standard
                                                </label>
                                            </section>
                                            <section>
                                                <label class="label">&nbsp;</label>
                                                <label class="checkbox">
                                                    <input type="checkbox" ng-model="data.isEnabled">
                                                    <i></i>Enabled
                                                </label>
                                            </section>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="note">
                                <div ng-show="data.createdBy">
                                    <strong>Created By</strong>
                                    <a ng-show="data.createdBy != null && data.creatorName != null" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{data.createdBy}}" da data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                        <i class="fa fa-user"></i> {{data.creatorName}}
                                    </a>
                                    <a ng-show="data.createdBy != null && data.creatorName == null && data.creatorFullName != null" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{data.createdBy}}" da data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                        <i class="fa fa-user"></i> {{data.creatorFullName}}
                                    </a>
                                    on {{data.createdDate}}
                                </div>
                                <br />
                                <div ng-show="data.updatedBy">
                                    <strong>Updated By</strong>
                                    <a ng-show="data.updatedBy != null && data.updatorName != null" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{data.updatedBy}}" da data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                        <i class="fa fa-user"></i> {{data.updatorName}}
                                    </a>
                                    <span ng-show="data.updatedBy != null && data.updatorName == null && data.fullName != null">
                                        <i class="fa fa-user"></i> {{data.fullName}}
                                    </span>
                                    on {{data.updatedDate}}
                                </div>
                            </div>
                        </div>
                        
                    </div>
                </div>
            </div>
        </div>
    </article>
</form>

@section FormAction {
    <ul id="sparks">
        <li class="sparks-info">
            <a href="@Url.Action("Index", "SubMaterialOption")" class="btn btn-default" title="Go Back"><i class="fa fa-arrow-left"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0)" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Update, HttpContext.Current))" title="Save" ng-click="event.update($event)"><i class="fa fa-save"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0)" class="btn btn-default@(ViewBag.ID==0?" disabled":"") @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Create, HttpContext.Current))" title="Delete" style="color: #ff0000;" ng-click="event.delete($event)"><i class="fa fa-times"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0)" class="btn btn-default disabled" title="Print"><i class="fa fa-print"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0)" class="btn btn-default disabled" title="Approve"><i class="fa fa-thumbs-o-up"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0)" class="btn btn-default disabled" title="Reset Approval status"><i class="fa fa-thumbs-o-down"></i></a>
        </li>
    </ul>
}

@section pagejs {
    <script src="~/Angular/app/jsonService.js"></script>
    <script src="~/Angular/app/subMaterialOption/service.js"></script>
    <script type="text/javascript">
        jsonService.serviceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/submaterialoption/';
        jsonService.token = '@Session[Frontend.Customize.Common.ProjectDefinition.TOKEN_SESSION]';

        var tilsoftApp = angular.module('tilsoftApp', []);
        tilsoftApp.controller('tilsoftController', ['$scope', function ($scope) {
            //
            // property
            //
            $scope.data = null;
            $scope.subMaterials = null;
            $scope.subMaterialColors = null;
            $scope.seasons = null;
            $scope.startListener = false;

            //
            // event
            //
            $scope.event = {
                init:function(){
                    jsonService.load(
                        @ViewBag.ID,
                        function (data) {
                            $scope.data = data.data.data;
                            $scope.subMaterials = data.data.subMaterials;
                            $scope.subMaterialColors = data.data.subMaterialColors;
                            $scope.seasons = data.data.seasons;

                            $scope.$apply();
                            jQuery('#content').show();

                            // monitor changes
                            $scope.$watch('data', function() {
                                jQuery('#changeNotification').html('<i class="fa fa-save blink_me"></i>');
                            });
                            $scope.startListener = true;
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);

                            $scope.data = null;
                            $scope.subMaterials = null;
                            $scope.subMaterialColors = null;
                            $scope.seasons = null;
                            $scope.$apply();
                        }
                    );
                },
                update: function($event){
                    $event.preventDefault();

                    if($scope.editForm.$valid)
                    {
                        jsonService.update(
                            @ViewBag.ID,
                            $scope.data,
                            function (data) {
                                jsHelper.processMessage(data.message);
                                if(data.message.type == 0) {
                                    $scope.method.refresh(data.data.subMaterialOptionID);
                                }
                            },
                            function (error) {
                                jsHelper.showMessage('warning', error);
                            }
                        );
                    }
                    else
                    {
                        jsHelper.showMessage('warning', '@Frontend.Properties.Resources.INPUT_VALIDATION_FAILED');
                    }
                },
                delete: function($event){
                    $event.preventDefault();

                    if (confirm('Are you sure ?')) {
                        jsonService.delete(
                            @ViewBag.ID,
                            function (data) {
                                jsHelper.processMessage(data.message);
                                if(data.message.type == 0) {
                                    window.location = '@Url.Action("Index", "SubMaterialOption")';
                                }
                            },
                                function (error) {
                                    jsHelper.showMessage('warning', error);
                                }
                            );
                    }
                },
                onOptionChange: function(){
                    if(!$scope.startListener){
                        return;
                    }

                    var optionCode = '';
                    var optionName = '';

                    // material
                    if($scope.data.subMaterialID > 0){
                        for(j=0; j< $scope.subMaterials.length; j++) {
                            if($scope.subMaterials[j].subMaterialID == $scope.data.subMaterialID) {
                                optionCode += $scope.subMaterials[j].subMaterialUD;
                                optionName += $scope.subMaterials[j].subMaterialNM;
                                break;
                            }
                        }
                    }

                    // type
                    if($scope.data.subMaterialColorID > 0){
                        for(j=0; j< $scope.subMaterialColors.length; j++) {
                            if($scope.subMaterialColors[j].subMaterialColorID == $scope.data.subMaterialColorID) {
                                optionCode += $scope.subMaterialColors[j].subMaterialColorUD;
                                optionName += ' ' + $scope.subMaterialColors[j].subMaterialColorNM;

                                break;
                            }
                        }
                    }

                    $scope.data.subMaterialOptionUD = optionCode;
                    $scope.data.subMaterialOptionNM = optionName;
                },
                changeImage: function ($event) {
                    $event.preventDefault();
                    masterUploader.multiSelect = true;
                    masterUploader.imageOnly = true;
                    masterUploader.callback = function () {
                        var scope = angular.element(jQuery('body')).scope();
                        scope.$apply(function () {
                            angular.forEach(masterUploader.selectedFiles, function (img) {
                                scope.data.imageFile_DisplayUrl = img.fileURL;
                                scope.data.imageFile_NewFile = img.filename;
                                scope.data.imageFile_HasChange = true;
                            }, null);
                        });
                    };
                    masterUploader.open();
                },
                removeImage: function ($event) {
                    $scope.data.imageFile_DisplayUrl = '';
                    $scope.data.imageFile_NewFile = '';
                    $scope.data.imageFile_HasChange = true;
                }
            };

            //
            // method
            //
            $scope.method = {
                refresh: function(id){
                    jsHelper.loadingSwitch(true);
                    window.location = '@Url.Action("Edit", "SubMaterialOption", new { id = UrlParameter.Optional })/'+id;
                }
            };

            //
            // init
            //
            $scope.event.init();
        }]);
    </script>
}

