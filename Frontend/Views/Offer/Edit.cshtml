@{
    if (ViewBag.ID == 0)
    {
        ViewBag.Title = "Create New Offer";
    }
    else
    {
        ViewBag.Title = "Edit Offer";
    }

    ViewBag.Module = "Eurofar Offer";
    ViewBag.CurrentSeason = Frontend.Helper.Common.GetCurrentSeason();
    Frontend.APIDTO.APIUserInformation userInfo = (Frontend.APIDTO.APIUserInformation)ViewBag.CurrentLoginUserInfo;
}

<style>
    .tilsoft-table-wrapper a, .tilsoft-table-wrapper div, .tilsoft-table-wrapper td, .tilsoft-table-wrapper th, .tilsoft-table-wrapper input, .tilsoft-table-wrapper select option, .tilsoft-table-wrapper select option {
        font-size: 11px !important;
    }

    .tilsoft-table-wrapper .tilsoft-table .tilsoft-table-header div {
        height: 75px;
    }

    .tilsoft-table-wrapper .tilsoft-table table tr td input.form-control {
        height: 25px;
    }

    .tilsoft-table .tilsoft-table-totalrow div {
        height: 60px;
    }
</style>

<form name="editForm" id="main-form">
    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="jarviswidget" id="wid-id-general" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <ul class="nav nav-tabs pull-left in">
                    <li class="active">
                        <a data-toggle="tab" href="#hb1"><i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet"> General Information </span> </a>
                    </li>

                    <li>
                        <a data-toggle="tab" href="#hb2"> <i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet"> Client Information </span> </a>
                    </li>

                    <li>
                        <a data-toggle="tab" href="#hb3"> <i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet"> Payment & Delivery</span> </a>
                    </li>

                    <li>
                        <a data-toggle="tab" href="#hb4"> <i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet"> Labeling & Packaging </span> </a>
                    </li>

                    <li>
                        <a data-toggle="tab" href="#hb5"> <i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet"> Forwarder </span> </a>
                    </li>

                    <li>
                        <a data-toggle="tab" href="#hb6"> <i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet"> Other </span> </a>
                    </li>
                    <li>
                        <a data-toggle="tab" href="#hb9"> <i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet"> Tracking </span> </a>
                    </li>
                </ul>
            </header>
            <div>
                <div class="jarviswidget-editbox"></div>

                <div class="widget-body">
                    <div class="tab-content">

                        <div class="tab-pane active" id="hb1">
                            <div class="row">
                                <div class="col-sm-2  m-bottom-15">
                                    <label>Season</label>
                                    <select name="season" class="form-control" ng-model="offerDataContainer.offerData.season" ng-options="item.seasonValue as item.seasonText for item in offerDataContainer.supportData.seasons" required>
                                        <option value=""></option>
                                    </select>
                                    <span class="help-blfock" ng-show="editForm.season.$error.required"><i class="fa fa-warning"></i>Season is required.</span>
                                </div>
                                <div class="col-sm-2  m-bottom-15">
                                    <label>Offer Date</label>
                                    <div class="input-group">
                                        <input name="offerDateFormated" type="text" class="form-control datepicker" data-dateformat="dd/mm/yy" ng-model="offerDataContainer.offerData.offerDateFormated" required>
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                    <span class="help-block" ng-show="editForm.offerDateFormated.$error.required"><i class="fa fa-warning"></i>Offer date is required.</span>
                                </div>

                                <div class="col-sm-2  m-bottom-15">
                                    <label>Valid Until</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control datepicker" data-dateformat="dd/mm/yy" ng-model="offerDataContainer.offerData.validUntilFormated">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>

                                <div class="col-sm-2  m-bottom-15" style="display: none;">
                                    <label>Acc Manager</label>
                                    <select class="form-control" ng-model="offerDataContainer.offerData.saleID" ng-options="item.saleID as item.saleNM for item in offerDataContainer.supportData.sales">
                                        <option value=""></option>
                                    </select>
                                </div>

                                <div class="col-sm-1  m-bottom-15">
                                    <label>Status</label>
                                    <input readonly ng-model="offerDataContainer.offerData.trackingStatusNM" class="form-control" />
                                </div>

                                <div class="col-sm-1  m-bottom-15">
                                    <label>Version</label>
                                    <span class="form-control">{{offerDataContainer.offerData.offerVersion}}</span>
                                </div>
                                <div class="col-sm-2 m-bottom-15">
                                    <label>Client Contact Email</label>
                                    <input type="text" class="form-control" ng-model="offerDataContainer.offerData.clientContactEmail" />
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Client Contact Phone</label>
                                    <input type="text" class="form-control" ng-model="offerDataContainer.offerData.clientContactPhone" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-sm-5  m-bottom-15">
                                    <label>Client</label>
                                    <span class="form-control">
                                        <strong>{{offerDataContainer.offerData.clientUD}}</strong>
                                        {{offerDataContainer.offerData.clientNM}}
                                    </span>
                                </div>
                                <div class="col col-sm-1 m-bottom-15">
                                    <label>Sale Manager</label>
                                    <span class="form-control">
                                        <a ng-show="(offerDataContainer.offerData.saleID != null)" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{offerDataContainer.offerData.saleID}}" da data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                            <i class="fa fa-user"></i> {{offerDataContainer.offerData.saleUD}}
                                        </a>
                                    </span>
                                </div>
                                <div class="col-sm-1 m-bottom-15">
                                    <label>Currency</label>
                                    <span class="form-control">{{offerDataContainer.offerData.currency}}</span>
                                </div>
                                <div class="col-sm-2 m-bottom-15">
                                    <label>Exchange Rate (EUR/USD)</label>
                                    <span class="form-control" style="text-align: right;">{{getExchangeRate() | number:2}}</span>
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Transport Fee</label>
                                    <span class="form-control" style="text-align: right;">{{offerDataContainer.offerData.transportationFee | currency : '&euro;' : 2}}</span>
                                </div>
                                <div class="col-sm-1 m-bottom-15">
                                    <label>Commission</label>
                                    <span class="form-control" style="text-align: right;">{{offerDataContainer.offerData.commissionPercent | number : 2}}%</span>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-sm-6 m-bottom-15">
                                    <label>Remark</label>
                                    <input type="text" class="form-control" ng-model="offerDataContainer.offerData.remark" />
                                </div>
                                <div class="col-sm-5 m-bottom-15">
                                    <label>Offer File Name / @Html.Partial("~/Views/Shared/_Controls/_FileUploadBox.cshtml", new Frontend.Models.FileUploadViewModel() { ControlID = "offerDataContainer.offerData.offerID", URLBinding = "offerDataContainer.offerData.offerScanFileURL", FileName = "offerDataContainer.offerData.offerScanFileFriendlyName", JSOnChangeHandler = "changeFile", JSONRemoveHandler = "removeFile" })</label>
                                    <span class="form-control">{{offerDataContainer.offerData.offerUD}}</span>
                                </div>
                                <div class="col-sm-1 m-bottom-15">
                                    <div class="smart-form">
                                        <label class="label">&nbsp;</label>
                                        <label class="checkbox">
                                            <input type="checkbox" ng-model="offerDataContainer.offerData.isPotential">
                                            <i></i>Potential
                                        </label>
                                    </div>
                                </div>

                            </div>
                        </div>

                        <div class="tab-pane" id="hb2">
                            <div class="row">
                                <div class="col-sm-6 m-bottom-15">
                                    <label>Client</label>
                                    <div class="smart-form">
                                        <label class="input">
                                            <input type="text" ng-model="offerDataContainer.offerData.clientNM" autocomplete="off" ng-keyup="quicksearchClient.event.searchBoxKeyUp()" id="txtClient" />
                                            <input type="hidden" ng-model="offerDataContainer.offerData.clientID" name="clientID" required />
                                            <i class="icon-append fa fa-search"></i>
                                        </label>
                                        <div id="client-popup" class="popup-container-2">
                                            <div style="float: right; margin-bottom: 8px;">
                                                <a ng-click="quicksearchClient.event.close($event, true)" class="btn btn-primary btn-xs" href="javascript:void(0);"><i class="fa fa-remove"></i> Close</a>
                                            </div>
                                            <div class="clear"></div>
                                            <div id="quickSearchClientTable" class="tilsoft-table-wrapper">
                                                <div class="tilsoft-table">
                                                    <div class="tilsoft-table-header" style="width: 360px;">
                                                        <div style="width: 70px; height: 50px;"></div>
                                                        <div style="width: 100px; height: 50px;">CLIENT CODE</div>
                                                        <div style="height: 50px;">CLIENT NAME</div>
                                                    </div>
                                                    <div class="tilsoft-table-body" style="width: 360px;">
                                                        <table>
                                                            <tr ng-repeat="item in quicksearchClient.data">
                                                                <td style="width: 70px; text-align: center;"><a ng-click="quicksearchClient.event.ok($event, item.clientID)" class="btn btn-primary btn-xs" href="javascript:void(0);"><i class="fa fa-check"></i> Select</a></td>
                                                                <td style="width: 100px;">{{item.clientUD}}</td>
                                                                <td>{{item.clientNM}}</td>
                                                            </tr>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <span class="help-block" ng-show="editForm.clientID.$error.required"><i class="fa fa-warning"></i>Client is required.</span>

                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Client Code</label>
                                    <span class="form-control">{{offerDataContainer.offerData.clientUD}}</span>
                                </div>
                                <div class="col-sm-2 m-bottom-15">
                                    <label>Contact Person</label>
                                    <input class="form-control" type="text" id="clientContactPerson" name="clientContactPerson" ng-model="offerDataContainer.offerData.clientContactPerson">
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Phone</label>
                                    <span class="form-control">{{offerDataContainer.offerData.clientTelephone}}</span>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-sm-2 m-bottom-15">
                                    <label>Email</label>
                                    <span class="form-control">{{offerDataContainer.offerData.clientEmail}}</span>
                                </div>

                                <div class="col-sm-6 m-bottom-15">
                                    <label>Address 1</label>
                                    <span class="form-control">{{offerDataContainer.offerData.clientStreetAddress1}}</span>
                                </div>

                                <div class="col-sm-4 m-bottom-15">
                                    <label>Address 2</label>
                                    <span class="form-control">{{offerDataContainer.offerData.clientStreetAddress2}}</span>
                                </div>
                            </div>


                        </div>

                        <div class="tab-pane" id="hb3">

                            <div class="row">

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Payment Term</label>
                                    <select class="form-control" ng-model="offerDataContainer.offerData.paymentTermID" ng-options="item.paymentTermID as item.paymentTermNM for item in offerDataContainer.supportData.paymentTerms">
                                        <option value=""></option>
                                    </select>
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Delivery Term</label>
                                    <select class="form-control" ng-model="offerDataContainer.offerData.deliveryTermID" ng-options="item.deliveryTermID as item.deliveryTermNM for item in offerDataContainer.supportData.deliveryTerms">
                                        <option value=""></option>
                                    </select>
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>TransportFee/Cont40HC</label>
                                    <div class="input-group">
                                        <span class="input-group-addon">€</span>
                                        <input type="text" class="form-control" ng-model="offerDataContainer.offerData.transportationFee" style="text-align:right" furnindo-currency />
                                    </div>
                                </div>

                                <div class="col-sm-1 m-bottom-15">
                                    <label>Currency</label>
                                    <select class="form-control" ng-model="offerDataContainer.offerData.currency" ng-options="item.currencyValue as item.currencyText for item in offerDataContainer.supportData.currency"></select>
                                </div>

                                <div class="col-sm-1 m-bottom-15">
                                    <label>VAT</label>
                                    <select class="form-control" ng-model="offerDataContainer.offerData.vat" ng-options="item.vatPercentValue as item.vatPercentText for item in offerDataContainer.supportData.vatPercents"></select>
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>% Surcharge</label>
                                    <input class="form-control" type="text" id="surChargePercent" ng-model="offerDataContainer.offerData.surChargePercent">
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>% Commission</label>
                                    <input class="form-control" type="text" id="commissionPercent" ng-model="offerDataContainer.offerData.commissionPercent">
                                </div>

                            </div>
                        </div>

                        <div class="tab-pane" id="hb4">
                            <div class="row">
                                <div class="col-sm-3 m-bottom-15">
                                    <label>Labeling</label>
                                    <select class="form-control" ng-model="offerDataContainer.offerData.labelingType" ng-options="item.labelingTypeValue as item.labelingTypeText for item in offerDataContainer.supportData.labelingTypes">
                                        <option value=""></option>
                                    </select>
                                </div>

                                <div class="col-sm-3 m-bottom-15">
                                    <label>Labeling Note / <input type="checkbox" id="isLabelingNeedToFollowUp" ng-model="offerDataContainer.offerData.isLabelingNeedToFollowUp"> Will follow up by sale</label>
                                    <input class="form-control" type="text" id="labelingNote" ng-model="offerDataContainer.offerData.labelingNote">
                                </div>

                                <div class="col-sm-3 m-bottom-15">
                                    <label>Packaging</label>
                                    <select class="form-control" ng-model="offerDataContainer.offerData.packagingType" ng-options="item.packagingTypeValue as item.packagingTypeText for item in offerDataContainer.supportData.packagingTypes">
                                        <option value=""></option>
                                    </select>
                                </div>

                                <div class="col-sm-3 m-bottom-15">
                                    <label>Packaging Note / <input type="checkbox" id="isPackagingNeedToFollowUp" ng-model="offerDataContainer.offerData.isPackagingNeedToFollowUp"> Will follow up by sale</label>
                                    <input class="form-control" type="text" id="packagingNote" ng-model="offerDataContainer.offerData.packagingNote">
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane" id="hb5">
                            <div class="row">
                                <div class="col-sm-2 m-bottom-15">
                                    <label>Forwarder</label>
                                    <select class="form-control" ng-model="offerDataContainer.offerData.forwarderID" ng-options="item.forwarderID as item.forwarderNM for item in offerDataContainer.supportData.forwarders">
                                        <option value=""></option>
                                    </select>
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Forwarder Contract Number</label>
                                    <input class="form-control" type="text" id="forwarderContractNo" ng-model="offerDataContainer.offerData.forwarderContractNo">
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Forwarder Contract Person</label>
                                    <span class="form-control">{{offerDataContainer.offerData.forwarderPIC}}</span>
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Forwarder Mobile</label>
                                    <span class="form-control">{{offerDataContainer.offerData.forwarderPIC}}</span>
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Forwarder Mobile</label>
                                    <span class="form-control">{{offerDataContainer.offerData.forwarderMobile}}</span>
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Forwarder Email</label>
                                    <span class="form-control">{{offerDataContainer.offerData.forwarderEmail}}</span>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane" id="hb6">
                            <div class="row">
                                <div class="col-sm-2 m-bottom-15">
                                    <label>Put In Production Term</label>
                                    <select class="form-control" ng-model="offerDataContainer.offerData.putInProductionTermID" ng-options="item.putInProductionTermID as item.putInProductionTermNM for item in offerDataContainer.supportData.putInProductionTerms">
                                        <option value=""></option>
                                    </select>
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Put In Production Remark</label>
                                    <input class="form-control" type="text" id="putInProductionRemark" ng-model="offerDataContainer.offerData.putInProductionRemark">
                                </div>

                                <div class="col-sm-1 m-bottom-15">
                                    <label>20DC Qnt</label>
                                    <input class="form-control" type="text" id="qntIn20DC" ng-model="offerDataContainer.offerData.qntIn20DC">
                                </div>

                                <div class="col-sm-1 m-bottom-15">
                                    <label>40DC Qnt</label>
                                    <input class="form-control" type="text" id="qntIn40DC" ng-model="offerDataContainer.offerData.qntIn40DC">
                                </div>

                                <div class="col-sm-1 m-bottom-15">
                                    <label>40HC Qnt</label>
                                    <input class="form-control" type="text" id="qntIn40HC" ng-model="offerDataContainer.offerData.qntIn40HC">
                                </div>

                                <div class="col-sm-2 m-bottom-15">
                                    <label>Partial Qnt</label>
                                    <input class="form-control" type="text" id="partialQnt" ng-model="offerDataContainer.offerData.partialQnt">
                                </div>
                                <div class="col-sm-2 m-bottom-15">
                                    <label>Remark for Qnt</label>
                                    <input class="form-control" type="text" id="qntRemark" ng-model="offerDataContainer.offerData.qntRemark">
                                </div>
                            </div>

                        </div>

                        <div id="hb9" class="tab-pane">
                            <div class="row">
                                <div class="col-sm-2 m-bottom-15">
                                    <label>Created By</label>
                                    <span class="form-control">
                                        <a ng-show="(offerDataContainer.offerData.createdBy != null )" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{offerDataContainer.offerData.createdBy}}" da data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                            <i class="fa fa-user"></i> {{offerDataContainer.offerData.creatorName}}
                                        </a>
                                    </span>
                                </div>
                                <div class="col-sm-2 m-bottom-15">
                                    <label>Created Date</label>
                                    <span class="form-control">{{offerDataContainer.offerData.createdDateFormated}}</span>
                                </div>
                                <div class="col-sm-2 m-bottom-15">
                                    <label>Updated By</label>
                                    <span class="form-control">
                                        <a ng-show="(offerDataContainer.offerData.updatedBy != null)" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{offerDataContainer.offerData.updatedBy}}" da data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                            <i class="fa fa-user"></i> {{offerDataContainer.offerData.updatorName}}
                                        </a>
                                    </span>
                                </div>
                                <div class="col-sm-2 m-bottom-15">
                                    <label>Updated Date</label>
                                    <span class="form-control">{{offerDataContainer.offerData.updatedDateFormated}}</span>
                                </div>
                            </div>
                            @*<div class="row">
                                    <div class="col-sm-2 m-bottom-15">
                                        <label>SaleOrderID</label>
                                        <input class="form-control" type="text" id="v4ID" ng-model="saleorder.saleOrderData.v4id">
                                    </div>
                                    <div class="col-sm-2 m-bottom-15">
                                        <label>OMSv4 ProformaInvoice No</label>
                                        <input class="form-control" type="text" id="v4ID" ng-model="saleorder.saleOrderData.v4piNo">
                                    </div>
                                </div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </article>

    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="jarviswidget" id="wid-id-general" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <ul class="nav nav-tabs pull-left in">
                    <li class="active">
                        <a data-toggle="tab" href="#hb7"> <i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet">Product</span> </a>
                    </li>
                    <li>
                        <a data-toggle="tab" href="#hb8"> <i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet">Sparepart</span> </a>
                    </li>
                    <li>
                        <a data-toggle="tab" href="#sampletab"> <i class="fa fa-database"></i> <span class="hidden-mobile hidden-tablet">Sample</span> </a>
                    </li>
                </ul>
            </header>
            <div>
                <div class="jarviswidget-editbox"></div>

                <div class="widget-body">
                    <div class="tab-content">

                        <div class="tab-pane active" id="hb7">

                            <div class="smart-form">
                                <fieldset>
                                    <div class="row">

                                        <section class="col col-lg-6" ng-show="quicksearchModel.filters.filters.modelStatusID!=-2">
                                            <label class="input">
                                                <input type="text" placeholder="Press enter to search all model or type at least 3 chars to search Model" ng-model="quicksearchModel.modelNM" autocomplete="off" ng-keyup="quicksearchModel.event.searchBoxKeyUp($event)" id="txtModelNM" />
                                                <a ng-click="quicksearchModel.event.clickSearch()" href="javascript:void(0);"> <i class="icon-append fa fa-search"></i></a>
                                            </label>
                                            <div id="model-popup" class="popup-container-2">
                                                <div style="float: right; margin-bottom: 8px;">
                                                    <a ng-click="quicksearchModel.event.close($event, true)" class="btn btn-danger btn-xs" href="javascript:void(0);"><i class="fa fa-remove"></i> Close</a>
                                                    <a ng-click="quicksearchModel.event.selectedMultiModel($event)" class="btn btn-primary btn-xs" href="javascript:void(0);"><i class="fa fa-check"></i> OK</a>
                                                </div>
                                                <div class="clear"></div>
                                                <div id="quickSearchModelGrid" class="tilsoft-table-wrapper">
                                                    <div class="tilsoft-table">
                                                        <div class="tilsoft-table-header" style="width: 400px;">
                                                            <div style="width: 80px; height: 50px;"></div>
                                                            <div style="width: 35px; height: 50px;"></div>
                                                            <div style="width: 100px; height: 50px;"></div>
                                                            <div style="width: 120px; height: 50px;">Code</div>
                                                            <div style="height:50px;">Name</div>
                                                        </div>
                                                        <div class="tilsoft-table-body" style="width: 400px;">
                                                            <table>
                                                                <tr ng-repeat="item in quicksearchModel.data">
                                                                    <td style="width: 80px; text-align: center;"><a ng-click="quicksearchModel.event.selectSingleModel($event, item.modelID, item.articleCode)" class="btn btn-primary btn-xs" href="javascript:void(0);"><i class="fa fa-check"></i> Select</a></td>
                                                                    <td style="width: 35px; text-align:center">
                                                                        <label class="checkbox">
                                                                            <input type="checkbox" ng-model="item.isSelected">
                                                                            <i></i>
                                                                        </label>
                                                                    </td>
                                                                    <td style="width: 100px; text-align: center; vertical-align: middle;">
                                                                        <a href="{{item.fileLocation}}" data-featherlight="image">
                                                                            <img style="width: 95%;" ng-src="{{item.thumbnailLocation}}" />
                                                                        </a>
                                                                    </td>

                                                                    <td style="width: 120px; text-align:center">{{item.modelUD}}</td>
                                                                    <td>{{item.modelNM}}</td>
                                                                </tr>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </section>

                                        <section class="col col-lg-6" ng-show="quicksearchModel.filters.filters.modelStatusID==-2">
                                            <label class="input">
                                                <input type="text" placeholder="press enter to search all physical warehouse product or type at least 3 chars to search  physical warehouse product" autocomplete="off" ng-keyup="quicksearchWarehouseItem.event.searchBoxKeyUp($event,'PRODUCT')" ng-model="quicksearchWarehouseItem.filters.filters.searchQuery" />
                                                <a ng-click="quicksearchWarehouseItem.event.searchClick($event,'PRODUCT')" href="javascript:void(0);"> <i class="icon-append fa fa-search"></i></a>
                                            </label>
                                            <div id="quicksearch-warehouse-product"></div>
                                        </section>

                                        <section class="col col-lg-6">
                                            <div>
                                                <ul ng-repeat="item in offerDataContainer.supportData.modelStatuses" style="float:left">
                                                    <li style="display:inline"><input type="radio" name="filter-model" id="model-filter-{{item.modelStatusID}}" ng-model="$parent.quicksearchModel.filters.filters.modelStatusID" value="{{item.modelStatusID}}" /> <label for="model-filter-{{item.modelStatusID}}">{{item.modelStatusNM}} &nbsp;&nbsp;</label></li>
                                                </ul>
                                            </div>
                                        </section>
                                    </div>
                                </fieldset>
                            </div>

                            <div class="row">
                                <div class="col-sm-12 m-bottom-15">
                                    <div style="font-size: 11px;">
                                        Price Source:
                                        <br />
                                        <font style="display: inline-block; margin-right: 15px;" ng-repeat="item in offerDataContainer.supportData.planingPurchasingPriceSourceDTOs">{{item.planingPurchasingPriceSourceID}}: {{item.planingPurchasingPriceSourceNM}}</font>
                                    </div>
                                    <div avs-scroll grid-handler="nullHandler" class="tilsoft-table-wrapper" id="offerLineGrid">
                                        <div class="tilsoft-table">
                                            <div class="tilsoft-table-header">
                                                <div style="width: 95px; padding: 5px 8px;">
                                                    <a href="javascript:void(0)" class="btn btn-default btn-xs" title="unlock" onclick="drag()"><i class="fa fa-unlock"></i></a>
                                                    <a href="javascript:void(0)" class="btn btn-default btn-xs" title="lock" onclick="drop()"><i class="fa fa-lock"></i></a>
                                                    <a ng-if="!showAllItem" class="btn btn-default btn-xs" href="javascript:void(0)" title="Show all item" ng-click="showAllOfferLineItem()"><i class="fa fa-eye"></i></a>
                                                    <a ng-if="showAllItem" class="btn btn-default btn-xs" href="javascript:void(0)" title="Show only selected item" ng-click="showAllOfferLineItem()"><i class="fa fa-eye-slash"></i></a>

                                                    @if (userInfo.Data.ModuleSpecialPermissionAccesses.Count(o => o.ModuleSpecialPermissionUD == Frontend.Helper.ConstantIdentifier.SPECIAL_PERMISSION_APPROVE_OFFER) > 0)
                                                    {
                                                        <a ng-if="offerDataContainer.offerData.trackingStatusID == 3 || offerDataContainer.offerData.trackingStatusID == 5" style="width: 80px; margin-top: 5px; display: block; text-transform: none;" class="btn btn-success btn-xs font-11" href="javascript:void(0)" title="Approve all valid items (quantity > 0, has sale price and purchasing price)" ng-click="approveAllItem()"><i class="fa fa-thumbs-o-up"></i> Approve All</a>
                                                    }
                                                </div>
                                                <div style="width: 45px;" class="sorting" data-colname="rowIndex">
                                                    No
                                                    <br />
                                                    <br />
                                                    #{{getTotalOfferLineItem()}}
                                                </div>
                                                <div style="width: 80px">Image</div>
                                                <div style="width: 250px;" class="sorting" data-colname="description">
                                                    Description
                                                    <br />
                                                    <font style="text-transform: none;">(Selected item: {{getOfferLineSummary()}})</font>
                                                </div>
                                                <div style="width: 60px;" class="sorting" data-colname="quantity">Qnt</div>
                                                <div style="width: 50px;" class="sorting">Qnt/ 40HC</div>
                                                <div style="width: 70px;" class="sorting" data-colname="description">Sales Price <br />({{offerDataContainer.offerData.currency}})</div>
                                                <div style="width: 70px;" class="sorting" data-colname="description">Fac Price <br /> ($) <a href="javascript:void(0)" data-toggle="modal" data-target="#PurchasingPriceHelp"><i class="fa fa-question-circle"></i></a></div>
                                                <div style="width: 80px;">Supplier <br /> <font style="text-transform: none;">(Current / Prefer)</font></div>
                                                <div style="width: 60px;">% Delta ({{getPreviousSeason(offerDataContainer.offerData.season)}})</div>
                                                <div style="width: 60px;" class="sorting" data-colname="DeltaPercent">% Delta</div>
                                                @if (userInfo.Data.ModuleSpecialPermissionAccesses.Count(o => o.ModuleSpecialPermissionUD == Frontend.Helper.ConstantIdentifier.SPECIAL_PERMISSION_SEE_ALL_OFFER_DATA) > 0)
                                                {
                                                    <div style="width: 80px;">Net Delta<br />(USD)</div>
                                                }
                                                <div style="width: 80px;">Purchase Amount<br />(USD)</div>
                                                <div style="width: 80px;" ng-if="offerDataContainer.offerData.currency=='EUR'">Sale Amount (USD)</div>
                                                <div style="width: 80px;">Sale Amount ({{offerDataContainer.offerData.currency}})</div>
                                                <div style="width: 80px;">VAT ({{offerDataContainer.offerData.currency}})</div>
                                                <div style="width: 80px;">Total ({{offerDataContainer.offerData.currency}})</div>

                                                <div style="width: 80px;">
                                                    Com mission<br />(USD)
                                                    <br />
                                                    <a href="javascript:void(0)" data-toggle="modal" data-target="#CommissionHelp"><i class="fa fa-question-circle"></i></a>
                                                </div>
                                                <div style="width: 80px;">
                                                    LC Cost<br />(USD)
                                                    <br />
                                                    <a href="javascript:void(0)" data-toggle="modal" data-target="#LCCostHelp"><i class="fa fa-question-circle"></i></a>
                                                </div>
                                                <div style="width: 80px;">
                                                    Interest Cost<br />(USD)
                                                    <br />
                                                    <a href="javascript:void(0)" data-toggle="modal" data-target="#InterestHelp"><i class="fa fa-question-circle"></i></a>
                                                </div>
                                                <div style="width: 80px;">
                                                    Damages Cost<br />(USD)
                                                    <br />
                                                    <a href="javascript:void(0)" data-toggle="modal" data-target="#DamagesHelp"><i class="fa fa-question-circle"></i></a>
                                                </div>
                                                <div style="width: 80px;">
                                                    Transport Cost<br />(USD)
                                                    <br />
                                                    <a href="javascript:void(0)" data-toggle="modal" data-target="#TransportCostHelp"><i class="fa fa-question-circle"></i></a>
                                                </div>

                                                <div style="width: 150px;">Client Info</div>
                                                <div style="width: 150px;">Tracking</div>

                                                <div>&nbsp;</div>
                                            </div>
                                            <div class="tilsoft-table-filter">
                                                <div>
                                                    <a href="javascript:void(0)" class="btn btn-default btn-xs" title="Clear Filter" ng-click="clearFilter($event)"><i class="fa fa-ban"></i></a>
                                                </div>
                                                <div></div>
                                                <div></div>
                                                <div>
                                                    <input type="text" ng-model="filters.description" class="search-filter" />
                                                </div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div>
                                                    @*<input type="text" ng-model="filters.currentSupplier" class="search-filter" />*@
                                                </div>
                                                <div style="padding:1px">

                                                </div>
                                                @if (userInfo.Data.ModuleSpecialPermissionAccesses.Count(o => o.ModuleSpecialPermissionUD == Frontend.Helper.ConstantIdentifier.SPECIAL_PERMISSION_SEE_ALL_OFFER_DATA) > 0)
                                                {
                                                    <div>
                                                    </div>
                                                }
                                                <div></div>
                                                <div ng-if="offerDataContainer.offerData.currency=='EUR'"></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>

                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>

                                                <div></div>
                                                <div></div>
                                                <div>&nbsp;</div>
                                            </div>
                                            <div class="tilsoft-table-totalrow">
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div>{{getTotalRow('quantity') | number:0}}</div>
                                                <div>{{getTotalRow('quantity40HC') | number:2}}</div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div></div>
                                                <div style="padding:1px">
                                                    <font style="{{getTotalRow('deltaTotalPercent') < 0 ? 'color: red;' : ''}}">
                                                        <a title="Weighted Delta" href="javascript:void(0)">{{getTotalRow('deltaTotalPercent') | number:1}}%</a>
                                                        <br />
                                                        <a title="Single Delta" href="javascript:void(0)">{{getTotalRow('deltaTotalPercentSingle') | number:1}}%</a>
                                                    </font>
                                                    <br />
                                                    <a title="Delta 7 ({{getPreviousSeason(offerDataContainer.offerData.season)}})" href="javascript:void(0)">{{offerDataContainer.offerData.delta7PercentLastYear | number:1}}%</a>
                                                </div>
                                                @if (userInfo.Data.ModuleSpecialPermissionAccesses.Count(o => o.ModuleSpecialPermissionUD == Frontend.Helper.ConstantIdentifier.SPECIAL_PERMISSION_SEE_ALL_OFFER_DATA) > 0)
                                                {
                                                    <div><font style="{{getTotalRow('deltaTotal') < 0 ? 'color: red;' : ''}}">{{getTotalRow('deltaTotal') | currency:'$':2}}</font></div>
                                                }
                                                <div>{{getTotalRow('purchaseAmount') | currency : '$' : 2}}</div>
                                                <div ng-if="offerDataContainer.offerData.currency=='EUR'">{{getTotalRow('saleAmountInUSD') | currency : '$' : 2}}</div>
                                                <div>{{getTotalRow('saleAmount') | currency : (offerDataContainer.offerData.currency == 'USD' ? '$' : '€') : 2}}</div>
                                                <div>{{getTotalRow('vat') | currency : (offerDataContainer.offerData.currency == 'USD' ? '$' : '€') : 2}}</div>
                                                <div>{{getTotalRow('total') | currency : (offerDataContainer.offerData.currency == 'USD' ? '$' : '€') : 2}}</div>

                                                <div>{{getTotalRow('commission') | currency:'$':2}}</div>
                                                <div>{{getTotalRow('lccost') | currency:'$':2}}</div>
                                                <div>{{getTotalRow('interest') | currency:'$':2}}</div>
                                                <div>{{getTotalRow('damages') | currency:'$':2}}</div>
                                                <div>{{getTotalRow('transportation') | currency:'$':2}}</div>

                                                <div></div>
                                                <div></div>
                                                <div>&nbsp;</div>
                                            </div>
                                            <div class="tilsoft-table-body" style="height: auto;">
                                                <table id="table-sort">
                                                    <tr ng-repeat="item in offerDataContainer.offerData.offerLines | filter: searchOfferLine" ng-if="showAllItem || (item.quantity && item.quantity > 0)">
                                                        <td style="text-align: center;">
                                                            <a style="width: 80px; margin-bottom: 5px; display: block;" class="btn btn-primary btn-xs font-11 {{item.isCreatedOrder?'disabled':''}}" href="#" ng-click="editOfferLineForm.event.load($event, item.offerLineID)" title="Edit" ng-if="item.offerItemTypeID === 1"><i class="fa fa-pencil"></i> Edit</a>
                                                            <a style="width: 80px; margin-bottom: 5px; display: block;" ng-if="item.offerItemTypeID === 1 && item.isCreatedOrder && @userInfo.Data.ModuleSpecialPermissionAccesses.Count(o => o.ModuleSpecialPermissionUD == Frontend.Helper.ConstantIdentifier.SPECIAL_PERMISSION_CHANGE_OFFER_ITEM_OPTION)" class="btn btn-primary btn-xs font-11" href="javascript:void(0)" ng-click="editOfferLineForm.event.load($event, item.offerLineID)" title="Admin Edit"><i class="fa fa-pencil"></i> Admin Edit</a>
                                                            <a style="width: 80px; margin-bottom: 5px; display: block;" class="btn btn-danger btn-xs font-11 {{item.isCreatedOrder?'disabled':''}}" href="#" ng-click="removeOfferLine($event, item.offerLineID)" title="Remove"><i class="fa fa-times"></i> Del</a>

                                                            @if (userInfo.Data.ModuleSpecialPermissionAccesses.Count(o => o.ModuleSpecialPermissionUD == Frontend.Helper.ConstantIdentifier.SPECIAL_PERMISSION_APPROVE_OFFER) > 0)
                                                            {
                                                                <a style="width: 80px; margin-bottom: 5px; display: block;" class="btn btn-success btn-xs font-11" href="javascript:void(0)" ng-click="approveItem(item)" title="Approve" ng-if="item.offerLineID > 0 && item.offerItemTypeID === 1 && !item.isApproved && (offerDataContainer.offerData.trackingStatusID == 3 || offerDataContainer.offerData.trackingStatusID == 5)"><i class="fa fa-thumbs-o-up"></i> Approve</a>
                                                                <a style="width: 80px; margin-bottom: 5px; display: block;" class="btn btn-success btn-xs font-11" href="javascript:void(0)" ng-click="unApproveItem(item)" title="Approve" ng-if="item.isApproved"><i class="fa fa-thumbs-o-up"></i> Un-approve</a>
                                                            }
                                                        </td>
                                                        <td>
                                                            <input type="text" name="rowIndex" ng-model="item.rowIndex" style="text-align:right; width: 100%;">
                                                        </td>
                                                        <td style="text-align: center;">
                                                            <a href="{{item.productFileLocation}}" data-featherlight="image">
                                                                <img style="width: 95%;" ng-src="{{item.productThumbnailLocation}}" />
                                                            </a>
                                                        </td>
                                                        <td style="text-align:left;">
                                                            <span style="font-weight:bold;">{{item.articleCode}}</span>
                                                            <br />
                                                            {{item.description}}
                                                            <br />
                                                            <u>Packing:</u> {{item.packagingMethodText}}
                                                            <br />
                                                            <i style="color: #{{item.offerItemTypeID === 1 ? 'a76318' : '1aa50b'}};">{{item.offerItemTypeNM}}</i>
                                                            &nbsp;
                                                            <span style="color: #0000ff;" ng-if="item.offerItemTypeID === 1 && item.isApproved">APPROVED</span>
                                                            <span style="color: #a76318;" ng-if="item.offerItemTypeID === 1 && !item.isApproved">PENDING</span>
                                                            <span style="color: #0000ff;" ng-if="item.offerItemTypeID === 2">AUTOMATICALLY APPROVED</span>
                                                            <br />
                                                            <span style="color: #ffffff; background-color:#2fbf13; font-weight:bold; padding: 3px; margin: 3px" ng-if="item.unitPrice != null && item.planingPurchasingPrice != null && !item.isApproved">READY TO BE APPROVED</span>
                                                            <br />
                                                            <span style="color: red;" ng-if="item.offerItemTypeID === 1 && item.warning !== null">{{item.warning}}</span>
                                                        </td>
                                                        <td style="text-align:right">
                                                            <input class="form-control" type="text" name="quantity" ng-model="item.quantity" avs-number-2 style="text-align:right">
                                                        </td>
                                                        <td style="text-align: right;">
                                                            {{item.quantity / item.qnt40HC | number : 2}}
                                                        </td>
                                                        <td style="text-align: center;">
                                                            <input type="text" class="form-control" ng-model="item.unitPrice" style="text-align:right" avs-number-2 ng-decimal="2" ng-if="!item.isApproved" />
                                                            <span style="text-align: right;" ng-if="item.isApproved">{{item.unitPrice | currency : (offerDataContainer.offerData.currency == 'USD' ? '$' : '€') : 2}}</span>
                                                            <span style="text-align: right;" ng-if="offerDataContainer.offerData.currency === 'EUR'">{{$parent.getUSDSalePrice(item) | currency:'$':2}}</span>
                                                            <a href="javascript:void(0)" ng-click="getOfferLineSalePriceHistory(item)" ng-if="item.offerLineID && item.offerLineID > 0">
                                                                <div style="color:{{item.totalItemSalePriceHistory>0?'blue':'black'}}">History</div>
                                                            </a>
                                                        </td>
                                                        <td style="text-align: right;">
                                                            <a href="javascript:void(0)" ng-click="getPlaningPurchasingPrice(item)" ng-if="!item.isApproved">
                                                                {{item.planingPurchasingPrice | currency:'$':2}}<font ng-if="!item.planingPurchasingPrice">Select</font>
                                                            </a>
                                                            <span style="text-align: right;" ng-if="item.isApproved">{{item.planingPurchasingPrice | currency:'$':2}}</span>
                                                            <br />
                                                            <br />
                                                            <span style="display: block;" ng-if="item.planingPurchasingPrice">
                                                                <font ng-if="!item.isPlaningPurchasingPriceSelected">Auto / </font>Source: {{item.planingPurchasingPriceSourceID}}
                                                            </span>
                                                        </td>
                                                        <td style="text-align: right;">
                                                            <span ng-if="item.currentSupplierUD">
                                                                {{item.currentSupplierPrice | currency : '$' : 2}}
                                                                <br />
                                                                {{item.currentSupplierUD}}
                                                                <br />
                                                                {{item.locationNM}}
                                                            </span>
                                                            <span ng-if="!item.currentSupplierUD">N/A</span>

                                                            <hr style="background-color: #c4b1b1; height: 1px;" />

                                                            <span ng-if="item.planingPurchasingPriceFactoryUD">
                                                                {{item.planingPurchasingPrice | currency : '$' : 2}}
                                                                <br />
                                                                {{item.planingPurchasingPriceFactoryUD}}
                                                            </span>
                                                            <span ng-if="!item.planingPurchasingPriceFactoryUD">N/A</span>
                                                        </td>

                                                        <td style="text-align: right;">
                                                            <span style="{{item.delta5PercentLastYear < 0 ? 'color: red;' : ''}}">
                                                                {{item.delta5PercentLastYear | number:1}}%
                                                            </span>
                                                        </td>

                                                        <td style="text-align: right;">
                                                            <span ng-if="item.unitPrice" style="{{$parent.delta(item) < 0 ? 'color: red;' : ''}}">
                                                                {{deltaPercent(item) | number:1}}%
                                                            </span>
                                                        </td>

                                                        @if (userInfo.Data.ModuleSpecialPermissionAccesses.Count(o => o.ModuleSpecialPermissionUD == Frontend.Helper.ConstantIdentifier.SPECIAL_PERMISSION_SEE_ALL_OFFER_DATA) > 0)
                                                        {
                                                            <td style="text-align: right;">
                                                                <span ng-if="item.unitPrice" style="{{$parent.delta(item) < 0 ? 'color: red;' : ''}}">
                                                                    {{delta(item) * item.quantity | currency : '$' : 2}}
                                                                </span>
                                                            </td>
                                                        }

                                                        <td style="text-align: right">
                                                            {{purchasingPriceInUSD(item) * item.quantity | currency : '$' : 2}}
                                                        </td>

                                                        <td style="text-align: right" ng-if="offerDataContainer.offerData.currency=='EUR'">
                                                            {{salePriceInUSD(item) * item.quantity | currency : '$' : 2}}
                                                            <br />
                                                            {{item.unitPrice * item.quantity / getTotalRow('saleAmount') * 100 | number: 1}}%
                                                        </td>

                                                        <td style="text-align: right">
                                                            {{item.unitPrice * item.quantity | currency : '$' : 2}}
                                                            <br />
                                                            {{item.unitPrice * item.quantity / getTotalRow('saleAmount') * 100 | number: 1}}%
                                                        </td>
                                                        <td style="text-align: right; ">
                                                            {{item.unitPrice * item.quantity * $parent.offerDataContainer.offerData.vat / 100 | currency : (offerDataContainer.offerData.currency == 'USD' ? '$' : '€') : 2}}
                                                        </td>
                                                        <td style="text-align: right; ">
                                                            {{item.unitPrice * item.quantity * (1 + $parent.offerDataContainer.offerData.vat / 100) | currency : (offerDataContainer.offerData.currency == 'USD' ? '$' : '€') : 2}}
                                                        </td>

                                                        <td style="text-align: right">
                                                            {{commissionInUSD(item) * item.quantity | currency : '$' : 2}}
                                                        </td>
                                                        <td style="text-align: right">
                                                            {{lcCostInUSD(item) * item.quantity | currency : '$' : 2}}
                                                        </td>
                                                        <td style="text-align: right">
                                                            {{interestInUSD(item) * item.quantity | currency : '$' : 2}}
                                                        </td>
                                                        <td style="text-align: right">
                                                            {{damagesCostInUSD(item)  * item.quantity | currency : '$' : 2}}
                                                        </td>
                                                        <td style="text-align: right">
                                                            {{transportationInUSD(item)  * item.quantity | currency : '$' : 2}}
                                                        </td>


                                                        <td>
                                                            <input class="form-control" type="text" name="clientArticleCode" ng-model="item.clientArticleCode" placeholder="Client art.code">
                                                            <input class="form-control" type="text" name="clientArticleName" ng-model="item.clientArticleName" placeholder="Client art.name">
                                                            <input class="form-control" type="text" name="clientOrderNumber" ng-model="item.clientOrderNumber" placeholder="Client order number">
                                                            <input class="form-control" type="text" name="clientEANCode" ng-model="item.clientEANCode" placeholder="Client ean code">
                                                        </td>
                                                        <td style="width: 150px;">
                                                            <span style="display: block;" ng-if="item.estimatedPurchasingPriceUpdatedBy">
                                                                <u>Est. pur price:</u>
                                                                <a ng-if="item.estimatedPurchasingPriceUpdatedByID" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{item.estimatedPurchasingPriceUpdatedByID}}" data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                                                    {{item.estimatedPurchasingPriceUpdatedBy}}
                                                                </a>
                                                            </span>
                                                            <font ng-if="item.estimatedPurchasingPriceRemark">{{item.estimatedPurchasingPriceRemark}}</font>

                                                            <br />

                                                            <span style="display: block;" ng-if="item.planingPurchasingPrice">
                                                                <u>Pur price source:</u>
                                                                <a ng-if="item.planingPurchasingPriceSelectedBy" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{item.planingPurchasingPriceSelectedBy}}" data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                                                    {{item.planingPurchasingPriceUpdatorName}} ({{item.planingPurchasingPriceSelectedDate}})
                                                                </a>
                                                            </span>

                                                            <br />

                                                            <span style="display: block;" ng-if="item.isApproved">
                                                                <u>Approved person:</u>
                                                                <a ng-if="item.isApproved" data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                                                    {{item.approverName}} ({{item.approvedDate}})
                                                                </a>
                                                            </span>
                                                        </td>

                                                        <td>&nbsp;</td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane" id="hb8">

                            <div class="smart-form">
                                <fieldset>
                                    <div class="row">

                                        <section class="col col-lg-6" ng-show="quicksearchModelSparepart.filters.filters.modelStatusID!=-2">
                                            <label class="input">
                                                <input type="text" placeholder="press enter to search all model or type at least 3 chars to search model" ng-model="quicksearchModelSparepart.modelNM" autocomplete="off" ng-keyup="quicksearchModelSparepart.event.searchBoxKeyUp($event)" id="txtModelSparepartNM" />
                                                <a ng-click="quicksearchModelSparepart.event.searchClick($event)" href="javascript:void(0);"> <i class="icon-append fa fa-search"></i></a>
                                            </label>
                                            <div id="model-sparepart-popup" class="popup-container-2">
                                                <div style="float: right; margin-bottom: 8px;">
                                                    <a ng-click="quicksearchModelSparepart.event.close($event, true)" class="btn btn-primary btn-xs" href="javascript:void(0);"><i class="fa fa-remove"></i> Close</a>
                                                </div>
                                                <div class="clear"></div>
                                                <div id="quickSearchModelSparepartGrid" class="tilsoft-table-wrapper">
                                                    <div class="tilsoft-table">
                                                        <div class="tilsoft-table-header" style="width: 360px;">
                                                            <div style="width: 80px; height: 50px;"></div>
                                                            <div style="width: 100px; height: 50px;"></div>
                                                            <div style="width: 100px; height: 50px;">Code</div>
                                                            <div style="height: 50px;">Name</div>
                                                        </div>
                                                        <div class="tilsoft-table-body" style="width: 360px;">
                                                            <table>
                                                                <tr ng-repeat="item in quicksearchModelSparepart.data">
                                                                    <td style="width: 80px; text-align: center;"><a ng-click="quicksearchModelSparepart.event.ok($event, item.modelID)" class="btn btn-primary btn-xs" href="javascript:void(0);"><i class="fa fa-check"></i> Select</a></td>
                                                                    <td style="width: 100px; text-align: center; vertical-align: middle;">
                                                                        <a href="{{item.fileLocation}}" data-featherlight="image">
                                                                            <img style="width: 95%;" ng-src="{{item.thumbnailLocation}}" />
                                                                        </a>
                                                                    </td>
                                                                    <td style="width: 100px;">{{item.modelUD}}</td>
                                                                    <td>{{item.modelNM}}</td>
                                                                </tr>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </section>

                                        <section class="col col-lg-6" ng-show="quicksearchModelSparepart.filters.filters.modelStatusID==-2">
                                            <label class="input">
                                                <input type="text" placeholder="press enter to search all physical warehouse product or type at least 3 chars to search  physical warehouse product" autocomplete="off" ng-keyup="quicksearchWarehouseItem.event.searchBoxKeyUp($event,'SPAREPART')" ng-model="quicksearchWarehouseItem.filters.filters.searchQuery" />
                                                <a ng-click="quicksearchWarehouseItem.event.searchClick($event,'SPAREPART')" href="javascript:void(0);"> <i class="icon-append fa fa-search"></i></a>
                                            </label>
                                            <div id="quicksearch-warehouse-sparepart"></div>
                                        </section>

                                        <section class="col col-lg-6">
                                            <div>
                                                <ul ng-repeat="item in offerDataContainer.supportData.modelStatuses" style="float:left">
                                                    <li style="display:inline"><input type="radio" name="sparepart-filter-model" id="sparepart-model-filter-{{item.modelStatusID}}" ng-model="$parent.quicksearchModelSparepart.filters.filters.modelStatusID" value="{{item.modelStatusID}}" /> <label for="sparepart-model-filter-{{item.modelStatusID}}">{{item.modelStatusNM}} &nbsp;&nbsp;</label></li>
                                                </ul>
                                            </div>
                                        </section>

                                    </div>
                                </fieldset>
                            </div>

                            <div class="row">
                                <div class="col-sm-12 m-bottom-15">
                                    <div avs-scroll grid-handler="nullHandler" id="OffeLineSparepartGrid" class="tilsoft-table-wrapper">
                                        <div class="tilsoft-table">
                                            <div class="tilsoft-table-header">
                                                <div style="width: 65px;"></div>
                                                <div style="width: 40px;">No</div>
                                                <div style="width: 250px;">Description</div>
                                                <div style="width: 60px;">Qnt</div>
                                                <div style="width: 70px;">Sales Price <br />({{offerDataContainer.offerData.currency}})</div>
                                                <div style="width: 150px;">Client Info</div>
                                                <div style="width: 150px;">remark</div>
                                                <div>&nbsp;</div>
                                            </div>
                                            <div class="tilsoft-table-body">
                                                <table>
                                                    <tr ng-repeat="item in offerDataContainer.offerData.offerLineSpareparts">
                                                        <td style="text-align: center; ">
                                                            <a style="width: 50px; margin-bottom: 5px; display: block;" class="btn btn-primary btn-xs font-11 {{item.isCreatedOrder?'disabled':''}}" href="#" ng-click="editOfferLineSparepartForm.event.load($event, item.offerLineSparePartID)" title="Edit"><i class="fa fa-pencil"></i> Edit</a>
                                                            <a style="width: 50px; margin-bottom: 5px; display: block;" class="btn btn-danger btn-xs font-11 {{item.isCreatedOrder?'disabled':''}}" href="#" ng-click="removeOfferLineSparepart($event, item.offerLineSparePartID)" title="Remove"><i class="fa fa-times"></i> Del</a>
                                                        </td>
                                                        <td><input class="form-control" type="text" name="rowIndex" ng-model="item.rowIndex" style="text-align:right"></td>
                                                        <td>
                                                            <strong>{{item.articleCode}}</strong>
                                                            <br />
                                                            {{item.description}}
                                                        </td>
                                                        <td><input class="form-control" type="text" name="quantity" ng-model="item.quantity" style="text-align:right"></td>
                                                        <td>
                                                            <input type="text" class="form-control" ng-model="item.unitPrice" style="text-align:right" avs-number-2 ng-decimal="2" />
                                                        </td>
                                                        <td>
                                                            <input class="form-control" type="text" name="clientArticleCode" ng-model="item.clientArticleCode" placeholder="Client art.code">
                                                            <input class="form-control" type="text" name="clientArticleName" ng-model="item.clientArticleName" placeholder="Client art.name">
                                                            <input class="form-control" type="text" name="clientEANCode" ng-model="item.clientEANCode" placeholder="Client ean code">
                                                        </td>
                                                        <td><input class="form-control" type="text" name="remark" ng-model="item.remark"></td>
                                                        <td>&nbsp;</td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane" id="sampletab">

                            <div class="smart-form">
                                <fieldset>
                                    <section>
                                        <label class="input">
                                            <input type="text" placeholder="press enter to search all sample product or type at least 3 chars to filter" ng-model="quicksearchSampleProduct.query" autocomplete="off" ng-keyup="quicksearchSampleProduct.event.searchBoxKeyUp($event)" id="txtSampleProductQuery" />
                                            <a ng-click="quicksearchSampleProduct.event.searchClick($event)" href="javascript:void(0);"> <i class="icon-append fa fa-search"></i></a>
                                        </label>
                                        <div id="sample-product-popup" class="popup-container-2">
                                            <div style="float: right; margin-bottom: 8px;">
                                                <a ng-click="quicksearchSampleProduct.event.close($event, true)" class="btn btn-danger btn-xs" href="javascript:void(0);"><i class="fa fa-remove"></i> Close</a>
                                                <a ng-click="quicksearchSampleProduct.event.multiSelected($event)" class="btn btn-primary btn-xs" href="javascript:void(0);"><i class="fa fa-check"></i> OK</a>
                                            </div>
                                            <div class="clear"></div>
                                            <div id="quickSearchSampleProductGrid" class="tilsoft-table-wrapper">
                                                <div class="tilsoft-table">
                                                    <div class="tilsoft-table-header" style="width: 570px;">
                                                        <div style="width: 50px;"></div>
                                                        <div style="width: 100px;"></div>
                                                        <div style="width: 120px;">Sample Order</div>
                                                        <div style="width: 300px;">Sample Item</div>
                                                        <div></div>
                                                    </div>
                                                    <div class="tilsoft-table-body" style="width: 570px;">
                                                        <table>
                                                            <tr ng-repeat="item in quicksearchSampleProduct.data">
                                                                <td style="width: 50px;">
                                                                    <label class="checkbox">
                                                                        <input type="checkbox" ng-model="item.isSelected">
                                                                        <i></i>
                                                                    </label>
                                                                </td>
                                                                <td style="width: 100px; text-align: center; vertical-align: middle;">
                                                                    <a href="{{item.fileLocation}}" data-featherlight="image">
                                                                        <img style="width: 95%;" ng-src="{{item.thumbnailLocation}}" />
                                                                    </a>
                                                                </td>
                                                                <td style="width: 120px;">{{item.sampleOrderUD}}</td>
                                                                <td style="width: 300px;">
                                                                    <strong>{{item.sampleProductUD}}</strong>
                                                                    <br />
                                                                    {{item.articleDescription}}
                                                                </td>
                                                                <td></td>
                                                            </tr>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </section>
                                </fieldset>
                            </div>

                            <div class="row">
                                <div class="col-sm-12 m-bottom-15">
                                    <div id="OffeLineSampleProductGrid" class="tilsoft-table-wrapper">
                                        <div class="tilsoft-table">
                                            <div class="tilsoft-table-header" style="width: 920px; ">
                                                <div style="width: 70px; "></div>
                                                <div style="width: 70px; "></div>
                                                <div style="width: 70px;" class="sorting_asc" data-colname="rowIndex">Index</div>
                                                <div style="width: 80px;" class="sorting" data-colname="articleCode">Sample Order</div>
                                                <div style="width: 250px;" class="sorting" data-colname="description">Item Description</div>
                                                <div style="width: 70px;" class="sorting" data-colname="quantity">Qnt</div>
                                                <div style="width: 100px;" class="sorting" data-colname="unitPrice">Price</div>
                                                <div style="width: 200px;" class="sorting" data-colname="remark">Remark</div>
                                                <div></div>
                                            </div>
                                            <div class="tilsoft-table-body" style="width: 920px; ">
                                                <table>
                                                    <tr ng-repeat="item in offerDataContainer.offerData.offerLineSampleProductDTOs">
                                                        <td style="width: 70px; text-align: center; ">
                                                            <a class="btn btn-danger btn-xs font-11" href="#" ng-click="removeOfferLineSampleProduct($event, item.offerLineSampleProductID)" title="Remove"><i class="fa fa-times"></i>Remove</a>
                                                        </td>
                                                        <td style="width: 70px; text-align: center; vertical-align: middle;">
                                                            <a href="{{item.fileLocation}}" data-featherlight="image">
                                                                <img style="width: 95%;" ng-src="{{item.thumbnailLocation}}" />
                                                            </a>
                                                        </td>
                                                        <td style="width: 70px;"><input class="form-control" type="text" name="rowIndex" ng-model="item.rowIndex" style="text-align:right"></td>
                                                        <td style="width: 80px;">{{item.sampleOrderUD}}</td>
                                                        <td style="width: 250px;">
                                                            <strong>{{item.sampleProductUD}}</strong>
                                                            <br />
                                                            {{item.articleDescription}}
                                                        </td>
                                                        <td style="width: 70px;"><input class="form-control" type="text" name="quantity" ng-model="item.quantity" style="text-align:right"></td>
                                                        <td style="width: 100px;">
                                                            <div class="input-group">
                                                                <span class="input-group-addon">{{offerDataContainer.offerData.currency == 'USD' ? '$' : ''}} {{offerDataContainer.offerData.currency == 'EUR' ? '€' : ''}}</span>
                                                                <input class="form-control" type="text" name="unitPrice" ng-model="item.unitPrice" style="text-align:right" furnindo-currency>
                                                            </div>
                                                        </td>
                                                        <td style="width: 200px;"><input class="form-control" type="text" name="remark" ng-model="item.remark"></td>
                                                        <td></td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </article>

    <div id="popup-warehouseItem" class="popup-container-2">
        <div style="float: right; margin-bottom: 8px;">
            <a ng-click="quicksearchWarehouseItem.event.close($event, true)" class="btn btn-danger btn-xs" href="javascript:void(0);"><i class="fa fa-remove"></i> Close</a>
            <a ng-click="quicksearchWarehouseItem.event.multiSelected($event)" class="btn btn-primary btn-xs" href="javascript:void(0);"><i class="fa fa-check"></i> OK</a>
        </div>
        <div class="clear"></div>
        <div id="quickSearchResultGrid-warehouseItem" class="tilsoft-table-wrapper">
            <div class="tilsoft-table">
                <div class="tilsoft-table-header" style="width: 360px;">
                    <div style="width: 60px; height: 50px;"></div>
                    <div style="width: 100px; height: 50px;"></div>
                    <div style="width: 100px; height: 50px;">ArticleCode</div>
                    <div style=" height: 50px;">Description</div>
                </div>
                <div class="tilsoft-table-body" style="width: 360px;">
                    <table>
                        <tr ng-repeat="item in quicksearchWarehouseItem.data">
                            <td style="width: 60px; text-align: center; "><input type="checkbox" ng-model="item.isSelected" /></td>
                            <td style="width: 100px; text-align: center; vertical-align: middle;">
                                <a href="{{item.selectedFullImage}}" data-featherlight="image">
                                    <img style="width: 95%;" ng-src="{{item.selectedThumbnailImage}}" />
                                </a>
                            </td>

                            <td style="width: 100px;">{{item.articleCode}}</td>
                            <td>{{item.description}}</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="frmPrintOption" class="modal fade" style="display:none" data-backdrop="none">
        <div class="modal-dialog">
            <div class="modal-content" style="margin-top:90px !important">
                <div class="modal-header">
                    <h4 id="myModalLabel" class="modal-title">Print Offer</h4>
                </div>
                <div class="modal-body smart-form">
                    <div>
                        <div class="widget-body no-padding">
                            <div class="row">
                                <div class="col col-lg-12">
                                    <ul style="padding: 0px;">
                                        <li style="display:block" ng-repeat="item in printOptions">
                                            <input type="radio" name="radio-print" id="print-option-{{item.printOptionValue}}" ng-value="item.printOptionValue" ng-model="$parent.printOptionValue" /><i> {{item.printOptionText}}</i>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="smart-form" ng-repeat="item in printOptionsImage">
                        <div class="col col-lg-4">
                            <input type="radio" name="radio-print-image" id="print-option-image-{{item.printOptionImageValue}}" ng-value="item.printOptionImageValue" ng-model="$parent.printOptionImageValue" /><i> {{item.printOptionImageText}}</i>
                        </div>
                    </div>
                    <button class="btn btn-primary" type="button" ng-click="printSelectedOffer()">
                        Print
                    </button>
                </div>
            </div>
        </div>
    </div>



</form>

<div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="frmOfferLineSalePriceHistory" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="margin-top:90px !important">
            <div class="modal-header">
                <button aria-hidden="true" data-dismiss="modal" class="close" type="button">
                    ×
                </button>
                <h4 class="modal-title">Sales Price History</h4>
            </div>
            <div class="modal-body smart-form" style="padding: 0px;">
                <div>
                    <div class="widget-body">
                        <table class="table table-bordered table-striped" style="box-sizing: border-box;">
                            <thead>
                                <tr>
                                    <th style="width: 150px;">Sales Price</th>
                                    <th>Tracking</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="item in currentOfferLineItem.offerLineSalePriceHistoryDTOs">
                                    <td style="text-align: right;">{{item.salePrice | currency : ($parent.offerDataContainer.offerData.currency == 'USD' ? '$' : '€') : 2}}</td>
                                    <td>
                                        <a ng-if="item.updatedBy" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{item.updatedBy}}" data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                            {{item.updatorName}}
                                        </a> on {{item.updatedDate}}
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <div style="padding: 15px">
                            <h4 class="modal-title">Last Season Price</h4>
                        </div>
                        <table class="table table-bordered table-striped" style="box-sizing: border-box;">
                            <thead>
                                <tr>
                                    <th style="width: 150px;">Sales Price</th>
                                    <th>Offer</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="item in currentOfferLineItem.offerLineSalePriceHistoryLastSeasonDTOs">
                                    <td style="text-align: right;">{{item.lastUnitPrice | currency : (item.currency == 'USD' ? '$' : '€') : 2}}</td>
                                    <td>
                                        <a target="_blank" href="@Url.Action("Edit", "Offer", new { id = UrlParameter.Optional })/{{item.offerID}}/1">{{item.offerUD}}</a>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

<div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="frmAvailablePurchasingPrice" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="margin-top:90px !important">
            <div class="modal-header">
                <button aria-hidden="true" data-dismiss="modal" class="close" type="button">
                    ×
                </button>
                <h4 class="modal-title">Available Purchasing Price</h4>
            </div>
            <div class="modal-body smart-form" style="padding: 0px;">
                <div>
                    <div class="widget-body">
                        <table class="table table-bordered table-striped" style="box-sizing: border-box;">
                            <thead>
                                <tr>
                                    <th style="width: 50px;"></th>
                                    <th style="width: 100px;">Factory</th>
                                    <th style="width: 100px;">Price</th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody ng-repeat="category in offerDataContainer.supportData.planingPurchasingPriceSourceDTOs">
                                <tr>
                                    <td colspan="5">
                                        {{category.planingPurchasingPriceSourceNM}}
                                    </td>
                                </tr>
                                <tr ng-repeat="item in $parent.currentOfferLineItem.planingPurchasingPriceDTOs | filter: {planingPurchasingPriceSourceID : category.planingPurchasingPriceSourceID}" ng-if="item.planingPurchasingPriceSourceID !== 3">
                                    <td style="text-align: center;">
                                        <a href="javascript:void(0)" class="btn btn-default btn-xs" ng-click="$parent.selectPlaningPurchasingPrice(item)">Select</a>
                                    </td>
                                    <td style="text-align: center;">
                                        <select style="padding: 3px;" ng-if="item.planingPurchasingPriceSourceID === 3" ng-options="factory.factoryID as factory.factoryUD for factory in $parent.offerDataContainer.factoryDTOs" ng-model="item.factoryID">
                                            <option></option>
                                        </select>
                                        <font ng-if="item.planingPurchasingPriceSourceID !== 3">{{item.factoryUD}}</font>
                                    </td>
                                    <td style="text-align: right;">
                                        <input ng-if="item.planingPurchasingPriceSourceID === 3" type="text" avs-currency-2 ng-model="item.purchasingPrice" style="padding: 2px; text-align: right;" />
                                        <font ng-if="item.planingPurchasingPriceSourceID !== 3">{{item.purchasingPrice | currency:'$':2}}</font>
                                    </td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr ng-if="category.planingPurchasingPriceSourceID === 3">
                                    <td style="text-align: center;">
                                        <a href="javascript:void(0)" class="btn btn-default btn-xs {{$parent.currentOfferLineItem.estimatedPurchasingPrice && $parent.currentOfferLineItem.estimatedPurchasingPriceFromFactoryID ? '' : 'disabled'}}" ng-click="$parent.selectPlaningPurchasingPrice(null)">Select</a>
                                    </td>
                                    <td style="text-align: center;">
                                        <select style="padding: 3px;" ng-options="factory.factoryID as factory.factoryUD for factory in $parent.offerDataContainer.factoryDTOs" ng-model="$parent.currentOfferLineItem.estimatedPurchasingPriceFromFactoryID">
                                            <option></option>
                                        </select>
                                    </td>
                                    <td style="text-align: right;">
                                        <input type="text" avs-currency-2 ng-model="$parent.currentOfferLineItem.estimatedPurchasingPrice" style="padding: 2px; text-align: right;" />
                                    </td>
                                    <td><input type="text" ng-model="$parent.currentOfferLineItem.estimatedPurchasingPriceRemark" style="padding: 2px;" placeholder="Remark" /></td>
                                    <td>
                                        <a ng-if="$parent.currentOfferLineItem.estimatedPurchasingPriceUpdatedByID" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{$parent.currentOfferLineItem.estimatedPurchasingPriceUpdatedByID}}" data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                            Updated by {{$parent.currentOfferLineItem.estimatedPurchasingPriceUpdatedBy}}
                                        </a>
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="5" ng-if="($parent.currentOfferLineItem.planingPurchasingPriceDTOs | filter: {planingPurchasingPriceSourceID : category.planingPurchasingPriceSourceID}).length === 0 && item.planingPurchasingPriceSourceID !== 3" style="text-align: center;">
                                        N/A
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

<div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="frmEditEstPurchasingPrice" class="modal fade">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="margin-top:90px !important">
            <div class="modal-header">
                <button aria-hidden="true" data-dismiss="modal" class="close" type="button">
                    ×
                </button>
                <h4 class="modal-title">Edit Est Purchasing Price</h4>
            </div>
            <div class="modal-body smart-form" style="padding: 0px;">
                <div>
                    <div class="widget-body">
                        <fieldset>
                            <section>
                                <label class="label">Est purchasing price</label>
                                <label class="input">
                                    <input type="text" avs-currency-2 ng-currency-symbol="$" ng-model="currentOfferLineItem.estimatedPurchasingPrice" />
                                </label>
                            </section>

                            <section>
                                <label class="label">Factory</label>
                                <label class="select">
                                    <select ng-options="factory.factoryID as factory.factoryUD for factory in offerDataContainer.factoryDTOs" ng-model="currentOfferLineItem.estimatedPurchasingPriceFromFactoryID">
                                        <option></option>
                                    </select>
                                    <i></i>
                                </label>
                            </section>
                        </fieldset>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" ng-click="frmEditEstPurchasingPrice_onOKClick()">
                    OK
                </button>
                <button type="button" class="btn btn-default" data-dismiss="modal">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

@section pagepopup2 {

    <div id="productView" class="row" style="display: none; margin-top: 10px;">
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="jarviswidget" id="wid-id-product-information" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
                <header>
                    <h2>Product Info</h2>
                </header>
                <div>
                    <div class="widget-body no-padding">
                        <div class="smart-form">
                            <fieldset>
                                <div class="row" style="margin: 0px;">
                                    <div>
                                        <div class="full-panel">
                                            <h4>General</h4>
                                            <div class="filter-list-container" style="min-height: 0px;">
                                                <span class="form-control"><b>ARTICLECODE : </b>{{editOfferLineForm.offerLineData.articleCode}}</span>
                                                <br />
                                                <span class="form-control"><b>DESCRIPTION : </b>{{editOfferLineForm.offerLineData.description}}</span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="furnindo-filter">
                                        <div class="filter-row">
                                            <div class="filter-panel">
                                                <h4>Product Option</h4>
                                                <div class="filter-list-container">
                                                    <ul>
                                                        <li><span class="form-control"><b>MATERIAL : </b>{{editOfferLineForm.offerLineData.materialText}}</span></li>
                                                    </ul>

                                                    <ul>
                                                        <li><span class="form-control"><b>FRAME : </b>{{editOfferLineForm.offerLineData.frameText}}</span></li>
                                                    </ul>

                                                    <ul>
                                                        <li><span class="form-control"><b>SUB MATERIAL : </b>{{editOfferLineForm.offerLineData.subMaterialText}}</span></li>
                                                    </ul>

                                                    <ul>
                                                        <li><span class="form-control"><b>CUSHION : </b>{{editOfferLineForm.offerLineData.cushionText}}</span></li>
                                                    </ul>

                                                    <ul>
                                                        <li><span class="form-control"><b>FSC CLAIM: </b>{{editOfferLineForm.offerLineData.fscText}}</span></li>
                                                    </ul>

                                                    <ul>
                                                        <li><span class="form-control"><b>PACKAGING: </b>{{editOfferLineForm.offerLineData.packagingMethodText}}</span></li>
                                                    </ul>
                                                </div>
                                            </div>
                                            <div class="display-panel">
                                                <span class="selection"></span>
                                                <ul>
                                                    <li>
                                                        <span>PRODUCT</span>
                                                        <img ng-src="{{editOfferLineForm.offerLineData.productThumbnailLocation}}" />
                                                        <span class="text">{{editOfferLineForm.offerLineData.modelUD}}</span>
                                                        <a class="zoom" href="{{editOfferLineForm.offerLineData.productFileLocation}}" data-featherlight="image">
                                                            <span class="fa fa-search-plus"></span>
                                                        </a>
                                                    </li>

                                                    <li>
                                                        <span>FRAME</span>
                                                        <img ng-src="{{editOfferLineForm.offerLineData.frameMaterialThumbnailLocation}}" />
                                                        <span class="text">{{editOfferLineForm.offerLineData.frameText}}</span>
                                                        <a class="zoom" href="{{editOfferLineForm.offerLineData.frameMaterialThumbnailLocation}}" data-featherlight="image">
                                                            <span class="fa fa-search-plus"></span>
                                                        </a>
                                                    </li>

                                                    <li>
                                                        <span>MATERIAL</span>
                                                        <img ng-src="{{editOfferLineForm.offerLineData.materialThumbnailLocation}}" />
                                                        <span class="text">{{editOfferLineForm.offerLineData.materialText}}</span>
                                                        <a class="zoom" href="{{editOfferLineForm.offerLineData.materialThumbnailLocation}}" data-featherlight="image">
                                                            <span class="fa fa-search-plus"></span>
                                                        </a>
                                                    </li>

                                                    <li>
                                                        <span>SUB MATERIAL</span>
                                                        <img ng-src="{{editOfferLineForm.offerLineData.subMaterialColorThumbnailLocation}}" />
                                                        <span class="text">{{editOfferLineForm.offerLineData.subMaterialText}}</span>
                                                        <a class="zoom" href="{{editOfferLineForm.offerLineData.subMaterialColorThumbnailLocation}}" data-featherlight="image">
                                                            <span class="fa fa-search-plus"></span>
                                                        </a>
                                                    </li>

                                                    <li>
                                                        <span>BACK CUSHION</span>
                                                        <img ng-src="{{editOfferLineForm.offerLineData.backCushionThumbnailLocation}}" />
                                                        <a class="zoom" href="{{editOfferLineForm.offerLineData.backCushionThumbnailLocation}}" data-featherlight="image">
                                                            <span class="fa fa-search-plus"></span>
                                                        </a>
                                                    </li>

                                                    <li>
                                                        <span>SEAT CUSHION</span>
                                                        <img ng-src="{{editOfferLineForm.offerLineData.seatCushionThumbnailLocation}}" />
                                                        <a class="zoom" href="{{editOfferLineForm.offerLineData.seatCushionThumbnailLocation}}" data-featherlight="image">
                                                            <span class="fa fa-search-plus"></span>
                                                        </a>
                                                    </li>

                                                    <li>
                                                        <span>FABRIC COLOR</span>
                                                        <img ng-src="{{editOfferLineForm.offerLineData.cushionColorThumbnailLocation}}" />
                                                        <span class="text">{{editOfferLineForm.offerLineData.cushionText}}</span>
                                                        <a class="zoom" href="{{editOfferLineForm.offerLineData.cushionColorThumbnailLocation}}" data-featherlight="image">
                                                            <span class="fa fa-search-plus"></span>
                                                        </a>
                                                    </li>

                                                </ul>
                                                <div class="clear"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                            <footer>
                                <button class="btn btn-primary" type="button" ng-click="editOfferLineForm.event.showEdit($event)">
                                    Change
                                </button>
                                <button class="btn btn-primary" type="button" ng-click="editOfferLineForm.event.getDefaultOption()">
                                    Get Default Option
                                </button>
                                <button class="btn btn-default" type="button" ng-click="editOfferLineForm.event.cancelView($event)">
                                    Back
                                </button>

                            </footer>
                        </div>
                    </div>
                </div>
            </div>
        </article>
    </div>

    @Html.Partial("~/Views/Shared/_Controls/_ProductAttributeWizard.cshtml")

    <div id="sparepartView" class="row" style="display: none; margin-top: 10px;">
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="jarviswidget" id="wid-id-product-information" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
                <header>
                    <h2>Sparepart Info</h2>
                </header>
                <div>
                    <div class="widget-body no-padding">
                        <div class="smart-form">
                            <fieldset>
                                <div class="row" style="margin: 0px;">
                                    <div>
                                        <div class="full-panel">
                                            <h4>General</h4>
                                            <div class="filter-list-container" style="min-height: 0px;">
                                                <span class="form-control"><b>ARTICLECODE : </b>{{editOfferLineSparepartForm.offerLineSparepartData.articleCode}}</span>
                                                <br />
                                                <span class="form-control"><b>DESCRIPTION : </b>{{editOfferLineSparepartForm.offerLineSparepartData.description}}</span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="furnindo-filter">
                                        <div class="filter-row">
                                            <div class="filter-panel">
                                                <h4>PART DESCRIPTION</h4>
                                                <div class="filter-list-container">
                                                    <ul>
                                                        <li>
                                                            <select class="form-control" name="partID" ng-model="editOfferLineSparepartForm.offerLineSparepartData.partID" ng-options="sItem.modelSparepartID as sItem.partNM for sItem in editOfferLineSparepartForm.modelSparepart" ng-change="editOfferLineSparepartForm.event.changeModelSparepart(editOfferLineSparepartForm.offerLineSparepartData.partID)">
                                                                <option value=""></option>
                                                            </select>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                            <footer>
                                <button class="btn btn-primary" type="button" ng-click="editOfferLineSparepartForm.event.OK($event)">
                                    OK
                                </button>
                                <button class="btn btn-default" type="button" ng-click="editOfferLineSparepartForm.event.OK($event)">
                                    BACK
                                </button>
                            </footer>
                        </div>
                    </div>
                </div>
            </div>
        </article>
    </div>

    <div class="modal fade" id="PurchasingPriceHelp" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Purchasing Price</h4>
                </div>
                <div class="modal-body">
                    <p>
                        Purchasing price <strong>only appear after you save the offer</strong>, you can manually select the best purchasing price by click on the auto selected purchasing when it's apprear
                        <br /><br />
                        The purchasing price source will be retrieved base on the following priority:
                        <br />
                        1.Confirmed Price
                        <br />
                        2.Configured purchasing price in Model module (already confirmed by factory - Hannah pdf price)
                        <br />
                        3.Estimated purchasing price manually input in the offer
                        <br />
                        4.Related price in this season
                        <br />
                        5.Pending factory price for this season
                        <br />
                        6.Related price in last season
                        <br />
                        7.Estimated purchasing price in the estimated price module
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Close
                    </button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    <div class="modal fade" id="CommissionHelp" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Commission Cost</h4>
                </div>
                <div class="modal-body">
                    <p>
                        COMMISSION = SALE AMOUNT (USD) * % COMMISSION has defined on OFFER
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Close
                    </button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    <div class="modal fade" id="LCCostHelp" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">LC Cost</h4>
                </div>
                <div class="modal-body">
                    <p>
                        LC COST: two cases:
                        <br />
                        1. IF user has defined LCCOST percent on Client module. <b>LC COST = SALEAMOUNT (USD) * LCCOST of Client</b>
                        <br />
                        2. IF PaymentType of Offer is "LC". <b>LC COST = SALEAMOUNT (USD) * 1%</b>
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Close
                    </button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    <div class="modal fade" id="InterestHelp" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Interest Cost</h4>
                </div>
                <div class="modal-body">
                    <p>
                        INTEREST COST: two cases
                        <br />
                        1. IF user has defined INTEREST COST percent on Client module. <b>INTEREST COST = SALEAMOUNT (USD) * INTEREST COST of Client</b>
                        <br />
                        2. Based on Payment Term. <b>INTEREST COST = SALEAMOUNT (USD) * (1 - Down Value) * Term of payment in days * 4,5% / 365</b>
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="DamagesHelp" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Damages Cost</h4>
                </div>
                <div class="modal-body">
                    <p>
                        DAMAGE COST = PURCHASE AMOUNT * 1,25%
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="TransportCostHelp" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">Transport Cost</h4>
                </div>
                <div class="modal-body">
                    <p>
                        TRANSPORT COST <b>(Only for EUR)</b> = ORDER QNT / LOAD ABILITY OF 40HC * TransportFee/Cont40HC has defined on OFFER * Exchang Rate
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>

}


@section FormAction {
    <ul id="sparks">

        <li class="sparks-info">
            <a href="javascript:void(0)" ng-click="refresh()" class="btn btn-default" title="Refresh"><i class="fa fa-refresh"></i></a>
        </li>

        <li class="sparks-info">
            <a href="#" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Update, HttpContext.Current))" title="Save" ng-click="update($event)"><i class="fa fa-save"></i></a>
        </li>

        <li class="sparks-info">
            <a href="@Url.Action("Index", "Offer")" class="btn btn-default" title="Back to offer"><i class="fa fa-arrow-left"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default@(ViewBag.ID==0?" disabled":"") @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Approve, HttpContext.Current))" title="Copy" style="color: #0066ff; " ng-click="copy($event)"><i class="fa fa-files-o"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default@(ViewBag.ID==0?" disabled":"") @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Approve, HttpContext.Current))" title="New Version" style="color: #0066ff; " ng-click="newVersion($event)"><i class="fa fa-clipboard"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default @(ViewBag.ID==0?" disabled":"") @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Approve, HttpContext.Current))" title="Confirm" style="color: #0066ff; " ng-click="confirm($event)"><i class="fa fa-check"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Request for approval" style="color: #31b404;" ng-click="sendNotificationApproveOffer(offerDataContainer.offerData.offerID);" ng-disabled="!offerDataContainer.offerData.isActiveApprovalOffer || !offerDataContainer.offerData.isActiveApproveOffer"><i class="fa fa-check"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default@(ViewBag.ID==0?" disabled":"") @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Approve, HttpContext.Current))" title="Revise" style="color: #ff0000;" ng-click="revise($event)"><i class="fa fa-reply"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default@(ViewBag.ID==0?" disabled":"") @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Delete, HttpContext.Current))" title="Delete" style="color: #ff0000;" ng-click="delete($event)"><i class="fa fa-times"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default@(ViewBag.ID==0?" disabled":"") @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Print, HttpContext.Current))" title="Print offer" ng-click="showPrintOptionForm()"><i class="fa fa-print"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0)" class="btn btn-default" title="Export Excel(New Version)" style="color: #0c68f1" ng-click="exportExcelNewVersion()"><i class="fa fa-file-excel-o"></i></a>
        </li>

        <li class="sparks-info">
            <a href="#" class="btn btn-default" title="Import to from Wex" ng-click="importFromWexForm.load()" style="color: #2fbf13"><i class="fa fa-file-excel-o"></i></a>
        </li>

        <li class="sparks-info">
            <a href="#" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Print, HttpContext.Current))" title="Export Excel for POB Item Only" style="color: #31B404" ng-click="printExcelFOBItemOnly(offerDataContainer.offerData.offerID)"><i class="fa fa-file-excel-o"></i></a>
        </li>

        <li class="sparks-info">
            <a href="@Url.Action("PI", "SaleOrder")/@ViewBag.ID" class="btn btn-default" title="Go to PI" style="color: #0066ff;" target="_blank"><i class="fa fa-arrow-right"></i></a>
        </li>
    </ul>
}

@section pagejs {
    <script src="~/Angular/app/offer/service.js?c=@System.Guid.NewGuid().ToString().Replace("-", "")"></script>
    <script src="~/Angular/app/support/service.js?c=@System.Guid.NewGuid().ToString().Replace("-","")"></script>
    <script type="text/javascript">

        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            scope.$apply(function () {
                scope.refreshGrid();
            });
        });

        //var offerLineGrid = jQuery('#offerLineGrid').scrollableTable(null,function(sortedBy, sortedDirection){
        //    var scope = angular.element(jQuery('body')).scope();
        //    datasource = scope.offerDataContainer.offerData.offerLines;
        //    if (sortedDirection == 'asc') {
        //        datasource.sort(function(a,b){
        //            return a[sortedBy] > b[sortedBy] ? 1: -1;
        //        });
        //    }
        //    else if (sortedDirection == 'desc') {
        //        datasource.sort(function(a,b){
        //            return a[sortedBy] < b[sortedBy] ? 1: -1;
        //        });
        //    }
        //    scope.$apply();
        //});

        var OffeLineSparepartGrid = jQuery('#OffeLineSparepartGrid').scrollableTable(null,function(sortedBy, sortedDirection){
            var scope = angular.element(jQuery('body')).scope();
            datasource = scope.offerDataContainer.offerData.offerLineSpareparts;
            if (sortedDirection == 'asc') {
                datasource.sort(function(a,b){
                    return a[sortedBy] > b[sortedBy] ? 1: -1;
                });
            }
            else if (sortedDirection == 'desc') {
                datasource.sort(function(a,b){
                    return a[sortedBy] < b[sortedBy] ? 1: -1;
                });
            }
            scope.$apply();
        });

        var quickSearchClientGrid = jQuery('#quickSearchClientTable').scrollableTable(
        function(currentPage){
            var scope = angular.element(jQuery('body')).scope();
            scope.$apply(function(){
                scope.quicksearchClient.filters.pageIndex = currentPage;
                scope.quicksearchClient.method.searchClient();
            });
        },
        function(sortedBy, sortedDirection){
                //do nothing
            }
        );

    var quickSearchModelGrid = jQuery('#quickSearchModelGrid').scrollableTable2(
        'quicksearchModel.filters.pageIndex',
        'quicksearchModel.totalPage',
        function(currentPage){
            var scope = angular.element(jQuery('body')).scope();
            scope.$apply(function(){
                scope.quicksearchModel.filters.pageIndex = currentPage;
                scope.quicksearchModel.method.searchModel();
            });
        },
        function(sortedBy, sortedDirection){
        }
    );

    var quickSearchModelSparepartGrid = jQuery('#quickSearchModelSparepartGrid').scrollableTable2(
        'quicksearchModelSparepart.filters.pageIndex',
        'quicksearchModelSparepart.totalPage',
        function(currentPage){
            var scope = angular.element(jQuery('body')).scope();
            scope.$apply(function(){
                scope.quicksearchModelSparepart.filters.pageIndex = currentPage;
                scope.quicksearchModelSparepart.method.searchModel();
            });
        },
        function(sortedBy, sortedDirection){
        }
    );

    var quickSearchSampleProductGrid = jQuery('#quickSearchSampleProductGrid').scrollableTable2(
        'quicksearchSampleProduct.filters.pageIndex',
        'quicksearchSampleProduct.totalPage',
        function(currentPage){
            var scope = angular.element(jQuery('body')).scope();
            scope.$apply(function(){
                scope.quicksearchSampleProduct.filters.pageIndex = currentPage;
                scope.quicksearchSampleProduct.method.search();
            });
        },
        function(sortedBy, sortedDirection){
        }
    );

    var quickSearchResultGridWarehouseItem = jQuery('#quickSearchResultGrid-warehouseItem').scrollableTable2(
            'quicksearchWarehouseItem.filters.pageIndex',
            'quicksearchWarehouseItem.totalPage',
            function (currentPage) {
                var scope = angular.element(jQuery('body')).scope();
                scope.$apply(function () {
                    scope.quicksearchWarehouseItem.filters.pageIndex = currentPage;
                    scope.quicksearchWarehouseItem.method.search();
                });
            },
            function (sortedBy, sortedDirection) {
                var scope = angular.element(jQuery('body')).scope();
                scope.$apply(function () {
                    scope.quicksearchWarehouseItem.filters.sortedDirection = sortedDirection;
                    scope.quicksearchWarehouseItem.filters.pageIndex = 1;
                    scope.quicksearchWarehouseItem.filters.sortedBy = sortedBy;
                    scope.quicksearchWarehouseItem.method.search();
                });
            }
        );

    //drag and drop offerline
    //updateIndex = function(e, ui) {
    //    $('td.index', ui.item.parent()).each(function (i) {
    //        $(this).find('input').val(i+1);
    //        $(this).find('input').trigger('input')
    //    });
    //};
    //$("#table-sort tbody").sortable({
    //    stop: updateIndex
    //});
    function drag(){
        updateIndex = function(e, ui) {
            $('td.index', ui.item.parent()).each(function (i) {
                $(this).find('input').val(i+1);
                $(this).find('input').trigger('input')
            });
        };
        $("#table-sort tbody").sortable({
            stop: updateIndex
        });
    }

    function drop(){
        $("#table-sort tbody").sortable("destroy");
    }

    offerService.serviceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/offer/';
    offerService.supportServiceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/support/';
    offerService.token = '@Session[Frontend.Customize.Common.ProjectDefinition.TOKEN_SESSION]';
    supportService.serviceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/support/';
    supportService.token = '@Session[Frontend.Customize.Common.ProjectDefinition.TOKEN_SESSION]';

        var tilsoftApp = angular.module('tilsoftApp', ['customFilters', 'furnindo-directive', 'avs-directives', 'ui']);
        tilsoftApp.controller('tilsoftController', ['$scope', '$timeout', function ($scope, $timeout) {
        $scope.offerDataContainer = null;
        $scope.productSupportData = null;
        $scope.newID = -1;
        $scope.printOptionValue = 1;
        $scope.printOptionImageValue = 1;
        $scope.currentOfferLineItem = null;
        $scope.showAllItem = true;

        //Fiters
        $scope.filters = {};
        $scope.clearFilter = function ($event) {
            $event.preventDefault();
            $scope.filters.description = '';
        };
        $scope.searchOfferLine = function (item) {
            return item.description.includes($scope.filters.description) ||
                item.articleCode.includes($scope.filters.description)
        };

        $scope.nullHandler = {
            loadMore: function () {
            },
            sort: function (sortedBy, sortedDirection) {
                if (sortedDirection == 'asc') {
                    $scope.offerDataContainer.offerData.offerLines.sort(function (a, b) {
                        if (sortedBy === 'DeltaPercent') {
                            angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                                item.DeltaPercent = $scope.deltaPercent(item);
                            });
                            return a[sortedBy] > b[sortedBy] ? 1 : -1;
                        }
                        else {
                            return a[sortedBy] > b[sortedBy] ? 1 : -1;
                        }
                    });
                }
                else if (sortedDirection == 'desc') {
                    $scope.offerDataContainer.offerData.offerLines.sort(function (a, b) {
                        return a[sortedBy] < b[sortedBy] ? 1 : -1;
                    });
                }
                $scope.$apply();
                console.log($scope.offerDataContainer.offerData.offerLines);
            },
            isTriggered: false
        };

        $scope.refreshGrid = function () {
            $timeout(function () {
                jsHelper.refreshAvsScroll();
            }, 100);
        };

        $scope.getPreviousSeason = function (season) {
            if (season) {
                return jsHelper.getPrevSeason(season, true);
            }
            return '';            
        };

        $scope.getOfferLineSummary = function () {
            if ($scope.offerDataContainer && $scope.offerDataContainer.offerData && $scope.offerDataContainer.offerData.offerLines) {
                return $scope.offerDataContainer.offerData.offerLines.filter(o => o.quantity && o.quantity > 0).length + '/' + $scope.offerDataContainer.offerData.offerLines.length;
            }
            return null;
        }

        $scope.showAllOfferLineItem = function () {
            $scope.showAllItem = !$scope.showAllItem;
        }
        $scope.showOfferLineItemWithQnt = function () {
            $scope.showAllItem = true;
        }

        $scope.getNewID = function () {
            $scope.newID--;
            return $scope.newID;
        }

        $scope.approveItem = function (item) {
            var alertString = "ITEM CAN NOT BE APPROVE DUE TO MISSING: ";
            var alertStatus = 0;
            if (item.unitPrice === null || item.unitPrice === "") {
                alertString = alertString + "SALES PRICE";
                alertStatus = 1;
            }
            if (item.planingPurchasingPrice === null || item.PlaningPurchasingPrice === "") {
                if (alertStatus === 0) {
                    alertString = alertString + "FACTORY PRICE";
                    alertStatus = 1;
                }
                else
                    alertString = alertString + ", FACTORY PRICE";
            }
            if (alertStatus === 1) {
                item.warning = alertString;
            }
            if (alertStatus === 0) {
                offerService.approveItem(
                    item.offerLineID,
                    function (data) {
                        if (data.message.type == 0) {
                            jsHelper.processMessageEx(data.message, 'Item approved:<br/>' + item.description);
                            item.isApproved = true;
                            item.approverName = 'yourself';
                            item.approvedDate = 'just now';
                            $scope.$apply();
                        }
                        else {
                            jsHelper.processMessageEx(data.message);
                        }
                    },
                    function (error) {
                        jsHelper.showMessage('warning', error);
                    }
                );
            }
        }
        $scope.unApproveItem = function (item) {
            offerService.unApproveItem(
                item.offerLineID,
                function (data) {
                    if (data.message.type == 0) {
                        jsHelper.processMessageEx(data.message, 'Item un-approved:<br/>' + item.description);
                        item.isApproved = false;
                        item.approverName = null;
                        item.approvedDate = null;
                        $scope.$apply();
                    }
                    else {
                        jsHelper.processMessageEx(data.message);
                    }
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        };

        $scope.approveAllItem = function () {
            offerService.approveAllItem(
                '@ViewBag.ID',
                function (data) {
                    if (data.message.type == 0) {
                        jsHelper.processMessageEx(data.message, 'All valid items approved');
                        window.location = '@Url.Action("Edit", "Offer", new { id = UrlParameter.Optional,id2 = UrlParameter.Optional})/' + @ViewBag.ID + '/' + 1;
                    }
                    else {
                        jsHelper.processMessageEx(data.message);
                    }
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        };

        $scope.managerApprove = function () {
            alert('deprecated');
        };

        $scope.getOfferLineSalePriceHistory = function (item) {
            $scope.currentOfferLineItem = item;
            if ($scope.currentOfferLineItem && !$scope.currentOfferLineItem.isHistoryLoaded) {
                offerService.getOfferLineSalePriceHistory(
                    item.offerLineID,
                    $scope.offerDataContainer.offerData.season,
                    function (data) {
                        if (data.message.type === 0) {
                            $scope.currentOfferLineItem.offerLineSalePriceHistoryDTOs = data.data.offerLineSalePriceHistoryDTOs;
                            $scope.currentOfferLineItem.offerLineSalePriceHistoryLastSeasonDTOs = data.data.offerLineSalePriceHistoryLastSeasonDTOs;
                            $scope.currentOfferLineItem.isHistoryLoaded = true;
                            $scope.$apply();

                            $('#frmOfferLineSalePriceHistory').modal('show');
                        }
                    },
                    function (error) {
                        jsHelper.showMessage('warning', error);
                    }
                );
            }
            else {
                $('#frmOfferLineSalePriceHistory').modal('show');
            }
            };

        $scope.load = function () {
            //load data
            offerService.load('@ViewBag.ID',
                function (data) {
                    $scope.offerDataContainer = data.data;
                    $scope.filters.description = '';
                    $scope.$apply();

                    $('#content').show();
                    $timeout(function () {
                        jsHelper.refreshAvsScroll();
                    }, 100);
                    // monitor changes
                    $scope.$watch('offer', function () {
                        jQuery('#changeNotification').html('<i class="fa fa-save blink_me"></i>');
                    });
                },
                function (error) {
                    jsHelper.showMessage('warning', error);

                    $scope.offerDataContainer = null;
                    $scope.$apply();
                }
            );
        };

        $scope.getTotalRow = function (category) {
            if ($scope.offerDataContainer && $scope.offerDataContainer.offerData && $scope.offerDataContainer.offerData.offerLines) {
                switch (category) {
                    case 'quantity':
                        return $scope.offerDataContainer.offerData.offerLines.reduce((output, item) => output + (item.quantity ? parseInt(item.quantity) : 0), 0);

                    case 'quantity40HC':
                        return $scope.offerDataContainer.offerData.offerLines.reduce((output, item) => output + jsHelper.round(item.quantity / item.qnt40HC, 2), 0.00);

                    case 'deltaTotalPercentSingle':
                        var totalPercent = 0;
                        var totalItem = 0;
                        angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                            if (item.quantity > 0) {
                                if ($scope.purchasingPriceInUSD(item) !== 0) {
                                    totalPercent += parseFloat($scope.deltaPercent(item));
                                    totalItem += 1;
                                }
                            }
                        });
                        totalPercent = totalPercent / totalItem;
                        return totalPercent;

                    case 'deltaTotalPercent':
                        var salePriceInUSD = 0;
                        var purchasingPriceInUSD = 0
                        var commissionInUSD = 0
                        var lcCostInUSD = 0
                        var interestInUSD = 0
                        var damagesCostInUSD = 0
                        var transportationInUSD = 0

                        angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                            salePriceInUSD += parseFloat($scope.salePriceInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                            purchasingPriceInUSD += parseFloat($scope.purchasingPriceInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                            commissionInUSD += parseFloat($scope.commissionInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                            lcCostInUSD += parseFloat($scope.lcCostInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                            interestInUSD += parseFloat($scope.interestInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                            damagesCostInUSD += parseFloat($scope.damagesCostInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                            transportationInUSD += parseFloat($scope.transportationInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                        });
                        return (salePriceInUSD - purchasingPriceInUSD - commissionInUSD - lcCostInUSD - interestInUSD - damagesCostInUSD - transportationInUSD) / purchasingPriceInUSD * 100;

                    case 'deltaTotal':
                        var total = 0;
                        angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                            total += parseFloat($scope.delta(item) * (item.quantity === null ? 0 : item.quantity));
                        });
                        return total;

                    case 'commission':
                        var total = 0;
                        angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                            total += parseFloat($scope.commissionInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                        });
                        return total;

                    case 'lccost':
                        var total = 0;
                        angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                            total += parseFloat($scope.lcCostInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                        });
                        return total;

                    case 'interest':
                        var total = 0;
                        angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                            total += parseFloat($scope.interestInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                        });
                        return total;

                    case 'damages':
                        var total = 0;
                        angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                            total += parseFloat($scope.damagesCostInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                        });
                        return total;

                    case 'transportation':
                        var total = 0;
                        angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                            total += parseFloat($scope.transportationInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                        });
                        return total;

                    case 'saleAmount':
                        return $scope.offerDataContainer.offerData.offerLines.reduce((output, item) => output + item.unitPrice * item.quantity, 0.00);

                    case 'vat':
                        return $scope.offerDataContainer.offerData.offerLines.reduce((output, item) => output + item.unitPrice * item.quantity, 0.00) * ($scope.offerDataContainer.offerData.vat ? $scope.offerDataContainer.offerData.vat / 100 : 0);

                    case 'total':
                        return $scope.offerDataContainer.offerData.offerLines.reduce((output, item) => output + item.unitPrice * item.quantity, 0.00) * (1 + ($scope.offerDataContainer.offerData.vat ? $scope.offerDataContainer.offerData.vat / 100 : 0));

                    case 'purchaseAmount':
                        var total = 0;
                        angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                            total += parseFloat($scope.purchasingPriceInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                        });
                        return total;

                    case 'saleAmountInUSD':
                        var total = 0;
                        angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                            total += parseFloat($scope.salePriceInUSD(item) * (item.quantity === null ? 0 : item.quantity));
                        });
                        return total;
                }
            }

            return null;
        };

        $scope.getPlaningPurchasingPrice = function (item) {
            $scope.currentOfferLineItem = null;
            if (!item.isPlaningPurchasingPriceLoaded) {
                if (item.offerLineID > 0) {
                    offerService.getPlaningPurchasingPrice(
                        item.offerLineID,
                        function (data) {
                            if (data.message.type === 0) {
                                item.isPlaningPurchasingPriceLoaded = true;
                                item.planingPurchasingPriceDTOs = data.data;
                                $scope.currentOfferLineItem = angular.copy(item);
                                $scope.$apply();
                                $('#frmAvailablePurchasingPrice').modal('show');
                            }
                        },
                        function (error) {
                            console.log(error);
                        }
                    );
                }
                else {
                    if (!$scope.offerDataContainer.offerData.clientID || !$scope.offerDataContainer.offerData.season) {
                        alert('Client info or Season is invalid!');
                        return;
                    }
                    var rParam = {
                        modelID: item.modelID,
                        materialID: item.materialID,
                        materialTypeID: item.materialTypeID,
                        materialColorID: item.materialColorID,
                        frameMaterialID: item.frameMaterialID,
                        frameMaterialColorID: item.frameMaterialColorID,
                        subMaterialID: item.subMaterialID,
                        subMaterialColorID: item.subMaterialColorID,
                        backCushionID: item.backCushionID,
                        seatCushionID: item.seatCushionID,
                        cushionColorID: item.cushionColorID,
                        fscTypeID: item.fscTypeID,
                        fscPercentID: item.fscPercentID,
                        packagingMethodID: item.packagingMethodID,
                        clientSpecialPackagingMethodID: item.clientSpecialPackagingMethodID,
                        clientID: $scope.offerDataContainer.offerData.clientID,
                        season: $scope.offerDataContainer.offerData.season
                    };
                    offerService.getPlaningPurchasingPrice2(
                        rParam,
                        function (data) {
                            if (data.message.type === 0) {
                                item.isPlaningPurchasingPriceLoaded = true;
                                item.planingPurchasingPriceDTOs = data.data;
                                $scope.currentOfferLineItem = angular.copy(item);
                                $scope.$apply();
                                $('#frmAvailablePurchasingPrice').modal('show');
                            }
                        },
                        function (error) {
                            console.log(error);
                        }
                    );
                }
            }
            else {
                $scope.currentOfferLineItem = angular.copy(item);
                $('#frmAvailablePurchasingPrice').modal('show');
            }
        };

        $scope.getExchangeRate = function () {
            if ($scope.offerDataContainer && $scope.offerDataContainer.offerData && $scope.offerDataContainer.offerData.season) {
                if ($scope.offerDataContainer.supportData.exchangeRateDTOs.filter(o => o.season === $scope.offerDataContainer.offerData.season).length > 0) {
                    return $scope.offerDataContainer.supportData.exchangeRateDTOs.filter(o => o.season === $scope.offerDataContainer.offerData.season)[0].exRate;
                }
            }
            return null;
        };

        $scope.getUSDSalePrice = function (item) {
            if (item && item.unitPrice) {
                if ($scope.offerDataContainer.offerData.currency === 'USD') return item.unitPrice;

                var exRate = $scope.getExchangeRate();
                if (exRate) {
                    return item.unitPrice * exRate;
                }
            }

            return null;
        };

        $scope.frmEditEstPurchasingPrice_onOpen = function (item) {
            $scope.currentOfferLineItem = angular.copy(item);
            $('#frmEditEstPurchasingPrice').modal('show');
        };

        $scope.frmEditEstPurchasingPrice_onOKClick = function () {
            var selectedOfferLineItem = $scope.offerDataContainer.offerData.offerLines.filter(o => o.offerLineID === $scope.currentOfferLineItem.offerLineID).length > 0 ? $scope.offerDataContainer.offerData.offerLines.filter(o => o.offerLineID === $scope.currentOfferLineItem.offerLineID)[0] : null;
            $('#frmEditEstPurchasingPrice').modal('hide');
            if (selectedOfferLineItem) {
                selectedOfferLineItem.estimatedPurchasingPrice = $scope.currentOfferLineItem.estimatedPurchasingPrice;
                selectedOfferLineItem.estimatedPurchasingPriceFromFactoryID = $scope.currentOfferLineItem.estimatedPurchasingPriceFromFactoryID;
                selectedOfferLineItem.estimatedPurchasingPriceUpdatedBy = 'yourself';
                selectedOfferLineItem.factoryUD = $scope.offerDataContainer.factoryDTOs.filter(o => o.factoryID === selectedOfferLineItem.estimatedPurchasingPriceFromFactoryID)[0].factoryUD;
            }
            $scope.currentOfferLineItem = null;
        };

        $scope.selectPlaningPurchasingPrice = function (item) {
            if (!item) {
                item = {};
                // manually key in
                item.planingPurchasingPriceSourceID = 3;
                item.purchasingPrice = $scope.currentOfferLineItem.estimatedPurchasingPrice;
                item.factoryID = $scope.currentOfferLineItem.estimatedPurchasingPriceFromFactoryID;
                if ($scope.offerDataContainer.factoryDTOs.filter(o => o.factoryID === item.factoryID).length > 0) {
                    item.factoryUD = $scope.offerDataContainer.factoryDTOs.filter(o => o.factoryID === item.factoryID)[0].factoryUD;
                }
            }

            var selectedOfferLineItem = $scope.offerDataContainer.offerData.offerLines.filter(o => o.offerLineID === $scope.currentOfferLineItem.offerLineID).length > 0 ? $scope.offerDataContainer.offerData.offerLines.filter(o => o.offerLineID === $scope.currentOfferLineItem.offerLineID)[0] : null;
            //if (parseFloat(selectedOfferLineItem.estimatedPurchasingPrice) !== parseFloat(item.purchasingPrice)) {
            //    selectedOfferLineItem.estimatedPurchasingPriceUpdatedBy = 'yourself';
            //    selectedOfferLineItem.estimatedPurchasingPriceFromFactoryID = item.factoryID;
            //    selectedOfferLineItem.estimatedPurchasingPrice = item.purchasingPrice;
            //}
            //selectedOfferLineItem.estimatedPurchasingPriceRemark = $scope.currentOfferLineItem.estimatedPurchasingPriceRemark;
            $('#frmAvailablePurchasingPrice').modal('hide');
            if (selectedOfferLineItem) {
                selectedOfferLineItem.isPlaningPurchasingPriceSelected = true;
                selectedOfferLineItem.planingPurchasingPriceUpdatorName = 'yourself';
                selectedOfferLineItem.planingPurchasingPriceSelectedDate = 'just now';
                selectedOfferLineItem.planingPurchasingPriceFactoryUD = item.factoryUD;
                selectedOfferLineItem.planingPurchasingPriceSourceNM = $scope.offerDataContainer.supportData.planingPurchasingPriceSourceDTOs.filter(o => o.planingPurchasingPriceSourceID === item.planingPurchasingPriceSourceID).length > 0 ? $scope.offerDataContainer.supportData.planingPurchasingPriceSourceDTOs.filter(o => o.planingPurchasingPriceSourceID === item.planingPurchasingPriceSourceID)[0].planingPurchasingPriceSourceNM : '';

                selectedOfferLineItem.planingPurchasingPrice = item.purchasingPrice;
                selectedOfferLineItem.planingPurchasingPriceSourceID = item.planingPurchasingPriceSourceID;
                selectedOfferLineItem.planingPurchasingPriceFactoryID = item.factoryID;
                selectedOfferLineItem.quotationDetailID = item.quotationDetailID;

                //estimated purchasing price
                selectedOfferLineItem.estimatedPurchasingPriceUpdatedBy = 'yourself';
                selectedOfferLineItem.estimatedPurchasingPriceFromFactoryID = item.factoryID;
                selectedOfferLineItem.estimatedPurchasingPrice = item.purchasingPrice;
                selectedOfferLineItem.estimatedPurchasingPriceRemark = $scope.currentOfferLineItem.estimatedPurchasingPriceRemark;
            }
        };

        $scope.update = function ($event) {
            $event.preventDefault();
            if ($scope.editForm.$valid) {
                offerService.update('@ViewBag.ID', '@ViewBag.ActionType', $scope.offerDataContainer.offerData,
                    function (data) {
                        jsHelper.processMessage(data.message);
                        if (data.message.type == 0) {
                            window.location = '@Url.Action("Edit", "Offer", new { id = UrlParameter.Optional,id2 = UrlParameter.Optional})/' + data.data.offerID + '/' + 1;
                        }
                    },
                    function (error) {
                        jsHelper.showMessage('warning', error);
                    }
                );
            }
            else {
                jsHelper.showMessage('warning', '@Frontend.Properties.Resources.INPUT_VALIDATION_FAILED');
            }
        };

        $scope.delete = function ($event) {
            $event.preventDefault();

            if (confirm('Are you sure ?')) {
                offerService.delete('@ViewBag.ID',
                    function (data) {
                        jsHelper.processMessage(data.message);
                        if (data.message.type == 0) {
                            window.location = '@Url.Action("Index", "Offer")';
                        }
                    },
                    function (error) {
                        jsHelper.showMessage('warning', error);
                    }
                );
            }
        };

        $scope.addOfferLine = function ($event) {
            $event.preventDefault();
            $scope.addProductForm.event.load($event);
        };

        $scope.editOfferLine = function ($event, offerLineID) {
            $event.preventDefault();
        };

        $scope.removeOfferLine = function ($event, offerLineID) {
            $event.preventDefault();

            isExist = false;
            for (j = 0; j < $scope.offerDataContainer.offerData.offerLines.length; j++) {
                if ($scope.offerDataContainer.offerData.offerLines[j].offerLineID == offerLineID) {
                    isExist = true;
                    break;
                }
            }
            if (isExist) {
                $scope.offerDataContainer.offerData.offerLines.splice(j, 1);
            }

            //re-index row
            var lineData = $scope.offerDataContainer.offerData.offerLines.sort(function (a, b) { return a.rowIndex - b.rowIndex });
            $.each(lineData, function (i) {
                lineData[i].rowIndex = i + 1;
            });
        };

        $scope.removeOfferLineSampleProduct = function ($event, offerLineSampleProductID) {
            $event.preventDefault();

            isExist = false;
            for (j = 0; j < $scope.offerDataContainer.offerData.offerLineSampleProductDTOs.length; j++) {
                if ($scope.offerDataContainer.offerData.offerLineSampleProductDTOs[j].offerLineSampleProductID == offerLineSampleProductID) {
                    isExist = true;
                    break;
                }
            }
            if (isExist) {
                $scope.offerDataContainer.offerData.offerLineSampleProductDTOs.splice(j, 1);
            }

            //re-index row
            var lineData = $scope.offerDataContainer.offerData.offerLineSampleProductDTOs.sort(function (a, b) { return a.rowIndex - b.rowIndex });
            $.each(lineData, function (i) {
                lineData[i].rowIndex = i + 1;
            });
        };

        $scope.addOfferLineSparepart = function ($event) {
            $event.preventDefault();
            $scope.addSparepartForm.event.load($event);
        };

        $scope.removeOfferLineSparepart = function ($event, offerLineSparePartID) {
            $event.preventDefault();

            isExist = false;
            for (j = 0; j < $scope.offerDataContainer.offerData.offerLineSpareparts.length; j++) {
                if ($scope.offerDataContainer.offerData.offerLineSpareparts[j].offerLineSparePartID == offerLineSparePartID) {
                    isExist = true;
                    break;
                }
            }
            if (isExist) {
                $scope.offerDataContainer.offerData.offerLineSpareparts.splice(j, 1);
            }

            //sort data
            var lineData = $scope.offerDataContainer.offerData.offerLineSpareparts.sort(function (a, b) { return a.rowIndex - b.rowIndex });
            $.each(lineData, function (i) {
                lineData[i].rowIndex = i + 1;
            });
        };

        $scope.confirm = function ($event) {
            $event.preventDefault();

            if (confirm('Are you sure want to confirm ')) {
                offerService.confirm(@ViewBag.ID, @ViewBag.ActionType, $scope.offerDataContainer.offerData,
                    function (data) {
                        //$scope.offerDataContainer.offerData.trackingStatusID = data.data.trackingStatusID;
                        //$scope.offerDataContainer.offerData.trackingStatusNM = data.data.trackingStatusNM;
                        //$scope.offerDataContainer.offerData.concurrencyFlag_String = data.data.concurrencyFlag_String;
                        //jsHelper.processMessage(data.message);
                        //$scope.$apply();
                        window.location = '@Url.Action("Edit", "Offer", new { id = UrlParameter.Optional,id2 = UrlParameter.Optional})/' + data.data.offerID + '/' + 1;
                    },
                    function (error) {
                        jsHelper.showMessage('warning', error);
                    }
                );
            }
        };

        $scope.revise = function ($event) {
            $event.preventDefault();

            if (confirm('Are you sure want to revise ?')) {
                offerService.revise(@ViewBag.ID, @ViewBag.ActionType, $scope.offerDataContainer.offerData,
                    function (data) {
                        //$scope.offerDataContainer.offerData.trackingStatusID = data.data.trackingStatusID;
                        //$scope.offerDataContainer.offerData.trackingStatusNM = data.data.trackingStatusNM;
                        //$scope.offerDataContainer.offerData.concurrencyFlag_String = data.data.concurrencyFlag_String;
                        //jsHelper.processMessage(data.message);
                        //$scope.$apply();
                        window.location = '@Url.Action("Edit", "Offer", new { id = UrlParameter.Optional,id2 = UrlParameter.Optional})/' + data.data.offerID + '/' + 1;
                    },
                    function (error) {
                        jsHelper.showMessage('warning', error);
                    }
                );
            }
        };

        $scope.copy = function ($event) {
            $event.preventDefault();
            window.location = '@Url.Action("Edit", "Offer", new { id = UrlParameter.Optional,id2 = UrlParameter.Optional})/' + $scope.offerDataContainer.offerData.offerID + '/' + 2;
        };

        $scope.newVersion = function ($event) {
            $event.preventDefault();
            window.location = '@Url.Action("Edit", "Offer", new { id = UrlParameter.Optional,id2 = UrlParameter.Optional})/' + $scope.offerDataContainer.offerData.offerID + '/' + 3;
        };

        $scope.showPrintOptionForm = function () {
            $scope.printOptions = [];
            $scope.printOptions.push({
                printOptionValue: 1,
                printOptionText: "Print with small image"
            });
            $scope.printOptions.push({
                printOptionValue: 2,
                printOptionText: "Print with small image & send email"
            });
            $scope.printOptions.push({
                printOptionValue: 3,
                printOptionText: "Print with large image"
            });
            $scope.printOptions.push({
                printOptionValue: 4,
                printOptionText: "Print with large image & send email"
            });
            $scope.printOptions.push({
                printOptionValue: 5,
                printOptionText: "Print as Powerpoint 2013"
            });

            $scope.printOptionsImage = [];
            $scope.printOptionsImage.push({
                printOptionImageValue: 1,
                printOptionImageText: "Pre-Loading"
            });
            $scope.printOptionsImage.push({
                printOptionImageValue: 2,
                printOptionImageText: "Model"
            });

            $('#frmPrintOption').modal('show');
        };

        $scope.printSelectedOffer = function () {
            var x = $scope.printOptionValue;
            var y = $scope.printOptionImageValue;
            switch (x) {
                case 1:
                    $scope.printOffer5(y);
                    break;
                case 2:
                    $scope.printOffer5AndSendEmail(y);
                    break;
                case 3:
                    $scope.printOffer5_FullSizeImage(y);
                    break;
                case 4:
                    $scope.printOffer5AndSendEmail_FullSizeImage(y);
                    break;
                case 5:
                    $scope.printOffer5PP2013(y);
                    break;
            }
        };

            //print vesion 1
        $scope.printOffer = function ($event) {
            $event.preventDefault();
            offerService.getPrintDataOffer(@ViewBag.ID,
                function (data) {
                    window.location = '@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data;
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        };

            //print version 2
        $scope.printOffer2 = function ($event) {
            $event.preventDefault();
            offerService.getPrintDataOffer2(@ViewBag.ID,
                function (data) {
                    window.location = '@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data;
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        };

            //print version 5 with small image
        $scope.printOffer5 = function (imageOption) {
            offerService.getPrintDataOffer5(@ViewBag.ID, false, false, imageOption,
                function (data) {
                    if (data.message.type != 2) {
                        window.location = '@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data;
                    }
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        };

            //print as powerpoint 2013
        $scope.printOffer5PP2013 = function () {
            offerService.getPrintDataOfferPP2013(
                    @ViewBag.ID,
                function (data) {
                    if (data.message.type != 2) {
                        window.location = '@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data;
                    }
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        };

        $scope.printOffer5AndSendEmail = function (imageOption) {
            offerService.getPrintDataOffer5(@ViewBag.ID, true, false, imageOption,
                function (data) {
                    window.location = '@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data;
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        };

            //print version 5 with full size image
        $scope.printOffer5_FullSizeImage = function (imageOption) {
            offerService.getPrintDataOffer5(@ViewBag.ID, false, true, imageOption,
                function (data) {
                    if (data.message.type != 2) {
                        window.location = '@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data;
                    }
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        };

        $scope.printOffer5AndSendEmail_FullSizeImage = function (imageOption) {
            offerService.getPrintDataOffer5(@ViewBag.ID, true, true, imageOption,
                function (data) {
                    window.location = '@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data;
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        };

        $scope.calTotalQuantity = function () {
            if ($scope.offerDataContainer == null) return;
            var total = parseInt('0');
            angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                total += (JSON.stringify(item.quantity) == 'null' ? parseInt('0') : parseInt(item.quantity));
            })
            return total;
        };

        $scope.calTotalCommission = function () {
            if ($scope.offerDataContainer == null) return;
            var total = 0;
            angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                total = total + item.commissionAmount;
            })
            return total;
        };

        $scope.calTotalSurcharge = function () {
            if ($scope.offerDataContainer == null) return;
            var total = 0;
            angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                total = total + item.surchargeAmount;
            })
            return total;
        };

        $scope.calTotalSubTotal = function () {
            if ($scope.offerDataContainer == null) return;
            var total = 0;
            angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                total = total + item.subTotalAmount;
            })
            return total;
        };

        $scope.calTotalVAT = function () {
            if ($scope.offerDataContainer == null) return;
            var total = 0;
            angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                total = total + item.vatAmount;
            })
            return total;
        };

        $scope.calTotalTotal = function () {
            if ($scope.offerDataContainer == null) return;
            var total = 0;
            angular.forEach($scope.offerDataContainer.offerData.offerLines, function (item) {
                total = total + item.totalAmount;
            })
            return total;
        };

        $scope.changeFile = function ($event, controlID) {
            $event.preventDefault();
            masterUploader.multiSelect = true;
            masterUploader.imageOnly = true;
            masterUploader.callback = function () {
                var scope = angular.element(jQuery('body')).scope();
                scope.$apply(function () {
                    angular.forEach(masterUploader.selectedFiles, function (img) {
                        scope.offerDataContainer.offerData.offerScanFileURL = img.fileURL;
                        scope.offerDataContainer.offerData.offerScanFileFriendlyName = img.filename;
                        scope.offerDataContainer.offerData.newOfferScanFile = img.filename;
                        //call server to update file
                        scope.uploadFile();
                    }, null);
                });
            };
            masterUploader.open();
        };

        $scope.removeFile = function ($event, controlID) {
            $scope.offerDataContainer.offerData.offerScanFileURL = '';
            $scope.offerDataContainer.offerData.offerScanFileFriendlyName = '';
            $scope.offerDataContainer.offerData.newOfferScanFile = '';
            //call server to update file
            scope.uploadFile();
        };

        $scope.uploadFile = function () {
            offerService.uploadOfferScanFile($scope.offerDataContainer.offerData.offerID, $scope.offerDataContainer.offerData.newOfferScanFile, $scope.offerDataContainer.offerData.offerScanFile,
                function (data) {
                    jsHelper.processMessage(data.message);
                    if (data.message.type != 2) {
                        $scope.offerDataContainer.offerData.offerScanFile = data.data.offerScanFile;
                        $scope.offerDataContainer.offerData.concurrencyFlag_String = data.data.concurrencyFlag_String;
                    }
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        };

        $scope.validteModelData = function (modelItem) {
            errorInfo = '';
            if (modelItem.modelNM == null || modelItem.modelNM == '') {
                errorInfo += "Model Name | ";
            }
            if (modelItem.productTypeID == null || modelItem.productTypeID == 0) {
                errorInfo += "Type | ";
            }
            if (modelItem.manufacturerCountryID == null || modelItem.manufacturerCountryID == 0) {
                errorInfo += "Country | ";
            }
            if (modelItem.rangeName == null || modelItem.rangeName == '') {
                errorInfo += "Range Name | ";
            }
            if (modelItem.collection == null || modelItem.collection == '') {
                errorInfo += "Collection | ";
            }
            if (modelItem.modelStatusID == null || modelItem.modelStatusID == 0) {
                errorInfo += "Status | ";
            }
            if (modelItem.season == null || modelItem.season == '') {
                errorInfo += "Season | ";
            }
            if (modelItem.productGroupID == null || modelItem.productGroupID == 0) {
                errorInfo += "Group | ";
            }
            if (modelItem.productCategoryID == null || modelItem.productCategoryID == 0) {
                errorInfo += "Category | ";
            }
            if (modelItem.fileLocation == null || modelItem.fileLocation == '' || modelItem.fileLocation.indexOf('no-image') != -1) {
                errorInfo += "Free scan image | ";
            }
            if (modelItem.packagingMethodID == null || modelItem.packagingMethodID == 0) {
                errorInfo += "PackagingMethod | ";
            }
            if (modelItem.qnt40HC == null || modelItem.qnt40HC == 0) {
                errorInfo += "Loadability 40HC | ";
            }
            if (modelItem.overallDimL == null || modelItem.overallDimL == '') {
                errorInfo += "Overall Dim L | ";
            }
            if (modelItem.overallDimW == null || modelItem.overallDimW == '') {
                errorInfo += "Overall Dim W | ";
            }
            if (modelItem.overallDimH == null || modelItem.overallDimH == '') {
                errorInfo += "Overall Dim H | ";
            }
            if (modelItem.seatDimL == null || modelItem.seatDimL == '') {
                errorInfo += "Seat Dim L | ";
            }
            if (modelItem.seatDimW == null || modelItem.seatDimW == '') {
                errorInfo += "Seat Dim W | ";
            }
            if (modelItem.seatDimH == null || modelItem.seatDimH == '') {
                errorInfo += "Seat Dim H | ";
            }
            if (modelItem.armDimL == null || modelItem.armDimL == '') {
                errorInfo += "Arm Dim L | ";
            }
            if (modelItem.armDimW == null || modelItem.armDimW == '') {
                errorInfo += "Arm Dim W | ";
            }
            if (modelItem.armDimH == null || modelItem.armDimH == '') {
                errorInfo += "Arm Dim H | ";
            }

            if (errorInfo != '') {
                jsHelper.showMessage('info', 'You can not add model <a href="@Url.Action("Edit", "Model")/' + modelItem.modelID + '" style="text-decoration:underline" target="_blank">' + modelItem.modelUD + '</a> to offfer because these fields is empty: ' + errorInfo + '. <a href="@Url.Action("Edit", "Model")/' + modelItem.modelID + '" style="text-decoration:underline" target="_blank">Click here to edit this model by fill-in these fields</a>');
                return false;
            }
            return true;
        };

            //edit oferline form
        $scope.editOfferLineForm = {

            offerLineData: null,
            supportData: null,

            event: {
                load: function ($event, offerLineID) {
                    $event.preventDefault();

                    //hide notification
                    jQuery('#notificationMessage').hide();

                    //take offerLine data
                    var arr = $scope.offerDataContainer.offerData.offerLines.filter(function (o) { return o.offerLineID == offerLineID });
                    $scope.editOfferLineForm.offerLineData = arr[0];

                    //show section to edit product
                    jsHelper.showPopup('productView', function () {
                        if (!$scope.editOfferLineForm.offerLineData.isEditing) {
                            //load offer line info from server and show view product form
                            if ($scope.editOfferLineForm.offerLineData.offerLineID > 0) {
                                $scope.editOfferLineForm.method.getOfferLineEdit($scope.editOfferLineForm.offerLineData.offerLineID);
                            }
                            else {
                                $scope.editOfferLineForm.event.getDefaultOption();
                            }

                        }
                    });
                },

                showEdit: function ($event) {
                    $event.preventDefault();

                    //hide winzar view
                    jsHelper.hidePopup('productView', function () { });

                    //show winzard edit
                    $scope.editOfferLineForm.method.showEditProductWinzard($scope.editOfferLineForm.offerLineData);
                },

                showEditAfterAdd: function (offerLineID) {
                    //open winzar
                    var arr = $scope.offerDataContainer.offerData.offerLines.filter(function (o) { return o.offerLineID == offerLineID });
                    $scope.editOfferLineForm.offerLineData = arr[0];

                    //show winzard edit
                    $scope.editOfferLineForm.method.showEditProductWinzard($scope.editOfferLineForm.offerLineData);
                },

                cancelView: function ($event) {
                    $event.preventDefault();
                    jsHelper.hidePopup('productView', function () { });
                },

                getDefaultOption: function () {
                    offerService.getModelInfo($scope.editOfferLineForm.offerLineData.modelID,
                        function (data) {
                            var x = data.data;
                            if (x.materialID == null || x.materialTypeID == null || x.materialColorID == null || x.frameMaterialID == null || x.frameMaterialColorID == null
                                || x.subMaterialID == null || x.subMaterialColorID == null || x.backCushionID == null || x.seatCushionID == null || x.cushionColorID == null || x.fscTypeID == null || x.fscPercentID == null) {
                                bootbox.alert("There are not default options");
                                return;
                            }
                            //apply product info from server for offerline
                            $scope.editOfferLineForm.offerLineData.materialID = data.data.materialID;
                            $scope.editOfferLineForm.offerLineData.materialTypeID = data.data.materialTypeID;
                            $scope.editOfferLineForm.offerLineData.materialColorID = data.data.materialColorID;
                            $scope.editOfferLineForm.offerLineData.frameMaterialID = data.data.frameMaterialID;
                            $scope.editOfferLineForm.offerLineData.frameMaterialColorID = data.data.frameMaterialColorID;
                            $scope.editOfferLineForm.offerLineData.subMaterialID = data.data.subMaterialID;
                            $scope.editOfferLineForm.offerLineData.subMaterialColorID = data.data.subMaterialColorID;
                            $scope.editOfferLineForm.offerLineData.backCushionID = data.data.backCushionID;
                            $scope.editOfferLineForm.offerLineData.seatCushionID = data.data.seatCushionID;
                            $scope.editOfferLineForm.offerLineData.cushionColorID = data.data.cushionColorID;
                            $scope.editOfferLineForm.offerLineData.fscTypeID = data.data.fscTypeID;
                            $scope.editOfferLineForm.offerLineData.fscPercentID = data.data.fscPercentID;
                            $scope.editOfferLineForm.offerLineData.manufacturerCountryID = data.data.manufacturerCountryID;
                            $scope.editOfferLineForm.offerLineData.packagingMethodID = data.data.packagingMethodID;


                            $scope.editOfferLineForm.offerLineData.articleCode = data.data.articleCode;
                            $scope.editOfferLineForm.offerLineData.description = data.data.description;
                            $scope.editOfferLineForm.offerLineData.materialText = data.data.materialText;
                            $scope.editOfferLineForm.offerLineData.frameText = data.data.frameText;
                            $scope.editOfferLineForm.offerLineData.subMaterialText = data.data.subMaterialText;
                            $scope.editOfferLineForm.offerLineData.cushionText = data.data.cushionText;
                            $scope.editOfferLineForm.offerLineData.fscText = data.data.fscText;
                            $scope.editOfferLineForm.offerLineData.materialThumbnailLocation = data.data.materialThumbnailLocation;
                            $scope.editOfferLineForm.offerLineData.frameMaterialThumbnailLocation = data.data.frameMaterialThumbnailLocation;
                            $scope.editOfferLineForm.offerLineData.cushionColorThumbnailLocation = data.data.cushionColorThumbnailLocation;
                            $scope.editOfferLineForm.offerLineData.subMaterialColorThumbnailLocation = data.data.subMaterialColorThumbnailLocation;
                            $scope.editOfferLineForm.offerLineData.backCushionThumbnailLocation = data.data.backCushionThumbnailLocation;
                            $scope.editOfferLineForm.offerLineData.seatCushionThumbnailLocation = data.data.seatCushionThumbnailLocation;

                            $scope.$apply();
                        },
                        function (error) {
                            $scope.$apply();
                        }
                    );
                }
            },

            method: {

                getOfferLineEdit: function (offerLineID) {
                    offerService.getOfferLineEdit(offerLineID,
                        function (data) {
                            //apply product info from server for offerline
                            $scope.editOfferLineForm.offerLineData.materialText = data.data.materialText;
                            $scope.editOfferLineForm.offerLineData.frameText = data.data.frameText;
                            $scope.editOfferLineForm.offerLineData.subMaterialText = data.data.subMaterialText;
                            $scope.editOfferLineForm.offerLineData.cushionText = data.data.cushionText;
                            $scope.editOfferLineForm.offerLineData.fscText = data.data.fscText;

                            $scope.editOfferLineForm.offerLineData.materialThumbnailLocation = data.data.materialThumbnailLocation;
                            $scope.editOfferLineForm.offerLineData.frameMaterialThumbnailLocation = data.data.frameMaterialThumbnailLocation;
                            $scope.editOfferLineForm.offerLineData.cushionColorThumbnailLocation = data.data.cushionColorThumbnailLocation;
                            $scope.editOfferLineForm.offerLineData.subMaterialColorThumbnailLocation = data.data.subMaterialColorThumbnailLocation;
                            $scope.editOfferLineForm.offerLineData.backCushionThumbnailLocation = data.data.backCushionThumbnailLocation;
                            $scope.editOfferLineForm.offerLineData.seatCushionThumbnailLocation = data.data.seatCushionThumbnailLocation;

                            $scope.$apply();
                        },
                        function (error) {
                            $scope.$apply();
                        }
                    );
                },

                showEditProductWinzard: function (productData) {

                    //hide notification
                    jQuery('#notificationMessage').hide();

                    //open winzard
                    productWizard.open({
                        articleCode: productData.articleCode,
                        description: productData.description,
                        modelID: productData.modelID,
                        materialID: productData.materialID,
                        materialTypeID: productData.materialTypeID,
                        materialColorID: productData.materialColorID,
                        frameMaterialID: productData.frameMaterialID,
                        frameMaterialColorID: productData.frameMaterialColorID,
                        subMaterialID: productData.subMaterialID,
                        subMaterialColorID: productData.subMaterialColorID,
                        backCushionID: productData.backCushionID,
                        seatCushionID: productData.seatCushionID,
                        cushionColorID: productData.cushionColorID,
                        fSCTypeID: productData.fscTypeID,
                        fSCPercentID: productData.fscPercentID,
                        useFSCLabel: productData.useFSCLabel,
                        manufacturerCountryID: productData.manufacturerCountryID,
                        packagingMethodID: productData.packagingMethodID,
                        materialText: '',
                        frameText: '',
                        subMaterialText: '',
                        cushionText: '',
                        fscText: '',
                        packagingMethodText: '',
                        cushionDescription: productData.cushionRemark,
                        displayCushionDescription: true,
                        displayPackagingMethod: true,
                        modelImage: '',
                        frameImage: '',
                        materialImage: '',
                        subMaterialImage: '',
                        cushionImage: '',
                        cushionColorImage: '',
                        backCushionImage: '',
                        seatCushionImage: '',

                        //for pricing section
                        showPricingOption: true,
                        pricingOption: productData.offerLinePriceOptions,
                        season: $scope.offerDataContainer.offerData.season,
                        currency: $scope.offerDataContainer.offerData.currency,
                        discountPercent: productData.discountPercent,
                        discountAmount: productData.discountAmount,
                        salePriceCalculated: null,
                        //for breakdown section
                        clientID: $scope.offerDataContainer.offerData.clientID,
                        clientSpecialPackagingMethodID: productData.clientSpecialPackagingMethodID,
                        specialRequirement: productData.specialRequirement,
                        offerLineID: productData.offerLineID,

                        onFinish: function (data) {
                            //read return data
                            productData.articleCode = data.articleCode;
                            productData.description = data.description + (data.cushionDescription == '' || data.cushionDescription == null ? '' : '(' + data.cushionDescription + ')');
                            productData.modelID = data.modelID;
                            productData.materialID = data.materialID;
                            productData.materialTypeID = data.materialTypeID;
                            productData.materialColorID = data.materialColorID;
                            productData.frameMaterialID = data.frameMaterialID;
                            productData.frameMaterialColorID = data.frameMaterialColorID;
                            productData.subMaterialID = data.subMaterialID;
                            productData.subMaterialColorID = data.subMaterialColorID;
                            productData.backCushionID = data.backCushionID;
                            productData.seatCushionID = data.seatCushionID;
                            productData.cushionColorID = data.cushionColorID;
                            productData.fscTypeID = data.fSCTypeID;
                            productData.fscPercentID = data.fSCPercentID;
                            productData.manufacturerCountryID = data.manufacturerCountryID;
                            productData.cushionDescription = data.cushionDescription;
                            productData.cushionRemark = data.cushionDescription;
                            productData.packagingMethodID = data.packagingMethodID;
                            productData.useFSCLabel = data.useFSCLabel;

                            //text
                            productData.materialText = data.materialText;
                            productData.frameText = data.frameText;
                            productData.subMaterialText = data.subMaterialText;
                            productData.cushionText = data.cushionText;
                            productData.fscText = data.fscText;
                            productData.packagingMethodText = data.packagingMethodText;

                            //image
                            productData.materialThumbnailLocation = data.materialImage;
                            productData.frameMaterialThumbnailLocation = data.frameImage;
                            productData.subMaterialColorThumbnailLocation = data.subMaterialImage;
                            productData.backCushionThumbnailLocation = data.backCushionImage;
                            productData.seatCushionThumbnailLocation = data.seatCushionImage;
                            productData.cushionColorThumbnailLocation = data.cushionColorImage;

                            //mark to finish edited
                            $scope.editOfferLineForm.offerLineData.isEditing = true;

                            //price option
                            productData.offerLinePriceOptions = data.pricingOption;
                            productData.discountPercent = data.discountPercent;
                            productData.discountAmount = data.discountAmount;
                            productData.salePriceCalculated = data.salePriceCalculated;

                            // approval process
                            productData.isApproved = false;
                            productData.approvedBy = null;
                            productData.approvedDate = null;
                            productData.approverName = null;

                            //breakdown
                            productData.clientSpecialPackagingMethodID = data.clientSpecialPackagingMethodID;
                            productData.specialRequirement = data.specialRequirement;

                            if (!productData.quantity) {
                                productData.quantity = null;
                            }
                        }
                    });
                },

            }
        };

            //edit oferline spapart form
        $scope.editOfferLineSparepartForm = {

            offerLineSparepartData: null,
            modelSparepart: null,

            event: {
                load: function ($event, offerLineSparePartID) {
                    $event.preventDefault();

                    //hide notification
                    jQuery('#notificationMessage').hide();

                    //take offerLine data
                    var arr = $scope.offerDataContainer.offerData.offerLineSpareparts.filter(function (o) { return o.offerLineSparePartID == offerLineSparePartID });
                    $scope.editOfferLineSparepartForm.offerLineSparepartData = arr[0];

                    //show section to edit product
                    $scope.editOfferLineSparepartForm.method.getModelSparepart($scope.editOfferLineSparepartForm.offerLineSparepartData.modelID);
                },

                OK: function ($event) {
                    $event.preventDefault();
                    jsHelper.hidePopup('sparepartView', function () { });
                },

                changeModelSparepart: function (id) {
                    $($scope.editOfferLineSparepartForm.modelSparepart).each(function () {
                        if (this.modelSparepartID == id) {
                            $scope.editOfferLineSparepartForm.offerLineSparepartData.partUD = this.partUD;
                            $scope.editOfferLineSparepartForm.offerLineSparepartData.partNM = this.partNM;

                            //articlecode and description
                            $scope.editOfferLineSparepartForm.offerLineSparepartData.articleCode = $scope.editOfferLineSparepartForm.offerLineSparepartData.modelUD + '-S-' + this.partUD;
                            $scope.editOfferLineSparepartForm.offerLineSparepartData.description = 'SPAREPART / ' + $scope.editOfferLineSparepartForm.offerLineSparepartData.modelNM + ' / ' + this.partNM;
                            return false;
                        }
                    });
                },
            },

            method: {
                getModelSparepart: function (modelID) {
                    offerService.getModelSparepart(modelID,
                        function (data) {
                            $scope.editOfferLineSparepartForm.modelSparepart = data.data;
                            $scope.$apply();

                            //show section to edit product
                            jsHelper.showPopup('sparepartView', function () { });
                        },
                        function (error) {
                            $scope.editOfferLineSparepartForm.modelSparepart = null;
                            $scope.$apply();
                        }
                    );
                },

                generate_Art_Description: function (offerLineRow) {

                    offerLineRow.articleCode = offerLineRow.modelUD
                        + (JSON.stringify(offerLineRow.partUD) == 'null' || offerLineRow.partUD == undefined ? '*' : offerLineRow.partUD)
                        + (JSON.stringify(offerLineRow.materialUD) == 'null' || offerLineRow.materialUD == undefined ? '**' : offerLineRow.materialUD)
                        + (JSON.stringify(offerLineRow.materialTypeUD) == 'null' || offerLineRow.materialTypeUD == undefined ? '**' : offerLineRow.materialTypeUD)
                        + (JSON.stringify(offerLineRow.materialColorUD) == 'null' || offerLineRow.materialColorUD == undefined ? '***' : offerLineRow.materialColorUD)
                        + (JSON.stringify(offerLineRow.cushionUD) == 'null' || offerLineRow.cushionUD == undefined ? '**' : offerLineRow.cushionUD)
                        + (JSON.stringify(offerLineRow.cushionColorUD) == 'null' || offerLineRow.cushionColorUD == undefined ? '**' : offerLineRow.cushionColorUD)
                        + (JSON.stringify(offerLineRow.countryUD) == 'null' || offerLineRow.countryUD == undefined ? '*' : offerLineRow.countryUD);

                    offerLineRow.description = offerLineRow.modelNM
                        + (JSON.stringify(offerLineRow.partNM) == 'null' || offerLineRow.partNM == undefined ? '' : '/' + offerLineRow.partNM)
                        + '/SPAREPART'
                        + (JSON.stringify(offerLineRow.materialNM) == 'null' || offerLineRow.materialNM == undefined ? '' : '/' + offerLineRow.materialNM)
                        + (JSON.stringify(offerLineRow.materialTypeNM) == 'null' || offerLineRow.materialTypeNM == undefined ? '' : ' ' + offerLineRow.materialTypeNM)
                        + (JSON.stringify(offerLineRow.materialColorNM) == 'null' || offerLineRow.materialColorNM == undefined ? '' : ' ' + offerLineRow.materialColorNM)
                        + (JSON.stringify(offerLineRow.cushionNM) == 'null' || offerLineRow.cushionNM == undefined ? '' : '/' + offerLineRow.cushionNM)
                        + (JSON.stringify(offerLineRow.cushionColorNM) == 'null' || offerLineRow.cushionColorNM == undefined ? '' : ' ' + offerLineRow.cushionColorNM)

                },


            }
        };

            //quick seach client form
            searchClientTimer = null;
        $scope.quicksearchClient = {
            data: null,
            filters: {
                filters: {
                    searchQuery: ''
                },
                sortedBy: 'ClientNM',
                sortedDirection: 'ASC',
                pageSize: 10,
                pageIndex: 1
            },
            totalPage: 0,

            method: {
                searchClient: function () {
                    offerService.quicksearchClient(
                        $scope.quicksearchClient.filters,
                        function (data) {
                            if (data.message.type == 0) {
                                $scope.quicksearchClient.data = data.data;
                                $scope.quicksearchClient.totalPage = Math.ceil(data.totalRows / $scope.quicksearchClient.filters.pageSize);
                                quickSearchClientGrid.updateLayout();
                                $scope.$apply();
                                jQuery('#client-popup').show();
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            },

            event: {
                searchBoxKeyUp: function () {
                    if (jQuery('#txtClient').val().length >= 3) {
                        clearTimeout(searchClientTimer);
                        searchClientTimer = setTimeout(
                            function () {
                                $scope.quicksearchClient.filters.filters.searchQuery = jQuery('#txtClient').val();
                                $scope.quicksearchClient.filters.pageIndex = 1;
                                $scope.quicksearchClient.method.searchClient();
                            },
                            500);
                    }
                },
                close: function ($event, clearSearchBox) {
                    jQuery('#client-popup').hide();
                    if (clearSearchBox) {
                        $scope.offerDataContainer.offerData.clientID = null;
                        $scope.offerDataContainer.offerData.clientUD = null;
                        $scope.offerDataContainer.offerData.clientNM = null;

                        $scope.offerDataContainer.offerData.clientTelephone = null;
                        $scope.offerDataContainer.offerData.clientEmail = null;
                        $scope.offerDataContainer.offerData.clientStreetAddress1 = null;
                        $scope.offerDataContainer.offerData.clientStreetAddress2 = null;

                        $scope.offerDataContainer.offerData.paymentTermID = null;
                        $scope.offerDataContainer.offerData.deliveryTermID = null;
                        $scope.offerDataContainer.offerData.saleID = null;
                        $scope.offerDataContainer.offerData.clientContactPerson = null;
                    }
                    $scope.quicksearchClient.data = null;
                    $event.preventDefault();
                },
                ok: function ($event, id) {
                    $scope.offerDataContainer.offerData.clientID = id;



                    jQuery.each($scope.quicksearchClient.data, function () {
                        if (this.clientID == id) {
                            $scope.offerDataContainer.offerData.clientUD = this.clientUD;
                            $scope.offerDataContainer.offerData.clientNM = this.clientNM;

                            $scope.offerDataContainer.offerData.clientTelephone = this.telephone;
                            $scope.offerDataContainer.offerData.clientEmail = this.email;
                            $scope.offerDataContainer.offerData.clientStreetAddress1 = this.streetAddress1;
                            $scope.offerDataContainer.offerData.clientStreetAddress2 = this.streetAddress2;

                            $scope.offerDataContainer.offerData.paymentTermID = this.paymentTermID;
                            $scope.offerDataContainer.offerData.deliveryTermID = this.deliveryTermID;
                            $scope.offerDataContainer.offerData.saleID = this.saleID;
                            $scope.offerDataContainer.offerData.clientContactPerson = this.clientContactName;

                            $scope.offerDataContainer.offerData.clientContactEmail = this.email;
                            $scope.offerDataContainer.offerData.clientContactPhone = this.telephone;

                            //est cost for client
                            $scope.offerDataContainer.supportData.clientEstimatedAdditionalCostDTOs = this.clientEstimatedAdditionalCostDTOs;
                        }
                    });
                    $scope.quicksearchClient.event.close($event, false);
                }
            }
        };

            //quick search model to  add product to offerline
            searchModelTimer = null;
        $scope.quicksearchModel = {
            data: null,
            filters: {
                filters: {
                    searchQuery: '',
                    modelStatusID: 1,
                },
                sortedBy: 'ModelNM',
                sortedDirection: 'ASC',
                pageSize: 20,
                pageIndex: 1
            },

            modelNM: '',

            totalPage: 0,
            method: {
                searchModel: function () {
                    offerService.quicksearchModelSeason(
                        $scope.quicksearchModel.filters,
                        function (data) {
                            if (data.message.type == 0) {
                                $scope.quicksearchModel.data = data.data;

                                $scope.quicksearchModel.totalPage = Math.ceil(data.totalRows / $scope.quicksearchModel.filters.pageSize);
                                quickSearchModelGrid.updateLayout();
                                $scope.$apply();

                                jQuery('#model-popup').show();
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                            alert('error');
                        }
                    );
                },

                searchArticleCode: function () {
                    offerService.quickSearchArticleCode(
                        $scope.quicksearchModel.filters,
                        function (data) {
                            if (data.message.type == 0) {
                                $scope.quicksearchModel.data = data.data;
                                if ($scope.quicksearchModel.data.length > 0) {
                                    angular.forEach($scope.quicksearchModel.data, function (item) {
                                        if (item.articleCode === $scope.quicksearchModel.filters.filters.searchQuery) {
                                            $scope.quicksearchModel.event.selectedModel(item.modelID, item.articleCode, function (max_id) {

                                            });
                                        }
                                    });
                                    jQuery('#model-popup').hide();
                                    $scope.quicksearchModel.modelNM = null;
                                    $scope.quicksearchModel.data = null;
                                    $scope.$apply();
                                }
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                            alert('error');
                        }
                    );
                },
            },

            event: {
                searchBoxKeyUp: function ($event) {
                    if ($event.keyCode == 13) {
                        $scope.quicksearchModel.filters.filters.searchQuery = jQuery('#txtModelNM').val();
                        $scope.quicksearchModel.filters.pageIndex = 1;
                        $scope.quicksearchModel.method.searchModel();
                    }
                    else if (jQuery('#txtModelNM').val().length >= 3 && jQuery('#txtModelNM').val().length != 26) {
                        clearTimeout(searchModelTimer);
                        searchModelTimer = setTimeout(
                            function () {
                                $scope.quicksearchModel.filters.filters.searchQuery = jQuery('#txtModelNM').val();
                                $scope.quicksearchModel.filters.pageIndex = 1;
                                $scope.quicksearchModel.method.searchModel();
                            },
                            500);
                    }
                    else if (jQuery('#txtModelNM').val().length == 26) {
                        clearTimeout(searchModelTimer);
                        searchModelTimer = setTimeout(
                            function () {
                                $scope.quicksearchModel.filters.filters.searchQuery = jQuery('#txtModelNM').val();
                                $scope.quicksearchModel.filters.pageIndex = 1;
                                $scope.quicksearchModel.method.searchArticleCode();
                            },
                            500);
                    }
                },

                clickSearch: function () {
                    $scope.quicksearchModel.filters.filters.searchQuery = jQuery('#txtModelNM').val();
                    $scope.quicksearchModel.filters.pageIndex = 1;
                    if ($scope.quicksearchModel.filters.filters.searchQuery.length >= 3 && $scope.quicksearchModel.filters.filters.searchQuery.length != 26) {
                        $scope.quicksearchModel.method.searchModel();
                    }
                    else if ($scope.quicksearchModel.filters.filters.searchQuery.length = 26) {
                        $scope.quicksearchModel.method.searchArticleCode();
                    }
                },

                close: function ($event, clearSearchBox) {
                    jQuery('#model-popup').hide();
                    if (clearSearchBox) {
                        $scope.quicksearchModel.modelNM = null;
                    }
                    $scope.quicksearchModel.data = null;
                    $event.preventDefault();
                },
                selectedModel: function (id, articleCode, callBackSuccces) {
                    //sort to find max offerLineID
                    var arr = $scope.offerDataContainer.offerData.offerLines.filter(function (o) { return o.offerLineID < 0 });
                    var max_id = parseInt('-1');

                    if (arr.length > 0) {
                        arr.sort(function (a, b) { return a.offerLineID - b.offerLineID });
                        max_id = parseInt(arr[0].offerLineID) - parseInt('1');
                    }

                    //sort to find max rowIndex
                    var offerLines = $scope.offerDataContainer.offerData.offerLines.sort(function (a, b) { return a.rowIndex - b.rowIndex });
                    var rowIndex = parseInt('1');
                    if (offerLines.length > 0) {
                        rowIndex = parseInt(offerLines[offerLines.length - 1].rowIndex) + parseInt('1');
                    }

                    //create table pricing option
                    pricingOption = [];
                    angular.forEach($scope.offerDataContainer.supportData.productElements, function (item) {
                        pricingOption.push({
                            offerLinePriceOptionID: -1,
                            productElementID: item.productElementID,
                            productElementNM: item.productElementNM,
                        });
                    })
                    jQuery.each($scope.quicksearchModel.data, function () {
                        if (this.modelID == id && this.articleCode == articleCode) {
                            //add fob product
                            //console.log('fob');
                            $scope.offerDataContainer.offerData.offerLines.push({
                                offerLineID: max_id,
                                rowIndex: rowIndex,
                                modelID: id,
                                modelUD: this.modelUD,
                                modelNM: this.modelNM,
                                articleCode: this.modelUD + '********************',
                                description: this.modelNM,
                                productFileLocation: this.fileLocation,
                                productThumbnailLocation: this.thumbnailLocation,
                                manufacturerCountryID: this.manufacturerCountryID,
                                packagingMethodID: this.packagingMethodID,
                                offerLinePriceOptions: pricingOption,

                                //default option
                                articleCode: this.articleCode,
                                description: this.description,
                                materialID: this.materialID,
                                materialTypeID: this.materialTypeID,
                                materialColorID: this.materialColorID,
                                frameMaterialID: this.frameMaterialID,
                                frameMaterialColorID: this.frameMaterialColorID,
                                subMaterialID: this.subMaterialID,
                                subMaterialColorID: this.subMaterialColorID,
                                backCushionID: this.backCushionID,
                                seatCushionID: this.seatCushionID,
                                cushionColorID: this.cushionColorID,
                                fscTypeID: this.fscTypeID,
                                fscPercentID: this.fscPercentID,
                                salePriceCalculated: $scope.offerDataContainer.offerData.currency === 'USD' ? this.indicatedSellPriceUSD : this.indicatedSellPriceEUR,
                                quantity: null,
                                qnt40HC: this.qnt40HC,

                                offerItemTypeID: 1,
                                offerItemTypeNM: 'FOB ITEM',
                                isApproved: false,
                                approvedDate: null,
                                approverName: null
                            });
                            //console.log(this);
                        }
                    });
                    callBackSuccces(max_id);
                },

                selectSingleModel: function ($event, id, articleCode) {
                    $scope.quicksearchModel.event.selectedModel(id, articleCode, function (max_id) {
                        //show winzar to edit product
                        $scope.editOfferLineForm.event.showEditAfterAdd(max_id);
                    });
                    $scope.quicksearchModel.event.close($event, true);
                },

                selectedMultiModel: function ($event) {
                    newOfferLineID = 0;
                    //add to offer line and open winzard
                    angular.forEach($scope.quicksearchModel.data, function (item) {
                        if (item.isSelected) {
                            $scope.quicksearchModel.event.selectedModel(item.modelID, item.articleCode, function (max_id) {
                                newOfferLineID = max_id
                            });
                        }
                    });
                    $scope.quicksearchModel.event.close($event, true);
                    //show winzar to edit product
                    //if (newOfferLineID!=0) $scope.editOfferLineForm.event.showEditAfterAdd(newOfferLineID);

                    $timeout(function () {
                        jsHelper.refreshAvsScroll();
                    }, 100);
                },
            }

        };

            //quick search model to  add sparepart to offerline sparepart
            searchModelSparepartTimer = null;
        $scope.quicksearchModelSparepart = {
            data: null,
            filters: {
                filters: {
                    searchQuery: '',
                    modelStatusID: 1,
                },
                sortedBy: 'ModelNM',
                sortedDirection: 'ASC',
                pageSize: 20,
                pageIndex: 1
            },

            modelNM: '',

            totalPage: 0,

            method: {
                searchModel: function () {
                    offerService.quicksearchModelSeason(
                        $scope.quicksearchModelSparepart.filters,
                        function (data) {
                            if (data.message.type == 0) {
                                $scope.quicksearchModelSparepart.data = data.data;
                                $scope.quicksearchModelSparepart.totalPage = Math.ceil(data.totalRows / $scope.quicksearchModelSparepart.filters.pageSize);
                                quickSearchModelSparepartGrid.updateLayout();
                                $scope.$apply();

                                jQuery('#model-sparepart-popup').show();
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                            alert('error');
                        }
                    );
                }
            },

            event: {
                searchBoxKeyUp: function ($event) {
                    if ($event.keyCode == 13) {
                        $scope.quicksearchModelSparepart.filters.filters.searchQuery = jQuery('#txtModelSparepartNM').val();
                        $scope.quicksearchModelSparepart.filters.pageIndex = 1;
                        $scope.quicksearchModelSparepart.method.searchModel();
                    }
                    else if (jQuery('#txtModelSparepartNM').val().length >= 3) {
                        clearTimeout(searchModelSparepartTimer);
                        searchModelSparepartTimer = setTimeout(
                            function () {
                                $scope.quicksearchModelSparepart.filters.filters.searchQuery = jQuery('#txtModelSparepartNM').val();
                                $scope.quicksearchModelSparepart.filters.pageIndex = 1;
                                $scope.quicksearchModelSparepart.method.searchModel();
                            },
                            500);
                    }
                },

                searchClick: function ($event) {
                    $scope.quicksearchModelSparepart.filters.filters.searchQuery = jQuery('#txtModelSparepartNM').val();
                    $scope.quicksearchModelSparepart.filters.pageIndex = 1;
                    $scope.quicksearchModelSparepart.method.searchModel();
                },

                close: function ($event, clearSearchBox) {
                    jQuery('#model-sparepart-popup').hide();
                    if (clearSearchBox) {
                        $scope.quicksearchModelSparepart.modelNM = null;
                    }
                    $scope.quicksearchModelSparepart.data = null;
                    $event.preventDefault();
                },
                ok: function ($event, id) {

                    //validate missiong info of model selected
                    //var item = $scope.quicksearchModelSparepart.data.filter(function(o){return o.modelID == id})[0];
                    //if ($scope.validteModelData(item) == false)
                    //{
                    //    $scope.quicksearchModelSparepart.event.close($event, true);
                    //    return;
                    //}

                    //sort to find max offerLineID
                    var arr = $scope.offerDataContainer.offerData.offerLineSpareparts.filter(function (o) { return o.offerLineSparePartID < 0 });
                    max_id = -1;

                    if (arr.length > 0) {
                        arr.sort(function (a, b) { return a.offerLineSparePartID - b.offerLineSparePartID });
                        max_id = arr[0].offerLineSparePartID - 1;
                    }

                    //sort to find max rowIndex
                    var offerLineSpareParts = $scope.offerDataContainer.offerData.offerLineSpareparts.sort(function (a, b) { return a.rowIndex - b.rowIndex });
                    rowIndex = 1;
                    if (offerLineSpareParts.length > 0) {
                        rowIndex = offerLineSpareParts[offerLineSpareParts.length - 1].rowIndex + 1;
                    }
                    jQuery.each($scope.quicksearchModelSparepart.data, function () {
                        if (this.modelID == id) {
                            //console.log('sparepart');
                            //add Sparepart
                            $scope.offerDataContainer.offerData.offerLineSpareparts.push({
                                offerLineSparePartID: max_id,
                                rowIndex: rowIndex,
                                modelID: id,
                                modelUD: this.modelUD,
                                modelNM: this.modelNM,
                                articleCode: this.modelUD + '-S-**',
                                description: "SPAREPART / " + this.modelNM,
                                quantity: null
                            });
                        }
                    });
                    $scope.quicksearchModelSparepart.event.close($event, true);

                    //show winzar to edit product
                    $scope.editOfferLineSparepartForm.event.load($event, max_id);
                }
            }
        };

            //quick search warehouse item
            var quicksearchWarehouseItemTimer = null;
        $scope.quicksearchWarehouseItem = {
            data: null,
            filters: {
                filters: {
                    searchQuery: '',
                    productType: 'PRODUCT',
                    isWexItem: null,
                },
                sortedBy: 'Description',
                sortedDirection: 'ASC',
                pageSize: 20,
                pageIndex: 1
            },
            totalPage: 0,

            popupformID: 'popup-warehouseItem',
            searchType: null,

            method: {
                search: function (callBack) {
                    supportService.quicksearchWarehouseItem(
                        $scope.quicksearchWarehouseItem.filters,
                        function (data) {
                            if (data.message.type == 0) {
                                $scope.quicksearchWarehouseItem.data = data.data;
                                $scope.quicksearchWarehouseItem.totalPage = Math.ceil(data.totalRows / $scope.quicksearchWarehouseItem.filters.pageSize);
                                quickSearchResultGridWarehouseItem.updateLayout();
                                $scope.$apply();

                                if (callBack != null) callBack();
                            }
                            else {
                                jsHelper.processMessage(data.message);
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            },
            event: {
                searchBoxKeyUp: function ($event, productType) {
                    if ($event.keyCode == 13) {
                        $scope.quicksearchWarehouseItem.event.searchClick($event, productType);
                    }
                    else if ($scope.quicksearchWarehouseItem.filters.filters.searchQuery.length >= 3) {
                        clearTimeout(quicksearchWarehouseItemTimer);
                        quicksearchWarehouseItemTimer = setTimeout(
                            function () {
                                $scope.quicksearchWarehouseItem.event.searchClick($event, productType);
                            },
                            500);
                    }
                },

                searchClick: function ($event, productType) {
                    $scope.quicksearchWarehouseItem.filters.filters.productType = productType;
                    $scope.quicksearchWarehouseItem.filters.pageIndex = 1;
                    $scope.quicksearchWarehouseItem.method.search(function () {

                        jQuery('#' + $scope.quicksearchWarehouseItem.popupformID).show();
                        if (productType == 'PRODUCT') {
                            jQuery('#quicksearch-warehouse-product').append(jQuery('#' + $scope.quicksearchWarehouseItem.popupformID));
                        }
                        else if (productType == 'SPAREPART') {
                            jQuery('#quicksearch-warehouse-sparepart').append(jQuery('#' + $scope.quicksearchWarehouseItem.popupformID));
                        }
                    });
                },

                close: function ($event) {
                    jQuery('#' + $scope.quicksearchWarehouseItem.popupformID).hide();
                    $scope.quicksearchWarehouseItem.filters.filters.searchQuery = '';
                    $scope.quicksearchWarehouseItem.data = null;
                    $event.preventDefault();
                },
                multiSelected: function ($event) {
                    angular.forEach($scope.quicksearchWarehouseItem.data, function (item) {
                        if (item.isSelected) {
                            //sort to find max rowIndex
                            var offerLines = $scope.offerDataContainer.offerData.offerLines.sort(function (a, b) { return a.rowIndex - b.rowIndex });
                            var rowIndex = parseInt('1');
                            if (offerLines.length > 0) {
                                rowIndex = parseInt(offerLines[offerLines.length - 1].rowIndex) + parseInt('1');
                            }

                            if (item.productType == 'PRODUCT') {
                                $scope.offerDataContainer.offerData.offerLines.push({
                                    offerLineID: $scope.getNewID(),
                                    rowIndex: rowIndex,
                                    modelID: item.modelID,
                                    modelUD: item.modelUD,
                                    modelNM: item.modelNM,
                                    articleCode: item.articleCode,
                                    description: item.description,
                                    productFileLocation: item.selectedFullImage,
                                    productThumbnailLocation: item.selectedThumbnailImage,
                                    manufacturerCountryID: item.manufacturerCountryID,
                                    packagingMethodID: item.packagingMethodID,

                                    materialID: item.materialID,
                                    materialTypeID: item.materialTypeID,
                                    materialColorID: item.materialColorID,
                                    frameMaterialID: item.frameMaterialID,
                                    frameMaterialColorID: item.frameMaterialColorID,
                                    subMaterialID: item.subMaterialID,
                                    subMaterialColorID: item.subMaterialColorID,
                                    backCushionID: item.backCushionID,
                                    seatCushionID: item.seatCushionID,
                                    cushionColorID: item.cushionColorID,
                                    fscTypeID: item.fscTypeID,
                                    fscPercentID: item.fscPercentID,

                                    offerItemTypeID: 2,
                                    offerItemTypeNM: 'WAREHOUSE ITEM',
                                    isApproved: false,
                                    approvedDate: null,
                                    approverName: null
                                });
                            }
                            else if (item.productType == 'SPAREPART') {
                                //sort to find max rowIndex
                                var offerLineSpareParts = $scope.offerDataContainer.offerData.offerLineSpareparts.sort(function (a, b) { return a.rowIndex - b.rowIndex });
                                rowIndex = 1;
                                if (offerLineSpareParts.length > 0) {
                                    rowIndex = offerLineSpareParts[offerLineSpareParts.length - 1].rowIndex + 1;
                                }
                                $scope.offerDataContainer.offerData.offerLineSpareparts.push({
                                    offerLineSparePartID: $scope.getNewID(),
                                    rowIndex: rowIndex,
                                    modelID: item.modelPartID,
                                    partID: item.partID,
                                    articleCode: item.articleCode,
                                    description: item.description,
                                });
                            }
                        }
                    });
                    $scope.quicksearchWarehouseItem.event.close($event);

                    $timeout(function () {
                        jsHelper.refreshAvsScroll();
                    }, 100);
                }
            }
        };

            //quick search sample product
            searchSampleProductTimer = null;
        $scope.quicksearchSampleProduct = {
            data: null,
            filters: {
                filters: {
                    SearchQuery: '',
                    ClientID: -1,
                },
                sortedBy: 'StatusUpdatedDate',
                sortedDirection: 'DESC',
                pageSize: 20,
                pageIndex: 1
            },
            query: '',
            totalPage: 0,
            method: {
                search: function () {
                    if (!$scope.offerDataContainer.offerData.clientID) {
                        $scope.quicksearchSampleProduct.filters.filters.ClientID = -1;
                        alert('Please select client before proceed!');
                        return;
                    }
                    $scope.quicksearchSampleProduct.filters.filters.ClientID = $scope.offerDataContainer.offerData.clientID;

                    offerService.quicksearchSampleProduct(
                        $scope.quicksearchSampleProduct.filters,
                        function (data) {
                            if (data.message.type == 0) {
                                $scope.quicksearchSampleProduct.data = data.data;
                                $scope.quicksearchSampleProduct.totalPage = Math.ceil(data.totalRows / $scope.quicksearchSampleProduct.filters.pageSize);
                                quickSearchSampleProductGrid.updateLayout();
                                $scope.$apply();

                                jQuery('#sample-product-popup').show();
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                            console.log(error);
                            alert('error');
                        }
                    );
                }
            },

            event: {
                searchBoxKeyUp: function ($event) {
                    if ($event.keyCode == 13) {
                        $scope.quicksearchSampleProduct.filters.filters.SearchQuery = jQuery('#txtSampleProductQuery').val();
                        $scope.quicksearchSampleProduct.filters.pageIndex = 1;
                        $scope.quicksearchSampleProduct.method.search();
                    }
                    else if (jQuery('#txtSampleProductQuery').val().length >= 3) {
                        clearTimeout(searchSampleProductTimer);
                        searchSampleProductTimer = setTimeout(
                            function () {
                                $scope.quicksearchSampleProduct.filters.filters.SearchQuery = jQuery('#txtSampleProductQuery').val();
                                $scope.quicksearchSampleProduct.filters.pageIndex = 1;
                                $scope.quicksearchSampleProduct.method.search();
                            },
                            500);
                    }
                },

                searchClick: function ($event) {
                    $scope.quicksearchSampleProduct.filters.filters.SearchQuery = jQuery('#txtSampleProductQuery').val();
                    $scope.quicksearchSampleProduct.filters.pageIndex = 1;
                    $scope.quicksearchSampleProduct.method.search();
                },

                close: function ($event, clearSearchBox) {
                    jQuery('#sample-product-popup').hide();
                    if (clearSearchBox) {
                        $scope.quicksearchSampleProduct.query = null;
                    }
                    $scope.quicksearchSampleProduct.data = null;
                    $event.preventDefault();
                },
                multiSelected: function ($event) {
                    angular.forEach($scope.quicksearchSampleProduct.data, function (item) {
                        if (item.isSelected) {
                            //sort to find max rowIndex
                            var items = $scope.offerDataContainer.offerData.offerLineSampleProductDTOs.sort(function (a, b) { return a.rowIndex - b.rowIndex });
                            var rowIndex = parseInt('1');
                            if (items.length > 0) {
                                rowIndex = parseInt(items[items.length - 1].rowIndex) + parseInt('1');
                            }

                            var existingItem = $scope.offerDataContainer.offerData.offerLineSampleProductDTOs.find(o => o.sampleProductID === item.sampleProductID);
                            if (!existingItem) {
                                $scope.offerDataContainer.offerData.offerLineSampleProductDTOs.push({
                                    offerLineSampleProductID: $scope.getNewID(),
                                    rowIndex: rowIndex,
                                    sampleProductID: item.sampleProductID,
                                    quantity: null,
                                    unitPrice: 0,
                                    remark: item.remark,
                                    thumbnailLocation: item.thumbnailLocation,
                                    fileLocation: item.fileLocation,
                                    sampleProductUD: item.sampleProductUD,
                                    articleDescription: item.articleDescription,
                                    sampleOrderUD: item.sampleOrderUD,
                                    loadAbility40HC: item.loadAbility40HC,
                                    indicatedPrice: item.indicatedPrice,
                                    statusUpdatorName: item.statusUpdatorName,
                                    statusUpdatedBy: item.statusUpdatedBy,
                                    statusUpdatedDate: item.statusUpdatedDate
                                });
                            }
                        }
                    });
                    $scope.quicksearchSampleProduct.event.close($event);
                }
            }
        };

            //import from wex
        $scope.importFromWexForm = {
            load: function () {
                var input = document.createElement("input");
                input.setAttribute("type", "file");
                input.setAttribute("accept", ".csv");
                input.addEventListener("change", function (e) {
                    //get file content
                    var file = e.target.files[0];
                    Papa.parse(file, {
                        delimiter: "",
                        //header: true,
                        skipEmptyLines: true,
                        complete: function (results) {
                            //console.log(results);
                            //adjust source data (replace ' by string empty)
                            var wexItems = [];
                            var wexItem = {};
                            var hearder = results.data[0];
                            for (var i = 0; i < results.data.length; i++) {
                                if (i > 0) {
                                    var item = results.data[i];
                                    wexItem = {};
                                    for (var j = 0; j < hearder.length; j++) {
                                        wexItem[hearder[j].replace(/'/g, '')] = item[j].replace(/'/g, '');
                                    }
                                    wexItems.push(wexItem);
                                }
                            }
                            //console.log(wexItems);

                            //set to warehouse item search status
                            $scope.quicksearchModel.filters.filters.modelStatusID = -2;

                            //get clientUD
                            var clientUD = "" + wexItems[0].Client;
                            var pad = "000000"
                            var clientUD = pad.substring(0, pad.length - clientUD.length) + clientUD
                            $scope.quicksearchClient.filters.filters.searchQuery = clientUD;
                            offerService.quicksearchClient(
                                $scope.quicksearchClient.filters,
                                function (data) {
                                    if (data.message.type == 0) {
                                        if (data.data == null || data.data.length == 0) {
                                            bootbox.alert('Could not find this client on tilsoft system');
                                        }
                                        else {
                                            var clientInfo = data.data[0];
                                            //console.log(clientInfo);
                                            $scope.offerDataContainer.offerData.clientID = clientInfo.clientID;
                                            $scope.offerDataContainer.offerData.clientUD = clientInfo.clientUD;
                                            $scope.offerDataContainer.offerData.clientNM = clientInfo.clientNM;

                                            $scope.offerDataContainer.offerData.clientTelephone = clientInfo.telephone;
                                            $scope.offerDataContainer.offerData.clientEmail = clientInfo.email;
                                            $scope.offerDataContainer.offerData.clientStreetAddress1 = clientInfo.streetAddress1;
                                            $scope.offerDataContainer.offerData.clientStreetAddress2 = clientInfo.streetAddress2;

                                            $scope.offerDataContainer.offerData.paymentTermID = clientInfo.paymentTermID;
                                            $scope.offerDataContainer.offerData.deliveryTermID = clientInfo.deliveryTermID;
                                            $scope.offerDataContainer.offerData.saleID = clientInfo.saleID;
                                            $scope.offerDataContainer.offerData.clientContactPerson = clientInfo.clientContactName;
                                            $scope.$apply();
                                        }

                                    }
                                },
                                function (error) {
                                    jsHelper.showMessage('warning', error);
                                }
                            );

                            //get product
                            var articleCodes = '';
                            angular.forEach(wexItems, function (item) {
                                articleCodes += item.ArticleCode + ',';
                            });
                            $scope.quicksearchWarehouseItem.filters.filters.searchQuery = articleCodes;
                            $scope.quicksearchWarehouseItem.filters.filters.isWexItem = true;
                            supportService.quicksearchWarehouseItem(
                                $scope.quicksearchWarehouseItem.filters,
                                function (data) {
                                    if (data.message.type == 0) {
                                        var warehouseProducts = data.data;
                                        $scope.offerDataContainer.offerData.offerLines = [];
                                        $scope.offerDataContainer.offerData.offerLineSpareparts = [];
                                        angular.forEach(wexItems, function (item) {
                                            var warehouseItems = warehouseProducts.filter(function (o) { return o.articleCode == item.ArticleCode });
                                            if (warehouseItems != null && warehouseItems.length > 0) {
                                                var wItem = warehouseItems[0];
                                                //sort to find max rowIndex
                                                var offerLines = $scope.offerDataContainer.offerData.offerLines.sort(function (a, b) { return a.rowIndex - b.rowIndex });
                                                var rowIndex = parseInt('1');
                                                if (offerLines.length > 0) {
                                                    rowIndex = parseInt(offerLines[offerLines.length - 1].rowIndex) + parseInt('1');
                                                }
                                                if (wItem.productType == 'PRODUCT') {
                                                    $scope.offerDataContainer.offerData.offerLines.push({
                                                        offerLineID: $scope.getNewID(),
                                                        rowIndex: rowIndex,
                                                        modelID: wItem.modelID,
                                                        modelUD: wItem.modelUD,
                                                        modelNM: wItem.modelNM,
                                                        articleCode: wItem.articleCode,
                                                        description: wItem.description,
                                                        productFileLocation: wItem.selectedFullImage,
                                                        productThumbnailLocation: wItem.selectedThumbnailImage,
                                                        manufacturerCountryID: wItem.manufacturerCountryID,
                                                        packagingMethodID: wItem.packagingMethodID,

                                                        materialID: wItem.materialID,
                                                        materialTypeID: wItem.materialTypeID,
                                                        materialColorID: wItem.materialColorID,
                                                        frameMaterialID: wItem.frameMaterialID,
                                                        frameMaterialColorID: wItem.frameMaterialColorID,
                                                        subMaterialID: wItem.subMaterialID,
                                                        subMaterialColorID: wItem.subMaterialColorID,
                                                        backCushionID: wItem.backCushionID,
                                                        seatCushionID: wItem.seatCushionID,
                                                        cushionColorID: wItem.cushionColorID,
                                                        fscTypeID: wItem.fscTypeID,
                                                        fscPercentID: wItem.fscPercentID,

                                                        quantity: item.Qnt //quantity from Wex
                                                    });
                                                    //console.log($scope.offerDataContainer.offerData.offerLines);
                                                }
                                                else if (item.productType == 'SPAREPART') {
                                                    //sort to find max rowIndex
                                                    var offerLineSpareParts = $scope.offerDataContainer.offerData.offerLineSpareparts.sort(function (a, b) { return a.rowIndex - b.rowIndex });
                                                    rowIndex = 1;
                                                    if (offerLineSpareParts.length > 0) {
                                                        rowIndex = offerLineSpareParts[offerLineSpareParts.length - 1].rowIndex + 1;
                                                    }
                                                    $scope.offerDataContainer.offerData.offerLineSpareparts.push({
                                                        offerLineSparePartID: $scope.getNewID(),
                                                        rowIndex: rowIndex,
                                                        modelID: wItem.modelPartID,
                                                        partID: wItem.partID,
                                                        articleCode: wItem.articleCode,
                                                        description: wItem.description,
                                                    });
                                                }
                                                //emtpy box search after searech success
                                                $scope.quicksearchWarehouseItem.filters.filters.searchQuery = '';
                                                $scope.$apply();
                                            }
                                            else {
                                                bootbox.alert('Could not find articlecode:' + item.ArticleCode + ' in tilsoft system');
                                            }
                                        });
                                    }
                                    else {
                                        jsHelper.processMessage(data.message);
                                    }
                                },
                                function (error) {
                                    jsHelper.showMessage('warning', error);
                                }
                            );

                            //apply data
                            $scope.$apply();
                        }
                    });
                }, false);
                input.click();
            },


        };

        $scope.exportExcelNewVersion = function () {
            offerService.exportNewVersion(
                $scope.offerDataContainer.offerData.offerID,
                function (data) {
                    window.location = '@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data;
                },
                function (error) {
                });
        };

        $scope.printExcelFOBItemOnly = function (id) {
            offerService.excelPOBItemOnly(
                id,
                function (data) {
                    jsHelper.processMessage(data.message);
                    if (data.message.type !== 2) {
                        window.location = '@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data;
                    }
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        };

            $scope.sendNotificationApproveOffer = function (id) {
                offerService.sendNotificationApproveOffer(
                    id, 
                    function(data) {
                        jsHelper.processMessage(data.message);
                    }, 
                    function(error) {
                        jsHelper.showMessage('warning', error);
                    });
        };


        //
        //cost of item
        //
        $scope.delta = function (offerLineItem) {
            var delta = $scope.salePriceInUSD(offerLineItem)
                - $scope.purchasingPriceInUSD(offerLineItem)
                - $scope.commissionInUSD(offerLineItem)
                - $scope.lcCostInUSD(offerLineItem)
                - $scope.interestInUSD(offerLineItem)
                - $scope.damagesCostInUSD(offerLineItem)
                - $scope.transportationInUSD(offerLineItem)

            return delta;
        };

        $scope.deltaPercent = function (offerLineItem) {
            var deltaPercent = $scope.delta(offerLineItem) / $scope.purchasingPriceInUSD(offerLineItem) * 100;
            return deltaPercent;
        };


        $scope.salePriceInUSD = function (offerLineItem){
            if ($scope.offerDataContainer === null || $scope.offerDataContainer.offerData === null) return 0;

            var currency = $scope.offerDataContainer.offerData.currency;
            var exRate = $scope.getExchangeRate();
            var unitPrice = parseFloat(offerLineItem.unitPrice === null || offerLineItem.unitPrice === '' ? 0 : offerLineItem.unitPrice);

            //get amount in USD
            var salePriceInUSD = unitPrice * (currency === 'EUR' ? exRate : 1);

            if (!salePriceInUSD) salePriceInUSD = 0;
            return salePriceInUSD;
        };

        $scope.purchasingPriceInUSD = function (offerLineItem) {
            if ($scope.offerDataContainer === null || $scope.offerDataContainer.offerData === null) return 0;
            var purchasingPriceInUSD = parseFloat(offerLineItem.planingPurchasingPrice === null ? 0 : offerLineItem.planingPurchasingPrice);

            //get purchasing amount
            if (!purchasingPriceInUSD) purchasingPriceInUSD = 0;
            return purchasingPriceInUSD;
        };

        $scope.commissionInUSD = function (offerLineItem) {
            if ($scope.offerDataContainer === null || $scope.offerDataContainer.offerData === null) return 0;

            var currency = $scope.offerDataContainer.offerData.currency;
            var exRate = $scope.getExchangeRate();
            var unitPrice = parseFloat(offerLineItem.unitPrice === null || offerLineItem.unitPrice === '' ? 0 : offerLineItem.unitPrice);
            var commissionPercent = $scope.offerDataContainer.offerData.commissionPercent;
            commissionPercent = parseFloat(commissionPercent === null || commissionPercent === '' ? 0 : commissionPercent);

            //get commission
            var commissionInUSD = 0
            commissionInUSD = unitPrice * (currency === 'EUR' ? exRate : 1) * commissionPercent / 100;
            if (!commissionInUSD) commissionInUSD = 0;
            return commissionInUSD;
        };

        $scope.lcCostInUSD = function (offerLineItem) {
            if ($scope.offerDataContainer === null || $scope.offerDataContainer.offerData === null) return 0;

            var currency = $scope.offerDataContainer.offerData.currency;
            var exRate = $scope.getExchangeRate();
            var season = $scope.offerDataContainer.offerData.season;
            var unitPrice = parseFloat(offerLineItem.unitPrice === null || offerLineItem.unitPrice === '' ? 0 : offerLineItem.unitPrice);

            //get lc cost percent
            var lcCostPercent = null;
            var estimatedAdditionalCost = $scope.offerDataContainer.supportData.clientEstimatedAdditionalCostDTOs.filter(o => o.season === season);
            if (estimatedAdditionalCost.length > 0) lcCostPercent = estimatedAdditionalCost[0].lcCostPercent;

            //get payment type
            var paymentTypeID = null;
            var paymentTerms = $scope.offerDataContainer.supportData.paymentTerms.filter(o => o.paymentTermID === $scope.offerDataContainer.offerData.paymentTermID);
            if (paymentTerms.length > 0) {
                paymentTypeID = paymentTerms[0].paymentTypeID;
            }

            //get lc cost
            var lcCostInUSD = 0;
            if (lcCostPercent !== null) {
                lcCostInUSD=  unitPrice * lcCostPercent / 100 * (currency === 'EUR' ? exRate : 1);
            }
            else if (paymentTypeID === 4) {
                lcCostInUSD = unitPrice * 1 / 100 * (currency === 'EUR' ? exRate : 1);
            }
            if (!lcCostInUSD) lcCostInUSD = 0;
            return lcCostInUSD;
        };

        $scope.interestInUSD = function (offerLineItem) {
            if ($scope.offerDataContainer === null || $scope.offerDataContainer.offerData === null) return 0;

            var currency = $scope.offerDataContainer.offerData.currency;
            var exRate = $scope.getExchangeRate();
            var season = $scope.offerDataContainer.offerData.season;
            var unitPrice = parseFloat(offerLineItem.unitPrice === null || offerLineItem.unitPrice === '' ? 0 : offerLineItem.unitPrice);

            //get interest cost percent
            var interestCostPercent = null;
            var estimatedAdditionalCost = $scope.offerDataContainer.supportData.clientEstimatedAdditionalCostDTOs.filter(o => o.season === season);
            if (estimatedAdditionalCost.length > 0) interestCostPercent = estimatedAdditionalCost[0].interestCostPercent;

            //get payment day && payment method && down value
            var inDays = null;
            var paymentMethod = '';
            var downValue = 0;
            var paymentTerms = $scope.offerDataContainer.supportData.paymentTerms.filter(o => o.paymentTermID === $scope.offerDataContainer.offerData.paymentTermID);
            if (paymentTerms.length > 0) {
                inDays = parseFloat(paymentTerms[0].inDays);
                paymentMethod = paymentTerms[0].paymentMethod;
                downValue = parseFloat(paymentTerms[0].downValue);
            }

            //get interest cost
            var interestInUSD = 0;
            if (interestCostPercent !== null) {
                interestInUSD = unitPrice * interestCostPercent / 100 * (currency === 'EUR' ? exRate : 1);
            }
            else if (inDays !== null) {
                interestInUSD = unitPrice * inDays * (currency === 'EUR' ? exRate : 1) * (paymentMethod === 'DP-PERCENT' ? (1 - downValue / 100) : 1) * 4.5 / 100 / 360;
            }
            if (!interestInUSD) interestInUSD = 0;
            return interestInUSD;
        };

        $scope.damagesCostInUSD = function (offerLineItem) {
            if ($scope.offerDataContainer === null || $scope.offerDataContainer.offerData === null) return 0;
            var price = offerLineItem.planingPurchasingPrice ? offerLineItem.planingPurchasingPrice : offerLineItem.autoPlaningPurchasingPrice

            //get damage cost
            var damagesCostInUSD = parseFloat(price === null ? 0.001 : price) * 1.25 / 100;
            if (!damagesCostInUSD) damagesCostInUSD = 0;
            return damagesCostInUSD;
        };

        $scope.transportationInUSD = function (offerLineItem) {
            if ($scope.offerDataContainer === null || $scope.offerDataContainer.offerData === null) return 0;

            var currency = $scope.offerDataContainer.offerData.currency;
            var exRate = $scope.getExchangeRate();
            var qnt40HC = offerLineItem.qnt40HC === null || offerLineItem.qnt40HC == '' ? 0 : offerLineItem.qnt40HC;
            var transportationFee = $scope.offerDataContainer.offerData.transportationFee;
            transportationFee = parseFloat(transportationFee === null || transportationFee === '' ? 0 : transportationFee);

            //get transportation
            var transportationInUSD = 0;
            if (currency === 'EUR' && qnt40HC!==0) {
                transportationInUSD = transportationFee / qnt40HC * exRate;
            }
            if (!transportationInUSD) transportationInUSD = 0;
            return transportationInUSD;
        };

        $scope.getTotalOfferLineItem = function () {
            if ($scope.offerDataContainer === null || $scope.offerDataContainer.offerData === null) return 0;
            if ($scope.showAllItem) {
                return $scope.offerDataContainer.offerData.offerLines.length;
            }
            else {
                var x = $scope.offerDataContainer.offerData.offerLines.filter(o => o.quantity > 0);
                return x.length;
            }
        };

        $scope.refresh = function () {
            window.location = '@Url.Action("Edit", "Offer", new { id = UrlParameter.Optional,id2 = UrlParameter.Optional})/' + $scope.offerDataContainer.offerData.offerID + '/' + 1;
        };

        //load form
        $scope.load();
    }]);

    </script>
}



