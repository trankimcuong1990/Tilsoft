@{
    ViewBag.Title = "Search Factory Payment";
    ViewBag.Module = "FactoryPayment";
}

<div class="row">

    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

        <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <span class="widget-icon"> <i class="fa fa-search"></i> </span>
                <h2>Search Filters</h2>
            </header>

            <div>
                <div class="jarviswidget-editbox"></div>
                <div class="widget-body">
                    <div class="row">

                        <div class="col-sm-2">
                            <label>Receipt No</label>
                            <input class="form-control search-filter" type="text" id="ProformaInvoiceNo" ng-model="filters.PaymentReceiptNo">
                        </div>
                        
                        <div class="col-sm-2">
                            <label>Season</label>
                            <select name="season" class="form-control search-filter" ng-model="filters.Season" ng-options="season.seasonValue as season.seasonText for season in data.seasons">
                                <option value=""></option>
                            </select>
                        </div>

                        <div class="col-sm-2">
                            <label>Factory</label>
                            <select name="sale" class="form-control search-filter" ng-model="filters.FactoryID" ng-options="item.factoryID as item.factoryUD for item in data.factories | orderBy : 'factoryUD'">
                                <option value=""></option>
                            </select>
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                <h2>Search Result</h2>
            </header>

            <div>
                <div class="widget-body">
                    <div id="searchResult" class="tilsoft-table-wrapper">
                        <div class="tilsoft-table">
                            <div class="tilsoft-table-header" style="width: 1000px;">
                                <div style="width: 121px;"></div>
                                <div style="width: 200px;" class="sorting" data-colname="PaymentReceiptNo">Receipt No</div>
                                <div style="width: 100px;" class="sorting" data-colname="PaymentDate">Payment Date</div>
                                <div style="width: 100px;" class="sorting" data-colname="Season">Season</div>
                                <div style="width: 100px;" class="sorting" data-colname="FactoryUD">Factory</div>
                                <div style="width: 150px;" class="sorting" data-colname="USDAmount">Amount (USD)</div>
                                <div style="width: 200px;" class="sorting" data-colname="CreatorName">Created By</div>
                                <div style="width: 100px;" class="sorting" data-colname="CreatedDate">Created Date</div>
                                <div style="width: 200px;" class="sorting" data-colname="UpdatedBy">Updated By</div>
                                <div class="sorting_desc" data-colname="UpdatedDate">Updated Date</div>
                            </div>
                            <div class="tilsoft-table-body" style="width: 1000px;">
                                <table>
                                    <tr ng-repeat="item in data.factoryPayments">
                                        <td style="text-align: center; width: 120px;">
                                            @if (Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Update, HttpContext.Current) == "disabled")
                                            {
                                                <a class="btn btn-primary btn-xs font-11" href="@Url.Action("Edit", "FactoryPayment")/{{item.factoryPaymentID}}" title="View (Read Only) title=" view (read only)"><i class="fa fa-folder-open"></i>View</a>
                                            }
                                            else
                                            {
                                                <a class="btn btn-primary btn-xs font-11" href="@Url.Action("Edit", "FactoryPayment")/{{item.factoryPaymentID}}" title="Edit"><i class="fa fa-pencil"></i>Edit</a>
                                            }

                                            @if (Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Delete, HttpContext.Current) != "disabled")
                                            {
                                                <a class="btn btn-danger btn-xs font-11" href="#" ng-click="event.delete(item.factoryPaymentID,$event)" title="Delete"><i class="fa fa-times"></i>Del</a>
                                            }
                                        </td>
                                        <td style="text-align: left; width: 200px;">{{item.paymentReceiptNo}}</td>
                                        <td style="text-align: center; width: 100px;">{{item.paymentDate}}</td>
                                        <td style="text-align: center; width: 100px;">{{item.season}}</td>
                                        <td style="text-align: center; width: 100px;">{{item.factoryUD}}</td>
                                        <td style="text-align: right; width: 150px;">{{item.usdAmount | number : 2}}</td>
                                        <td style="text-align: center; width: 200px;">
                                            <a ng-show="(item.createdBy!=null && item.creatorName2!=null)" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{item.createdBy}}" da data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                                <i class="fa fa-user"></i> {{item.creatorName2}}
                                            </a>
                                            <span ng-show="(item.createdBy!=null && item.creatorName2==null && item.creatorName!=null)">{{item.creatorName}}</span>
                                        </td>
                                        <td style="text-align: center; width: 100px;">{{item.createdDate}}</td>
                                        <td style="text-align: center; width: 200px;">
                                            <a ng-show="(item.updatedBy!=null && item.updatorName2!=null)" href="@Url.Action("Detail", "EmployeeMng", new { id = UrlParameter.Optional })/{{item.updatedBy}}" da data-featherlight="iframe" data-featherlight-iframe-allowfullscreen="true" data-featherlight-iframe-width="800" data-featherlight-iframe-height="600">
                                                <i class="fa fa-user"></i> {{item.updatorName2}}
                                            </a>
                                            <span ng-show="(item.updatedBy!=null && item.updatorName2==null && item.updatorName!=null)">{{item.updatorName}}</span>
                                        </td>
                                        <td>{{item.updatedDate}}</td>
                                    </tr>
                                    <tr>
                                        <td colspan="5" style="text-align:right"><b>TOTAL AMOUNT</b></td>
                                        <td style="text-align:right"><span class="form-control">{{calTotalAmount() | number : 2}}</span></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </article>
    
    <div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="frmPrintOption" class="modal fade" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button aria-hidden="true" data-dismiss="modal" class="close" type="button">
                        ×
                    </button>
                    <h4 id="myModalLabel" class="modal-title">Print Option</h4>
                </div>
                <div class="modal-body smart-form">
                    <fieldset>
                        <div class="row">
                            <section class="col col-12">
                                <label class="label">Season</label>
                                <select name="season" class="form-control" ng-model="printFilter.season" ng-options="item.seasonValue as item.seasonText for item in data.seasons" required>
                                    <option value=""></option>
                                </select>
                            </section>

                            <section class="col col-12">
                                <label class="label">Supplier</label>
                                <select name="season" class="form-control" ng-model="printFilter.supplierID" ng-options="item.supplierID as item.supplierUD + ' / ' + item.supplierNM for item in data.suppliers | orderBy : 'supplierUD'" required>
                                    <option value=""></option>
                                </select>
                            </section>
                        </div>
                    </fieldset>
                </div>
                <div class="modal-footer">
                    <button data-dismiss="modal" class="btn btn-default" type="button">
                        CANCEL
                    </button>
                    <button class="btn btn-primary" type="button" ng-click="event.print($event)">
                        PRINT
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section FormAction {
    <ul id="sparks">
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Search" ng-click="event.search()"><i class="fa fa-search"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Refresh" ng-click="event.search()"><i class="fa fa-refresh"></i></a>
        </li>
        <li class="sparks-info">
            <a href="@Url.Action("Edit", "FactoryPayment")/0" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Create, HttpContext.Current))" title="New"><i class="fa fa-file-o"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default" title="Print" ng-click="event.showPrintOption($event)"><i class="fa fa-print"></i></a>
        </li>
    </ul>
}

@section pagejs {
    <script src="~/Angular/app/jsonService.js?c=@System.Guid.NewGuid().ToString().Replace("-", "")"></script>
    <script src="~/Angular/app/factoryPayment/service.js?c=@System.Guid.NewGuid().ToString().Replace("-", "")"></script>
    <script type="text/javascript">

        jQuery('.search-filter').keypress(function(e){
            if (e.keyCode == 13) {
                var scope = angular.element(jQuery('body')).scope();
                scope.event.search();
            }
        });

        var searchResultGrid = jQuery('#searchResult').scrollableTable(
            function(currentPage){
                var scope = angular.element(jQuery('body')).scope();
                scope.$apply(function(){
                    scope.pageIndex = currentPage;
                    jsonService.searchFilter.pageIndex = scope.pageIndex;
                    scope.event.search();
                });
            },
            function(sortedBy, sortedDirection){
                var scope = angular.element(jQuery('body')).scope();
                scope.$apply(function(){
                    jsonService.searchFilter.sortedDirection = sortedDirection;
                    scope.pageIndex = 1;
                    jsonService.searchFilter.pageIndex = scope.pageIndex;
                    jsonService.searchFilter.sortedBy = sortedBy;
                    scope.event.search();
                });
            }
        );

        jsonService.serviceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/factoryPayment/';
        jsonService.token = '@Session[Frontend.Customize.Common.ProjectDefinition.TOKEN_SESSION]';
        jsonService.searchFilter.pageSize = @System.Configuration.ConfigurationManager.AppSettings["DefaultPageSize"];

        var tilsoftApp = angular.module('tilsoftApp', []);
        tilsoftApp.controller('tilsoftController', ['$scope', function ($scope) {
            //
            // property
            //
            $scope.data = null;
            $scope.pageIndex = 1;
            $scope.totalPage = 0;

            $scope.filters = {
                PaymentReceiptNo : '',
                Season : '',
                FactoryID : null
            };

            $scope.printFilter = {
                season : '@Frontend.Helper.Common.GetCurrentSeason()',
                supplierID : null,
            };

            //sum 
            $scope.calTotalAmount = function(){
                if ($scope.data == null) return;
                var total = 0;
                angular.forEach($scope.data.factoryPayments, function(item){
                    total = total + item.usdAmount;
                })
                return total;
            }

            //
            // event
            //
            $scope.event = {
                search: function(){
                    jsonService.searchFilter.filters = $scope.filters;
                    jsonService.search(
                        function (data) {
                            $scope.data = data.data;
                            $scope.totalPage = Math.ceil(data.totalRows / jsonService.searchFilter.pageSize);
                            $scope.$apply();

                            if(data.totalRows < jsonService.searchFilter.pageSize) {
                                jQuery('#searchResult').find('ul').hide();
                            }
                            else {
                                jQuery('#searchResult').find('ul').show();
                            }

                            jQuery('#content').show();
                            searchResultGrid.updateLayout();
                        },
                        function (error) {
                            $scope.data = null;
                            $scope.pageIndex = 1;
                            $scope.totalPage = 0;
                            $scope.$apply();
                        }
                    );
                },
                delete: function (id,$event){
                    
                    if (confirm('Are you sure ?')) {
                        jsonService.delete(id,
                            function (data) {
                                jsHelper.processMessage(data.message);

                                if(data.message.type == 0) {
                                    var j = -1;
                                    for (var i = 0; i < $scope.data.factoryPayments.length; i++) {
                                        if ($scope.data.factoryPayments[i].factoryPaymentID == id) {
                                            j = i;
                                            break;
                                        }
                                    }

                                    if (j >= 0) {
                                        $scope.data.factoryPayments.splice(j, 1);
                                    }
                                    $scope.$apply();
                                }
                            },
                            function (error) {
                                jsHelper.showMessage('warning', error);
                            }
                        );
                    }
                },
                init : function(){
                    $scope.event.search();
                },

                showPrintOption : function ($event) {
                    $event.preventDefault();
                    $('#frmPrintOption').modal('show');
                },

                print: function($event){
                    $event.preventDefault();
                    season = $scope.printFilter.season;
                    supplierID = $scope.printFilter.supplierID;

                    jsonService.getReport(
                        season,
                        supplierID,
                        function (data) {
                            jsHelper.processMessage(data.message);
                            if (data.message.type != 2)
                            {
                                window.location = '@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data + '.xlsm';
                                $('#frmPrintOption').modal('hide');
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                        }
                    );
                }
            }

            //
            // method
            //


            //
            // init
            //
            $scope.event.init();
        }]);
    </script>
}
