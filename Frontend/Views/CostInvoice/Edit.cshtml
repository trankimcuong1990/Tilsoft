@{
    if (ViewBag.ID == 0)
    {
        ViewBag.Title = "Create New Invoice";
    }
    else
    {
        ViewBag.Title = "Edit Invoice";
    }

    ViewBag.Module = "CostInvoice";
}

<form class="row" name="editForm" id="main-form">

    <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

        <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <span class="widget-icon">
                    <i class="fa fa-database"></i>
                </span>
                <h2>Invoice Infomation</h2>
            </header>
            <div>
                <div class="jarviswidget-editbox"></div>

                <div class="widget-body">
                    <div class="smart-form">
                        <fieldset>

                            <div class="row">

                                <section class="col col-2">
                                    <label>Eurofar Invoice No</label>
                                    <span class="form-control">{{costinvoice.costInvoiceData.eurofarInvoiceNo}}</span>
                                </section>

                                <section class="col col-2">
                                    <label>BL No</label>
                                    <span class="form-control">{{costinvoice.costInvoiceData.blNo}}</span>
                                </section>

                                <section class="col col-2">
                                    <label>Client Code</label>
                                    <span class="form-control">{{costinvoice.costInvoiceData.clientUD}}</span>
                                </section>

                                <section class="col col-6">
                                    <label>Client Name</label>
                                    <span class="form-control">{{costinvoice.costInvoiceData.clientNM}}</span>
                                </section>

                                
                            </div>

                            <div class="row">

                                <section class="col col-1">
                                    <label>Type</label>
                                    <select class="form-control" name="costType" ng-model="costinvoice.costInvoiceData.costType" ng-options="item.costTypeValue as item.costTypeText for item in costinvoice.costTypes" ng-change="selectCostType(costinvoice.costInvoiceData.costType)" required>
                                        <option value=""></option>
                                    </select>
                                    <span class="help-block" ng-show="editForm.costType.$error.required"><i class="fa fa-warning"></i>Cost Type is required.</span>
                                </section>

                                <section class="col col-1">
                                    <label>Inv.No</label>
                                    <input class="form-control" type="text" name="invoiceNo" ng-model="costinvoice.costInvoiceData.invoiceNo">
                                </section>

                                <section class="col col-1">
                                    <label>Inv.Date</label>
                                    <input class="form-control" type="text" id="txtinvoicedate" ng-model="costinvoice.costInvoiceData.invoiceDateFormated">
                                </section>

                                <section class="col col-1">
                                    <label>Currency</label>
                                    <select class="form-control" name="currency" ng-model="costinvoice.costInvoiceData.currency" ng-options="item.currencyValue as item.currencyText for item in costinvoice.currency">
                                        <option value=""></option>
                                    </select>
                                </section>

                                <section class="col col-1">
                                    <label>Ref.No</label>
                                    <input class="form-control" type="text" name="invoiceRefNo" ng-model="costinvoice.costInvoiceData.invoiceRefNo">
                                </section>

                                <section class="col col-3">
                                    <label>Conditions</label>
                                    <input class="form-control" type="text" id="condition" ng-model="costinvoice.costInvoiceData.condition">
                                </section>

                                <section class="col col-2">
                                    <label>Delivery Term</label>
                                    <select class="form-control" name="deliveryTermID" ng-model="costinvoice.costInvoiceData.deliveryTermID" ng-options="item.deliveryTermID as item.deliveryTermNM for item in costinvoice.deliveryTerms" ng-change="selectedDelivery(costinvoice.costInvoiceData.deliveryTermID)">
                                        <option value=""></option>
                                    </select>
                                </section>

                                <section class="col col-2">
                                    <label>Payment Term</label>
                                    <select class="form-control" name="paymentTermID" ng-model="costinvoice.costInvoiceData.paymentTermID" ng-options="item.paymentTermID as item.paymentTermNM for item in costinvoice.paymentTerms" ng-change="selectedPaymentTerm(costinvoice.costInvoiceData.paymentTermID)">
                                        <option value=" "></option>
                                    </select>
                                </section>
                                
                            </div>

                            <div class="row">

                                <section class="col col-2">
                                    <label>Created By</label>
                                    <span class="form-control">{{costinvoice.costInvoiceData.creatorName}}</span>
                                </section>
                                <section class="col col-2">
                                    <label>Created Date</label>
                                    <span class="form-control">{{costinvoice.costInvoiceData.createdDateFormated}}</span>
                                </section>

                                <section class="col col-2">
                                    <label>Updated By</label>
                                    <span class="form-control">{{costinvoice.costInvoiceData.updatorName}}</span>
                                </section>

                                <section class="col col-2">
                                    <label>Updated Date</label>
                                    <span class="form-control">{{costinvoice.costInvoiceData.updatedDateFormated}}</span>
                                </section>
                            </div>

                            


                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    
        <div class="jarviswidget" id="wid-id-detail-piece" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <span class="widget-icon">
                    <i class="fa fa-database"></i>
                </span>
                <h2>Container</h2>
            </header>
            <div>
                <div class="widget-body">
                    <div class="smart-form">
                        <fieldset>
                            <div class="row">
                                <section class="col col-lg-6" style="margin-bottom:0px;">
                                    <label class="input">
                                        <input type="text" placeholder="press enter to search all container or type at least 3 chars to search container" ng-model="quickSearchContainer.modelNM" autocomplete="off" ng-keyup="quickSearchContainer.event.searchBoxKeyUp($event)" id="txtContainerNo" />
                                        <a ng-click="quickSearchContainer.event.clickSearch()" href="javascript:void(0);"> <i class="icon-append fa fa-search"></i></a>
                                    </label>
                                    <div id="container-popup" class="popup-container-2">
                                        <div style="float: right; margin-bottom: 8px;">
                                            <a ng-click="quickSearchContainer.event.close($event, true)" class="btn btn-danger btn-xs" href="javascript:void(0);"><i class="fa fa-remove"></i> Close</a>
                                            <a ng-click="quickSearchContainer.event.ok($event, true)" class="btn btn-primary btn-xs" href="javascript:void(0);"><i class="fa fa-check"></i> OK</a>
                                        </div>
                                        <div class="clear"></div>
                                        <div id="quickSearchContainerGrid" class="tilsoft-table-wrapper">
                                            <div class="tilsoft-table">
                                                <div class="tilsoft-table-header" style="width: 360px;">
                                                    <div style="width: 60px;"></div>
                                                    <div style="width: 100px;">SeaFreight Invoiced</div>
                                                    <div style="width: 100px; ">Trucking Invoiced</div>
                                                    <div>CONTAINER NO</div>
                                                </div>
                                                <div class="tilsoft-table-body" style="width: 360px;">
                                                    <table>
                                                        <tr ng-repeat="item in quickSearchContainer.data">
                                                            <td style="width: 60px; text-align: center;">
                                                                <input type="checkbox" ng-model="item.isSelected" />
                                                            </td>
                                                            <td style="width: 100px; text-align: center; "><input type="checkbox" ng-model="item.seaFreightInvoiced"  disabled/></td>
                                                            <td style="width: 100px; text-align: center; "><input type="checkbox" ng-model="item.truckingInvoiced" disabled /></td>
                                                            <td >{{item.containerNo}}</td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </section>
                            </div>
                        </fieldset>

                        <div id="detailTable" class="table-responsive">
                            <table class="table table-bordered table-hover custom-table dataTable">
                                <thead>
                                    <tr>
                                        <th style="width: 130px;"></th>
                                        <th class="sorting_asc" data-colname="containerNo" style="width: 120px;">CONTAINER NO</th>
                                        <th class="sorting" data-colname="description">DESCRIPTION</th>
                                        <th class="sorting" data-colname="amount" style="width: 100px;">AMOUNT</th>
                                    </tr>
                                </thead>
                                <tbody ng-repeat="detail in costinvoice.costInvoiceData.costInvoiceDetails">
                                    <tr>
                                        <td style="text-align: center;">
                                            <a href="#" class="btn btn-primary btn-xs font-11" title="View cont line description" ng-click="detailDesciprtionForm.event.load($event,detail.costInvoiceDetailID)"><i id="icon-detail-description-{{detail.costInvoiceDetailID}}" class="fa fa-plus-square-o"></i> Description</a>
                                            <a href="javascript:void(0)" ng-click="removeDetail($event, detail.costInvoiceDetailID)" title="Delete" class="btn btn-danger btn-xs font-11"><i class=" fa fa-times"></i>Del</a>
                                        </td>
                                        <td><span class="form-control">{{detail.containerNo}}</span></td>
                                        <td><input class="form-control" type="text" name="description" ng-model="detail.description"></td>
                                        <td>
                                            <div class="input-group">
                                                <span class="input-group-addon">{{costinvoice.costInvoiceData.currency == 'USD' ? '$' : ''}} {{costinvoice.costInvoiceData.currency == 'EUR' ? '€' : ''}}</span>
                                                <span class="form-control" style="text-align:right">{{calTotalAmount(detail.costInvoiceDetailID) | number : 2}}</span>
                                            </div>
                                        </td>
                                    </tr>

                                    <tr id="{{detail.costInvoiceDetailID}}" style="display:none">
                                        <td></td>
                                        <td colspan="3">
                                            <a class="btn btn-primary btn-xs font-11" href="javascript:void(0);" ng-click="detailDesciprtionForm.event.add($event,detail.costInvoiceDetailID)" style="margin-bottom: 10px;"><i class="fa fa-plus"></i> Add blank line</a>
                                            <a class="btn btn-primary btn-xs font-11" href="javascript:void(0);" ng-click="detailDesciprtionForm.event.addT1($event,detail.costInvoiceDetailID)" style="margin-bottom: 10px;"><i class="fa fa-plus"></i> Add T1</a>
                                            <a class="btn btn-primary btn-xs font-11" href="javascript:void(0);" ng-click="detailDesciprtionForm.event.addT2($event,detail.costInvoiceDetailID)" style="margin-bottom: 10px;"><i class="fa fa-plus"></i> Add T2</a>
                                            <a class="btn btn-primary btn-xs font-11" href="javascript:void(0);" ng-click="detailDesciprtionForm.event.addE($event,detail.costInvoiceDetailID)" style="margin-bottom: 10px;"><i class="fa fa-plus"></i> Add E</a>
                                            <table class="table table-bordered table-hover custom-table dataTable">
                                                <thead>
                                                    <tr>
                                                        <th style="width: 20px;"></th>
                                                        <th class="sorting" data-colname="description">DESCRIPTION</th>
                                                        <th class="sorting" data-colname="amount" style="width: 100px;">AMOUNT</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr ng-repeat="item in detail.costInvoiceDetailExtends">
                                                        <td style="text-align: center;">
                                                            <a href="#" class="btn btn-danger btn-xs font-11" title="Delete" ng-click="detailDesciprtionForm.event.remove($event,detail.costInvoiceDetailID, item.costInvoiceDetailExtendID)"><i class="fa fa-times"></i>Del</a>
                                                        </td>
                                                        <td><input class="form-control" type="text" name="description" ng-model="item.description"></td>
                                                        <td>
                                                            <div class="input-group">
                                                                <span class="input-group-addon">{{costinvoice.costInvoiceData.currency == 'USD' ? '$' : ''}} {{costinvoice.costInvoiceData.currency == 'EUR' ? '€' : ''}}</span>
                                                                <input type="text" class="form-control furnindo-currency" ng-model="item.amount" style="text-align:right" ng-currency fraction="2" currency-symbol="" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>

                                        </td>
                                    </tr>

                                </tbody>
                            </table>
                        </div>
                    </div>


                    
                </div>

            </div>
        </div>
    
        

    </article>

</form>


@section pagepopup2
{
    <div id="initForm" class="row" style="display:none">
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="jarviswidget" id="wid-id-product-information" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
                <header>
                    <h2>Select invoice to create cost invoice</h2>
                </header>
                <div>
                    <div class="widget-body no-padding">
                        <div class="smart-form">
                            <fieldset>
                                <table class="table table-bordered table-hover custom-table dataTable">
                                    <thead>
                                        <tr>
                                            <th style="width: 40px;"></th>
                                            <th class="sorting" data-colname="invoiceNo" style="width: 80px;">EUROFAR INVOICE NO</th>
                                            <th class="sorting" data-colname="blNo" style="width: 80px;">BL NO</th>
                                            <th class="sorting" data-colname="clientUD" style="width: 80px;">CLIENT CODE </th>
                                            <th class="sorting" data-colname="clientNM">CLIENT NAME</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr ng-repeat="init_item in initForm.initSearchResult.master_data | orderBy : 'clientUD'">
                                            <td>
                                                <a href="javascript:void(0);" class="btn btn-primary btn-xs font-11" title="select item to create cost invoice" ng-click="initForm.event.select($event, init_item.keyID)"><i class="fa fa-folder-open"></i>Select</a>
                                            </td>
                                            <td>{{init_item.invoiceNo}}</td>
                                            <td>{{init_item.blNo}}</td>
                                            <td>{{init_item.clientUD}}</td>
                                            <td>{{init_item.clientNM}}</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </fieldset>
                            <footer>
                                <button class="btn btn-primary" type="button" ng-click="initForm.event.cancel($event)">
                                    CANCEL
                                </button>
                            </footer>
                        </div>
                    </div>
                </div>
            </div>
        </article>
    </div>
}

@section FormAction {
    <ul id="sparks">
        <li class="sparks-info">
            <a href="#" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Update, HttpContext.Current))" title="Save" ng-click="update($event)"><i class="fa fa-save"></i></a>
        </li>
        <li class="sparks-info">
            <a href="@Url.Action("Index", "CostInvoice")" class="btn btn-default" title="Go Back"><i class="fa fa-arrow-left"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default@(ViewBag.ID==0?" disabled":"") @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Create, HttpContext.Current))" title="Delete" style="color: #ff0000;" ng-click="delete($event)"><i class="fa fa-times"></i></a>
        </li>

        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default@(ViewBag.ID==0?" disabled":"") @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Create, HttpContext.Current))" title="Print Invoice"  ng-click="printInvoice($event)"><i class="fa fa-print"></i></a>
        </li>
    </ul>
}

@section pagejs {
    <script src="~/Angular/app/costinvoice/service.js?c=@System.Guid.NewGuid().ToString().Replace("-", "")"></script>
    <script type="text/javascript">
    costInvoiceInvoiceService.serviceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/costinvoice/';
    costInvoiceInvoiceService.token = '@Session[Frontend.Customize.Common.ProjectDefinition.TOKEN_SESSION]';

        var costinvoiceApp = angular.module('tilsoftApp', ['ng-currency']);
    costinvoiceApp.controller('tilsoftController', ['$scope', function ($scope) {

        $scope.costinvoice = null;
        // function defined
        $scope.load = function()
        {
            costInvoiceInvoiceService.load(
                '@ViewBag.ID',
                function (data) {
                    $scope.costinvoice = data.data;
                    $scope.$apply();

                    jQuery('#content').show();
                    $scope.$watch('costinvoice', function() {
                        jQuery('#changeNotification').html('<i class="fa fa-save blink_me"></i>');
                    });

                    if ('@ViewBag.ID' == 0)
                    {
                        $scope.initForm.event.load();
                    }
                },
                function (error) {
                    jsHelper.showMessage('warning', error);

                    $scope.costinvoice = null;
                    $scope.$apply();
                }
            );
        }

        $scope.update = function ($event) {
            $event.preventDefault();

            if($scope.editForm.$valid)
            {
                 costInvoiceInvoiceService.update('@ViewBag.ID', $scope.costinvoice.costInvoiceData,
                function (data) {
                    jsHelper.processMessage(data.message);
                    if(data.message.type == 0) {
                        window.location = '@Url.Action("Edit", "CostInvoice", new { id = UrlParameter.Optional })/' + data.data.costInvoiceID;
                    }
                },
                    function (error) {
                        jsHelper.showMessage('warning', error);
                    }
                );
            }
            else
            {
                jsHelper.showMessage('warning', '@Frontend.Properties.Resources.INPUT_VALIDATION_FAILED');
            }
        }

        $scope.delete = function ($event) {
            $event.preventDefault();

            if (confirm('Are you sure ?')) {
                costInvoiceInvoiceService.delete('@ViewBag.ID',
                function (data) {
                    jsHelper.processMessage(data.message);
                    if(data.message.type == 0) {
                        window.location = '@Url.Action("Index", "CostInvoice")';
                    }
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
            }
        }

        $scope.printInvoice = function ($event) {
            $event.preventDefault();
            costInvoiceInvoiceService.printInvoice('@ViewBag.ID',
                function (data) {
                    window.open('@System.Configuration.ConfigurationManager.AppSettings["BackendReportUrl"]' + data.data ,'');
                },
                function (error) {
                    jsHelper.showMessage('warning', error);
                }
            );
        }

        $scope.removeDetail = function($event, id){
            $event.preventDefault();
            isExist = false;
            for(j=0; j< $scope.costinvoice.costInvoiceData.costInvoiceDetails.length; j++) {
                if($scope.costinvoice.costInvoiceData.costInvoiceDetails[j].costInvoiceDetailID == id) {
                    isExist = true;
                    break;
                }
            }
            if(isExist){
                $scope.costinvoice.costInvoiceData.costInvoiceDetails.splice(j, 1);
            }
        }

        $scope.calTotalAmount = function (costInvoiceDetailID) {
            if ($scope.costinvoice == null) return;
            var total = parseInt('0');

            var arr = $scope.costinvoice.costInvoiceData.costInvoiceDetails.filter(function (o) { return o.costInvoiceDetailID == costInvoiceDetailID });
            var selected_detail_extends = arr[0].costInvoiceDetailExtends;

            angular.forEach(selected_detail_extends, function (item) {
                total += (JSON.stringify(item.amount) == 'null' ? parseInt('0') : item.amount);
            })
            return total;
        }

        $scope.selectCostType = function (costType) {
            if (costType != null) {
                $scope.costinvoice.costInvoiceData.invoiceNo = $scope.costinvoice.costInvoiceData.eurofarInvoiceNo + costType
            }
            else {
                $scope.costinvoice.costInvoiceData.invoiceNo = '';
            }
        }
        

        
        //init form
        $scope.initForm = {

            inputData : {},

            initSearchResult : {
                master_data : null,
                detail_data : null
            },
            event :{
                load : function(){
                    $scope.initForm.method.searchInitInfo();
                },
                ok : function($event){
                    jsHelper.hidePopup('initForm',function(){});
                },
                cancel : function($event)
                {
                    $event.preventDefault();
                    history.go(-1);
                },
                select : function($event,input_key_id)
                {
                    $event.preventDefault();

                    //load init data
                    $scope.initForm.initSearchResult.master_data = $scope.initForm.initSearchResult.master_data.filter(function(o){return o.keyID == input_key_id});

                    //load init detail cont
                    eCommercialInvoiceID = $scope.initForm.initSearchResult.master_data[0].eCommercialInvoiceID;
                    bookingID = $scope.initForm.initSearchResult.master_data[0].bookingID;
                    clientID = $scope.initForm.initSearchResult.master_data[0].clientID;
                    $scope.initForm.method.searchInitInfoDetail(eCommercialInvoiceID,bookingID,clientID)
                }
            },
            method:{
                searchInitInfo : function(){
                    costInvoiceInvoiceService.search_initInfo(
                     function (data) {
                         $scope.initForm.initSearchResult.master_data = data.data;
                         $scope.$apply();

                         jsHelper.showPopup('initForm',function(){});
                     },
                     function (error) {
                         jsHelper.showMessage('warning', error);
                         $scope.$apply();
                     }
                 );
                },

                searchInitInfoDetail : function(eCommercialInvoiceID,bookingID, clientID){
                    costInvoiceInvoiceService.search_initInfoDetail(eCommercialInvoiceID,bookingID, clientID,
                     function (data) {
                         $scope.initForm.initSearchResult.detail_data = data.data;
                         //set init data
                         $scope.initForm.method.setInputData();
                         $scope.$apply();

                         //hide form init
                         jsHelper.hidePopup('initForm',function(){});
                     },
                     function (error) {
                         jsHelper.showMessage('warning', error);
                         $scope.$apply();
                     }
                 );
                },

                setInputData: function () {

                    //cost invoice
                    $scope.costinvoice.costInvoiceData.eCommercialInvoiceID = $scope.initForm.initSearchResult.master_data[0].eCommercialInvoiceID;
                    $scope.costinvoice.costInvoiceData.bookingID = $scope.initForm.initSearchResult.master_data[0].bookingID;
                    $scope.costinvoice.costInvoiceData.clientID = $scope.initForm.initSearchResult.master_data[0].clientID;

                    $scope.costinvoice.costInvoiceData.eurofarInvoiceNo = $scope.initForm.initSearchResult.master_data[0].invoiceNo;
                    $scope.costinvoice.costInvoiceData.blNo = $scope.initForm.initSearchResult.master_data[0].blNo;
                    $scope.costinvoice.costInvoiceData.clientUD = $scope.initForm.initSearchResult.master_data[0].clientUD;
                    $scope.costinvoice.costInvoiceData.clientNM = $scope.initForm.initSearchResult.master_data[0].clientNM;

                    //cost invoice detail
                    for(i = 0; i< $scope.initForm.initSearchResult.detail_data.length; i++)
                    {
                        $scope.costinvoice.costInvoiceData.costInvoiceDetails.push({
                            costInvoiceDetailID : -(i+1),
                            containerNo : $scope.initForm.initSearchResult.detail_data[i].containerNo,
                            loadingPlanID : $scope.initForm.initSearchResult.detail_data[i].loadingPlanID
                        });
                    }
                }
            }
        }


        //quick search container
        searchContainerTimer = null;
        $scope.quickSearchContainer = {
            data: null,
            containerNo : '',

            method: {
                quickSearchContainer: function () {
                    
                    costInvoiceInvoiceService.quickSearchContainer($scope.costinvoice.costInvoiceData.eCommercialInvoiceID, $scope.costinvoice.costInvoiceData.bookingID, $scope.costinvoice.costInvoiceData.clientID, $scope.quickSearchContainer.containerNo,
                        function (data) {
                            if (data.message.type == 0) {
                                $scope.quickSearchContainer.data = data.data;
                                $scope.$apply();

                                jQuery('#container-popup').show();
                            }
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                            alert('error');
                        }
                    );
                }
            },

            event: {
                searchBoxKeyUp: function ($event) {
                    if($event.keyCode == 13)
                    {
                        $scope.quickSearchContainer.containerNo = jQuery('#txtContainerNo').val();
                        $scope.quickSearchContainer.method.quickSearchContainer();
                    }
                    else if (jQuery('#txtContainerNo').val().length >= 3)
                    {
                        clearTimeout(searchContainerTimer);
                        searchContainerTimer = setTimeout(
                            function () {
                                $scope.quickSearchContainer.containerNo = jQuery('#txtContainerNo').val();
                                $scope.quickSearchContainer.method.quickSearchContainer();
                            },
                            500);
                    }
                },

                clickSearch : function (){
                    $scope.quickSearchContainer.containerNo = jQuery('#txtContainerNo').val();
                    $scope.quickSearchContainer.method.quickSearchContainer();
                },

                close: function ($event, clearSearchBox) {
                    jQuery('#container-popup').hide();
                    if (clearSearchBox) {
                        $scope.quickSearchContainer.containerNo = null;
                    }
                    $scope.quickSearchContainer.data = null;
                    $event.preventDefault();
                },
                ok: function ($event, id) {
                    for (i = 0; i < $scope.quickSearchContainer.data.length; i++)
                    {
                        if ($scope.quickSearchContainer.data[i].isSelected)
                        {
                            if ($scope.costinvoice.costInvoiceData.costInvoiceDetails.filter(function (o) { return o.loadingPlanID == $scope.quickSearchContainer.data[i].loadingPlanID }).length == 0) {
                                //get id lasted
                                var arr = $scope.costinvoice.costInvoiceData.costInvoiceDetails.filter(function (o) { return o.costInvoiceDetailID < 0 });
                                max_id = -1;
                                if (arr.length > 0) {
                                    arr.sort(function (a, b) { return a.costInvoiceDetailID - b.costInvoiceDetailID });
                                    max_id = arr[0].costInvoiceDetailID - 1;
                                }
                                //push to array
                                $scope.costinvoice.costInvoiceData.costInvoiceDetails.push({
                                    costInvoiceDetailID: max_id,
                                    containerNo: $scope.quickSearchContainer.data[i].containerNo,
                                    loadingPlanID: $scope.quickSearchContainer.data[i].loadingPlanID
                                });
                            }
                            else {
                                jsHelper.showMessage('info', 'This container was existed');
                            }
                        }
                    }
                    jQuery('#container-popup').hide();
                }
            }

        }

        //detail description form
        $scope.detailDesciprtionForm = {
            event: {
                load: function ($event,costInvoiceDetailID) {
                    $event.preventDefault();
                    $("#" + costInvoiceDetailID).toggle();
                    if ($("#icon-detail-description-" + costInvoiceDetailID).hasClass('fa-plus-square-o')) {
                        $("#icon-detail-description-" + costInvoiceDetailID).removeClass('fa-plus-square-o');
                        $("#icon-detail-description-" + costInvoiceDetailID).addClass('fa-minus-square-o');
                    }
                    else if ($("#icon-detail-description-" + costInvoiceDetailID).hasClass('fa-minus-square-o')) {
                        $("#icon-detail-description-" + costInvoiceDetailID).removeClass('fa-minus-square-o');
                        $("#icon-detail-description-" + costInvoiceDetailID).addClass('fa-plus-square-o');
                    }
                },

                add: function ($event, costInvoiceDetailID) {
                    $event.preventDefault();
                    $scope.detailDesciprtionForm.method.add(costInvoiceDetailID);
                },

                addT1: function ($event, costInvoiceDetailID) {
                    $event.preventDefault();
                    $scope.detailDesciprtionForm.method.addT1(costInvoiceDetailID);
                },

                addT2: function ($event, costInvoiceDetailID) {
                    $event.preventDefault();
                    $scope.detailDesciprtionForm.method.addT2(costInvoiceDetailID);
                },

                addE: function ($event, costInvoiceDetailID) {
                    $event.preventDefault();
                    $scope.detailDesciprtionForm.method.addE(costInvoiceDetailID);
                },

                remove: function ($event, costInvoiceDetailID, costInvoiceDetailExtendID) {
                    $event.preventDefault();
                    $scope.detailDesciprtionForm.method.remove(costInvoiceDetailID, costInvoiceDetailExtendID);
                },

            },
            method: {
                add: function (costInvoiceDetailID) {
                    
                    //filter cost invoice detail ext by costInoviceDetailID
                    var arr = $scope.costinvoice.costInvoiceData.costInvoiceDetails.filter(function (o) { return o.costInvoiceDetailID == costInvoiceDetailID });
                    if (arr[0].costInvoiceDetailExtends == null) {
                        arr[0].costInvoiceDetailExtends = [];
                    }
                    var selected_detail_extends = arr[0].costInvoiceDetailExtends;

                    //take max negative id from extend detail
                    var arr_temp = selected_detail_extends.filter(function (o) { return o.costInvoiceDetailExtendID < 0 });
                    max_id = -1;
                    if (arr_temp.length > 0) {
                        arr_temp.sort(function (a, b) { return a.costInvoiceDetailExtendID - b.costInvoiceDetailExtendID });
                        max_id = arr_temp[0].costInvoiceDetailExtendID - 1;
                    }

                    //push to extend detail
                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id
                    });
                    
                    setTimeout(function () { runAllForms() }, 200);
                    $scope.$apply();
                    
                },

                remove: function (costInvoiceDetailID, costInvoiceDetailExtendID) {
                    var arr = $scope.costinvoice.costInvoiceData.costInvoiceDetails.filter(function (o) { return o.costInvoiceDetailID == costInvoiceDetailID });
                    var selected_detail_extends = arr[0].costInvoiceDetailExtends;

                    isExist = false;
                    for (j = 0; j < selected_detail_extends.length; j++) {
                        if (selected_detail_extends[j].costInvoiceDetailExtendID == costInvoiceDetailExtendID) {
                            isExist = true;
                            break;
                        }
                    }
                    if (isExist) {
                        selected_detail_extends.splice(j, 1);
                    }
                    $scope.$apply();
                },

                addT1: function (costInvoiceDetailID) {

                    //filter cost invoice detail ext by costInoviceDetailID
                    var arr = $scope.costinvoice.costInvoiceData.costInvoiceDetails.filter(function (o) { return o.costInvoiceDetailID == costInvoiceDetailID });
                    if (arr[0].costInvoiceDetailExtends == null) {
                        arr[0].costInvoiceDetailExtends = [];
                    }
                    var selected_detail_extends = arr[0].costInvoiceDetailExtends;

                    //take max negative id from extend detail
                    var arr_temp = selected_detail_extends.filter(function (o) { return o.costInvoiceDetailExtendID < 0 });
                    max_id = -1;
                    if (arr_temp.length > 0) {
                        arr_temp.sort(function (a, b) { return a.costInvoiceDetailExtendID - b.costInvoiceDetailExtendID });
                        max_id = arr_temp[0].costInvoiceDetailExtendID - 1;
                    }

                    //push to extend detail
                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 1,
                        description: 'NA TRANSPORT FACTUUR CONTAINER '
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 2,
                        description: 'INVOICE '
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 3,
                        description: ''
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 4,
                        description: 'DESTINATION THC '
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 5,
                        description: 'ISPS'
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 6,
                        description: 'B/L FEE '
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 7,
                        description: 'CUSTOMS CLEARANCE '
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 8,
                        description: 'HANDLING FEE '
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 9,
                        description: 'TRANSPORT + FUEL 17% HOORN '
                    });

                    $scope.$apply();
                },

                addT2: function (costInvoiceDetailID) {

                    //filter cost invoice detail ext by costInoviceDetailID
                    var arr = $scope.costinvoice.costInvoiceData.costInvoiceDetails.filter(function (o) { return o.costInvoiceDetailID == costInvoiceDetailID });
                    if (arr[0].costInvoiceDetailExtends == null) {
                        arr[0].costInvoiceDetailExtends = [];
                    }
                    var selected_detail_extends = arr[0].costInvoiceDetailExtends;

                    //take max negative id from extend detail
                    var arr_temp = selected_detail_extends.filter(function (o) { return o.costInvoiceDetailExtendID < 0 });
                    max_id = -1;
                    if (arr_temp.length > 0) {
                        arr_temp.sort(function (a, b) { return a.costInvoiceDetailExtendID - b.costInvoiceDetailExtendID });
                        max_id = arr_temp[0].costInvoiceDetailExtendID - 1;
                    }

                    //push to extend detail
                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 1,
                        description: 'NA TRANSPORT FACTUUR CONTAINER '
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 2,
                        description: 'INVOICE '
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 3,
                        description: ''
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 4,
                        description: 'TRANSPORT ROTTERDAM - LEUSDEN '
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 5,
                        description: ''
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 6,
                        description: 'GASMETING LEUSDEN (GASVRIJVERKLARING)'
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 7,
                        description: ''
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 8,
                        description: 'BTW 21%'
                    });

                    $scope.$apply();
                },

                addE: function (costInvoiceDetailID) {

                    //filter cost invoice detail ext by costInoviceDetailID
                    var arr = $scope.costinvoice.costInvoiceData.costInvoiceDetails.filter(function (o) { return o.costInvoiceDetailID == costInvoiceDetailID });
                    if (arr[0].costInvoiceDetailExtends == null) {
                        arr[0].costInvoiceDetailExtends = [];
                    }
                    var selected_detail_extends = arr[0].costInvoiceDetailExtends;

                    //take max negative id from extend detail
                    var arr_temp = selected_detail_extends.filter(function (o) { return o.costInvoiceDetailExtendID < 0 });
                    max_id = -1;
                    if (arr_temp.length > 0) {
                        arr_temp.sort(function (a, b) { return a.costInvoiceDetailExtendID - b.costInvoiceDetailExtendID });
                        max_id = arr_temp[0].costInvoiceDetailExtendID - 1;
                    }

                    //push to extend detail
                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 1,
                        description: 'EXTRA KOSTEN UITHAAL CONTAINER '
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 2,
                        description: ' '
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 3,
                        description: 'KOSTEN UITHAAL + EXTRA STOP+ HANDLING'
                    });

                    selected_detail_extends.push({
                        costInvoiceDetailExtendID: max_id - 4,
                        description: 'KOSTEN DAG 1 TOT 6 OPSLAG a €5,00 = €30,00'
                    });

                    $scope.$apply();
                },
                
            }

        }


        //load form
        $scope.load();

    }]);

    //DATE PICKER
    $(function() {
        $("#txtinvoicedate").datepicker({ dateFormat: 'dd/mm/yy', changeMonth :true, changeYear: true });
    });
</script>
}

