@{
    if (ViewBag.ID == 0)
    {
        ViewBag.Title = "Create New Constant Entry";
    }
    else
    {
        ViewBag.Title = "Edit Constant Entry";
    }

    ViewBag.Module = "ConstantEntry";

}

<form class="row" name="editForm" id="main-form">
    <article class="col-sm-12 col-md-12 col-lg-12">
        <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false" data-widget-deletebutton="false">
            <header>
                <span class="widget-icon">
                    <i class="fa fa-database"></i>
                </span>
                <h2>Cities</h2>
            </header>
            <div>
                <div class="widget-body">
                    <div class="smart-form">
                        <fieldset>
                            <section class="col col-4">
                                <label class="label">Name</label>
                                <label class="input">
                                    <input type="text" ng-model="data.displayText" required />
                                </label>
                            </section>
                       

                            <section class="col col-3">
                                <label class="label">Entry Group</label>
                                <label class="select">
                                    <label class="select" ng-class="{'state-error': editForm.entryGroup.$error.required}">
                                        <select ng-model="data.entryGroup" name="entryGroup" ng-options="EntryGroupList.entryGroup as EntryGroupList.entryGroup for EntryGroupList in entryGroups" required>

                                            <option value=""></option>
                                        </select>
                                        <i></i>
                                    </label>
                            </section>
                        </fieldset>
                    </div>
                </div>
            </div>
        </div>
    </article>
</form>

@section FormAction {
    <ul id="sparks">
        <li class="sparks-info">
            <a href="@Url.Action("Index", "ConstantEntry")" class="btn btn-default" title="Go Back"><i class="fa fa-arrow-left"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0)" class="btn btn-default @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Update, HttpContext.Current))" title="Save" ng-click="event.update($event)"><i class="fa fa-save"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default@(ViewBag.ID==0?" disabled":"") @(Frontend.Helper.AuthHelper.GetActionButtonStatus(ViewBag.ModuleCode, Frontend.Helper.ActionEnum.Create, HttpContext.Current))" title="Delete" style="color: #ff0000;" ng-click="event.delete($event)"><i class="fa fa-times"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default disabled" title="Print"><i class="fa fa-print"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default disabled" title="Approve"><i class="fa fa-thumbs-o-up"></i></a>
        </li>
        <li class="sparks-info">
            <a href="javascript:void(0);" class="btn btn-default disabled" title="Reset Approval status"><i class="fa fa-thumbs-o-down"></i></a>
        </li>
    </ul>
}

@section pagejs {
    <script src="~/Angular/app/jsonService.js"></script>
    <script src="~/Angular/app/constantEntry/service.js"></script>
    <script type="text/javascript">
        jsonService.serviceUrl = '@(System.Configuration.ConfigurationManager.AppSettings["BackendServiceUrl"])api/constantEntry/';
        jsonService.token = '@Session[Frontend.Customize.Common.ProjectDefinition.TOKEN_SESSION]';

        var tilsoftApp = angular.module('tilsoftApp', []);
        tilsoftApp.controller('tilsoftController', ['$scope', function ($scope) {
            //
            // property
            //
            $scope.data = null;
            $scope.clientCountrys = null;
            //  $scope.startListener = false;

            //
            // event
            //
            $scope.event = {
                init:function(){
                    jsonService.load(
                        @ViewBag.ID,
                        function (data) {
                            $scope.data = data.data.data;
                            $scope.entryGroups = data.data.entryGroups;
                            $scope.$apply();
                            jQuery('#content').show();

                            // monitor changes
                            $scope.$watch('data', function() {
                                jQuery('#changeNotification').html('<i class="fa fa-save blink_me"></i>');
                            });

                            $scope.$watch('clientCountrys', function() {
                                jQuery('#changeNotification').html('<i class="fa fa-save blink_me"></i>');

                            });
                            //  $scope.startListener = true;
                        },
                        function (error) {
                            jsHelper.showMessage('warning', error);
                            $scope.data = null;
                            $scope.entryGroups = null;
                            $scope.$apply();
                        }
                    );
                },
                update: function($event){
                    $event.preventDefault();

                    if($scope.editForm.$valid)
                    {
                        jsonService.update(
                            @ViewBag.ID,
                            $scope.data,


                            function (data) {
                                jsHelper.processMessage(data.message);
                                if(data.message.type == 0) {
                                    $scope.method.refresh(data.data.constantEntryID);
                                }
                            },
                            function (error) {
                                jsHelper.showMessage('warning', error);
                            }
                        );
                    }
                    else
                    {
                        jsHelper.showMessage('warning', '@Frontend.Properties.Resources.INPUT_VALIDATION_FAILED');
                    }
                },
                delete: function($event){
                    $event.preventDefault();

                    if (confirm('Are you sure ?')) {
                        jsonService.delete(
                            @ViewBag.ID,
                            function (data) {
                                jsHelper.processMessage(data.message);
                                if(data.message.type == 0) {
                                    window.location = '@Url.Action("Index", "ConstantEntry")';
                                }
                            },
                                function (error) {
                                    jsHelper.showMessage('warning', error);
                                }
                            );
                    }
                }

    

            };

            $scope.method = {
                refresh: function(id){
                    jsHelper.loadingSwitch(true);
                    window.location = '@Url.Action("Edit", "ConstantEntry", new { id = UrlParameter.Optional })/'+id;
                }
            };

            $scope.event.init();
        }]);
    </script>
}



