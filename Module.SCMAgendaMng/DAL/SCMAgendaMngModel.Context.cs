//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.SCMAgendaMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SCMAgendaMngEntities : DbContext
    {
        public SCMAgendaMngEntities()
            : base("name=SCMAgendaMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SCMAppointment> SCMAppointment { get; set; }
        public virtual DbSet<SCMAppointmentAttachedFile> SCMAppointmentAttachedFile { get; set; }
        public virtual DbSet<SCMAppointmentUser> SCMAppointmentUser { get; set; }
        public virtual DbSet<SCMAgendaMng_Employee_View> SCMAgendaMng_Employee_View { get; set; }
        public virtual DbSet<SCMAgendaMng_SCMAppointmentAttachedFile_View> SCMAgendaMng_SCMAppointmentAttachedFile_View { get; set; }
        public virtual DbSet<SCMAgendaMng_SCMAppointmentSearchResult_View> SCMAgendaMng_SCMAppointmentSearchResult_View { get; set; }
        public virtual DbSet<SCMAgendaMng_SCMAppointmentUser_View> SCMAgendaMng_SCMAppointmentUser_View { get; set; }
        public virtual DbSet<SCMAgendaMng_ClientSearchResult_View> SCMAgendaMng_ClientSearchResult_View { get; set; }
        public virtual DbSet<SCMAgendaMng_SCMAppointment_View> SCMAgendaMng_SCMAppointment_View { get; set; }
        public virtual DbSet<SupportMng_Sale_View> SupportMng_Sale_View { get; set; }
        public virtual DbSet<SCMInspection> SCMInspection { get; set; }
        public virtual DbSet<SCMAgendaMng_QCReport_View> SCMAgendaMng_QCReport_View { get; set; }
        public virtual DbSet<SCMAgendaMng_SCMInspection_View> SCMAgendaMng_SCMInspection_View { get; set; }
    
        public virtual ObjectResult<SCMAgendaMng_ClientSearchResult_View> SCMAgendaMng_function_SearchClient(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SCMAgendaMng_ClientSearchResult_View>("SCMAgendaMng_function_SearchClient", queryParameter);
        }
    
        public virtual ObjectResult<SCMAgendaMng_ClientSearchResult_View> SCMAgendaMng_function_SearchClient(string query, MergeOption mergeOption)
        {
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SCMAgendaMng_ClientSearchResult_View>("SCMAgendaMng_function_SearchClient", mergeOption, queryParameter);
        }
    
        public virtual ObjectResult<SCMAgendaMng_SCMAppointmentSearchResult_View> SCMAgendaMng_function_SearchSCMAppointment(string meetingLocations, string factories, Nullable<int> month, Nullable<int> year)
        {
            var meetingLocationsParameter = meetingLocations != null ?
                new ObjectParameter("MeetingLocations", meetingLocations) :
                new ObjectParameter("MeetingLocations", typeof(string));
    
            var factoriesParameter = factories != null ?
                new ObjectParameter("Factories", factories) :
                new ObjectParameter("Factories", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SCMAgendaMng_SCMAppointmentSearchResult_View>("SCMAgendaMng_function_SearchSCMAppointment", meetingLocationsParameter, factoriesParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<SCMAgendaMng_SCMAppointmentSearchResult_View> SCMAgendaMng_function_SearchSCMAppointment(string meetingLocations, string factories, Nullable<int> month, Nullable<int> year, MergeOption mergeOption)
        {
            var meetingLocationsParameter = meetingLocations != null ?
                new ObjectParameter("MeetingLocations", meetingLocations) :
                new ObjectParameter("MeetingLocations", typeof(string));
    
            var factoriesParameter = factories != null ?
                new ObjectParameter("Factories", factories) :
                new ObjectParameter("Factories", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SCMAgendaMng_SCMAppointmentSearchResult_View>("SCMAgendaMng_function_SearchSCMAppointment", mergeOption, meetingLocationsParameter, factoriesParameter, monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<SCMAgendaMng_QCReport_View> SCMAgendaMng_function_QCReport(string qCReportUD, Nullable<int> factoryID, string clientUD, string articleCode, string proformaInvoiceNo)
        {
            var qCReportUDParameter = qCReportUD != null ?
                new ObjectParameter("QCReportUD", qCReportUD) :
                new ObjectParameter("QCReportUD", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SCMAgendaMng_QCReport_View>("SCMAgendaMng_function_QCReport", qCReportUDParameter, factoryIDParameter, clientUDParameter, articleCodeParameter, proformaInvoiceNoParameter);
        }
    
        public virtual ObjectResult<SCMAgendaMng_QCReport_View> SCMAgendaMng_function_QCReport(string qCReportUD, Nullable<int> factoryID, string clientUD, string articleCode, string proformaInvoiceNo, MergeOption mergeOption)
        {
            var qCReportUDParameter = qCReportUD != null ?
                new ObjectParameter("QCReportUD", qCReportUD) :
                new ObjectParameter("QCReportUD", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SCMAgendaMng_QCReport_View>("SCMAgendaMng_function_QCReport", mergeOption, qCReportUDParameter, factoryIDParameter, clientUDParameter, articleCodeParameter, proformaInvoiceNoParameter);
        }
    }
}
