//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.RAPVNRpt.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RAPVNRptEntities : DbContext
    {
        public RAPVNRptEntities()
            : base("name=RAPVNRptEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<RAPVNRpt_Loaded_View> RAPVNRpt_Loaded_View { get; set; }
        public virtual DbSet<RAPVNRpt_Order_View> RAPVNRpt_Order_View { get; set; }
        public virtual DbSet<RAPVNRpt_Shipped_View> RAPVNRpt_Shipped_View { get; set; }
        public virtual DbSet<RAPVNRpt_WorkOrder_View> RAPVNRpt_WorkOrder_View { get; set; }
    
        public virtual ObjectResult<RAPVNRpt_Loaded_View> RAPVNRpt_function_GetLoaded(string season, Nullable<int> factoryID, Nullable<int> userID, Nullable<bool> isRapEU, string proformaInvoiceNo, string clientUD, string articleCode, string description)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var isRapEUParameter = isRapEU.HasValue ?
                new ObjectParameter("IsRapEU", isRapEU) :
                new ObjectParameter("IsRapEU", typeof(bool));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RAPVNRpt_Loaded_View>("RAPVNRpt_function_GetLoaded", seasonParameter, factoryIDParameter, userIDParameter, isRapEUParameter, proformaInvoiceNoParameter, clientUDParameter, articleCodeParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<RAPVNRpt_Loaded_View> RAPVNRpt_function_GetLoaded(string season, Nullable<int> factoryID, Nullable<int> userID, Nullable<bool> isRapEU, string proformaInvoiceNo, string clientUD, string articleCode, string description, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var isRapEUParameter = isRapEU.HasValue ?
                new ObjectParameter("IsRapEU", isRapEU) :
                new ObjectParameter("IsRapEU", typeof(bool));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RAPVNRpt_Loaded_View>("RAPVNRpt_function_GetLoaded", mergeOption, seasonParameter, factoryIDParameter, userIDParameter, isRapEUParameter, proformaInvoiceNoParameter, clientUDParameter, articleCodeParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<RAPVNRpt_Order_View> RAPVNRpt_function_GetOrder(string season, Nullable<int> factoryID, Nullable<int> userID, Nullable<bool> isRapEU, string proformaInvoiceNo, string clientUD, string articleCode, string description)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var isRapEUParameter = isRapEU.HasValue ?
                new ObjectParameter("IsRapEU", isRapEU) :
                new ObjectParameter("IsRapEU", typeof(bool));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RAPVNRpt_Order_View>("RAPVNRpt_function_GetOrder", seasonParameter, factoryIDParameter, userIDParameter, isRapEUParameter, proformaInvoiceNoParameter, clientUDParameter, articleCodeParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<RAPVNRpt_Order_View> RAPVNRpt_function_GetOrder(string season, Nullable<int> factoryID, Nullable<int> userID, Nullable<bool> isRapEU, string proformaInvoiceNo, string clientUD, string articleCode, string description, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var isRapEUParameter = isRapEU.HasValue ?
                new ObjectParameter("IsRapEU", isRapEU) :
                new ObjectParameter("IsRapEU", typeof(bool));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RAPVNRpt_Order_View>("RAPVNRpt_function_GetOrder", mergeOption, seasonParameter, factoryIDParameter, userIDParameter, isRapEUParameter, proformaInvoiceNoParameter, clientUDParameter, articleCodeParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<RAPVNRpt_Shipped_View> RAPVNRpt_function_GetShipped(string season, Nullable<int> factoryID, Nullable<int> userID, Nullable<bool> isRapEU, string proformaInvoiceNo, string clientUD, string articleCode, string description)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var isRapEUParameter = isRapEU.HasValue ?
                new ObjectParameter("IsRapEU", isRapEU) :
                new ObjectParameter("IsRapEU", typeof(bool));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RAPVNRpt_Shipped_View>("RAPVNRpt_function_GetShipped", seasonParameter, factoryIDParameter, userIDParameter, isRapEUParameter, proformaInvoiceNoParameter, clientUDParameter, articleCodeParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<RAPVNRpt_Shipped_View> RAPVNRpt_function_GetShipped(string season, Nullable<int> factoryID, Nullable<int> userID, Nullable<bool> isRapEU, string proformaInvoiceNo, string clientUD, string articleCode, string description, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var isRapEUParameter = isRapEU.HasValue ?
                new ObjectParameter("IsRapEU", isRapEU) :
                new ObjectParameter("IsRapEU", typeof(bool));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RAPVNRpt_Shipped_View>("RAPVNRpt_function_GetShipped", mergeOption, seasonParameter, factoryIDParameter, userIDParameter, isRapEUParameter, proformaInvoiceNoParameter, clientUDParameter, articleCodeParameter, descriptionParameter);
        }
    }
}
