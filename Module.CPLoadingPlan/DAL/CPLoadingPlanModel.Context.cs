//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.CPLoadingPlan.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CPLoadingPlanEntities : DbContext
    {
        public CPLoadingPlanEntities()
            : base("name=CPLoadingPlanEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SupportMng_ContainerType_View> SupportMng_ContainerType_View { get; set; }
        public virtual DbSet<CP_LoadingPlanMng_LoadingPlanSearchResult_View> CP_LoadingPlanMng_LoadingPlanSearchResult_View { get; set; }
    
        public virtual ObjectResult<CP_LoadingPlanMng_LoadingPlanSearchResult_View> CP_LoadingPlanMng_function_SearchLoadingPlan(Nullable<int> clientID, string bLNo, Nullable<System.DateTime> eTDFrom, Nullable<System.DateTime> eTDTo, Nullable<System.DateTime> eTAFrom, Nullable<System.DateTime> eTATo, string loadingPlanUD, Nullable<int> containerTypeID, string containerNo, string sealNo, string proformaInvoiceNo, string clientOrderNumber, string sortedBy, string sortedDirection)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var bLNoParameter = bLNo != null ?
                new ObjectParameter("BLNo", bLNo) :
                new ObjectParameter("BLNo", typeof(string));
    
            var eTDFromParameter = eTDFrom.HasValue ?
                new ObjectParameter("ETDFrom", eTDFrom) :
                new ObjectParameter("ETDFrom", typeof(System.DateTime));
    
            var eTDToParameter = eTDTo.HasValue ?
                new ObjectParameter("ETDTo", eTDTo) :
                new ObjectParameter("ETDTo", typeof(System.DateTime));
    
            var eTAFromParameter = eTAFrom.HasValue ?
                new ObjectParameter("ETAFrom", eTAFrom) :
                new ObjectParameter("ETAFrom", typeof(System.DateTime));
    
            var eTAToParameter = eTATo.HasValue ?
                new ObjectParameter("ETATo", eTATo) :
                new ObjectParameter("ETATo", typeof(System.DateTime));
    
            var loadingPlanUDParameter = loadingPlanUD != null ?
                new ObjectParameter("LoadingPlanUD", loadingPlanUD) :
                new ObjectParameter("LoadingPlanUD", typeof(string));
    
            var containerTypeIDParameter = containerTypeID.HasValue ?
                new ObjectParameter("ContainerTypeID", containerTypeID) :
                new ObjectParameter("ContainerTypeID", typeof(int));
    
            var containerNoParameter = containerNo != null ?
                new ObjectParameter("ContainerNo", containerNo) :
                new ObjectParameter("ContainerNo", typeof(string));
    
            var sealNoParameter = sealNo != null ?
                new ObjectParameter("SealNo", sealNo) :
                new ObjectParameter("SealNo", typeof(string));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientOrderNumberParameter = clientOrderNumber != null ?
                new ObjectParameter("ClientOrderNumber", clientOrderNumber) :
                new ObjectParameter("ClientOrderNumber", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CP_LoadingPlanMng_LoadingPlanSearchResult_View>("CP_LoadingPlanMng_function_SearchLoadingPlan", clientIDParameter, bLNoParameter, eTDFromParameter, eTDToParameter, eTAFromParameter, eTAToParameter, loadingPlanUDParameter, containerTypeIDParameter, containerNoParameter, sealNoParameter, proformaInvoiceNoParameter, clientOrderNumberParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<CP_LoadingPlanMng_LoadingPlanSearchResult_View> CP_LoadingPlanMng_function_SearchLoadingPlan(Nullable<int> clientID, string bLNo, Nullable<System.DateTime> eTDFrom, Nullable<System.DateTime> eTDTo, Nullable<System.DateTime> eTAFrom, Nullable<System.DateTime> eTATo, string loadingPlanUD, Nullable<int> containerTypeID, string containerNo, string sealNo, string proformaInvoiceNo, string clientOrderNumber, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var bLNoParameter = bLNo != null ?
                new ObjectParameter("BLNo", bLNo) :
                new ObjectParameter("BLNo", typeof(string));
    
            var eTDFromParameter = eTDFrom.HasValue ?
                new ObjectParameter("ETDFrom", eTDFrom) :
                new ObjectParameter("ETDFrom", typeof(System.DateTime));
    
            var eTDToParameter = eTDTo.HasValue ?
                new ObjectParameter("ETDTo", eTDTo) :
                new ObjectParameter("ETDTo", typeof(System.DateTime));
    
            var eTAFromParameter = eTAFrom.HasValue ?
                new ObjectParameter("ETAFrom", eTAFrom) :
                new ObjectParameter("ETAFrom", typeof(System.DateTime));
    
            var eTAToParameter = eTATo.HasValue ?
                new ObjectParameter("ETATo", eTATo) :
                new ObjectParameter("ETATo", typeof(System.DateTime));
    
            var loadingPlanUDParameter = loadingPlanUD != null ?
                new ObjectParameter("LoadingPlanUD", loadingPlanUD) :
                new ObjectParameter("LoadingPlanUD", typeof(string));
    
            var containerTypeIDParameter = containerTypeID.HasValue ?
                new ObjectParameter("ContainerTypeID", containerTypeID) :
                new ObjectParameter("ContainerTypeID", typeof(int));
    
            var containerNoParameter = containerNo != null ?
                new ObjectParameter("ContainerNo", containerNo) :
                new ObjectParameter("ContainerNo", typeof(string));
    
            var sealNoParameter = sealNo != null ?
                new ObjectParameter("SealNo", sealNo) :
                new ObjectParameter("SealNo", typeof(string));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var clientOrderNumberParameter = clientOrderNumber != null ?
                new ObjectParameter("ClientOrderNumber", clientOrderNumber) :
                new ObjectParameter("ClientOrderNumber", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CP_LoadingPlanMng_LoadingPlanSearchResult_View>("CP_LoadingPlanMng_function_SearchLoadingPlan", mergeOption, clientIDParameter, bLNoParameter, eTDFromParameter, eTDToParameter, eTAFromParameter, eTAToParameter, loadingPlanUDParameter, containerTypeIDParameter, containerNoParameter, sealNoParameter, proformaInvoiceNoParameter, clientOrderNumberParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<CP_LoadingPlanMng_function_GetOrderInfo_Result> CP_LoadingPlanMng_function_GetOrderInfo(string iDs)
        {
            var iDsParameter = iDs != null ?
                new ObjectParameter("IDs", iDs) :
                new ObjectParameter("IDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CP_LoadingPlanMng_function_GetOrderInfo_Result>("CP_LoadingPlanMng_function_GetOrderInfo", iDsParameter);
        }
    }
}
