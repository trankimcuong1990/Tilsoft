//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.ClientCityMng
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ClientCityMngEntities : DbContext
    {
        public ClientCityMngEntities()
            : base("name=ClientCityMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ClientCity> ClientCities { get; set; }
        public virtual DbSet<ClientCityMng_ClientCity_View> ClientCityMng_ClientCity_View { get; set; }
        public virtual DbSet<ClientCityMng_ClientCitySearchResult_View> ClientCityMng_ClientCitySearchResult_View { get; set; }
    
        public virtual ObjectResult<ClientCityMng_ClientCitySearchResult_View> ClientCityMng_function_SearchCity(string clientCityUD, string clientCityNM, Nullable<int> clientCountryID, string sortedBy, string sortedDirection)
        {
            var clientCityUDParameter = clientCityUD != null ?
                new ObjectParameter("ClientCityUD", clientCityUD) :
                new ObjectParameter("ClientCityUD", typeof(string));
    
            var clientCityNMParameter = clientCityNM != null ?
                new ObjectParameter("ClientCityNM", clientCityNM) :
                new ObjectParameter("ClientCityNM", typeof(string));
    
            var clientCountryIDParameter = clientCountryID.HasValue ?
                new ObjectParameter("ClientCountryID", clientCountryID) :
                new ObjectParameter("ClientCountryID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientCityMng_ClientCitySearchResult_View>("ClientCityMng_function_SearchCity", clientCityUDParameter, clientCityNMParameter, clientCountryIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ClientCityMng_ClientCitySearchResult_View> ClientCityMng_function_SearchCity(string clientCityUD, string clientCityNM, Nullable<int> clientCountryID, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var clientCityUDParameter = clientCityUD != null ?
                new ObjectParameter("ClientCityUD", clientCityUD) :
                new ObjectParameter("ClientCityUD", typeof(string));
    
            var clientCityNMParameter = clientCityNM != null ?
                new ObjectParameter("ClientCityNM", clientCityNM) :
                new ObjectParameter("ClientCityNM", typeof(string));
    
            var clientCountryIDParameter = clientCountryID.HasValue ?
                new ObjectParameter("ClientCountryID", clientCountryID) :
                new ObjectParameter("ClientCountryID", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientCityMng_ClientCitySearchResult_View>("ClientCityMng_function_SearchCity", mergeOption, clientCityUDParameter, clientCityNMParameter, clientCountryIDParameter, sortedByParameter, sortedDirectionParameter);
        }
    }
}
