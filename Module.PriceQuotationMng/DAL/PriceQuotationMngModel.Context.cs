//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.PriceQuotationMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PriceQuotationMngEntities : DbContext
    {
        public PriceQuotationMngEntities()
            : base("name=PriceQuotationMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Quotation> Quotation { get; set; }
        public virtual DbSet<QuotationDetail> QuotationDetail { get; set; }
        public virtual DbSet<QuotationOffer> QuotationOffer { get; set; }
        public virtual DbSet<QuotationOfferDetail> QuotationOfferDetail { get; set; }
        public virtual DbSet<PriceQuotationMng_PriceQuotationSearchResult_View> PriceQuotationMng_PriceQuotationSearchResult_View { get; set; }
        public virtual DbSet<PriceQuotationMng_HistoryPriceQuotation_View> PriceQuotationMng_HistoryPriceQuotation_View { get; set; }
        public virtual DbSet<SupportMng_InternalCompany2_View> SupportMng_InternalCompany2_View { get; set; }
        public virtual DbSet<PriceDifference> PriceDifference { get; set; }
    
        public virtual ObjectResult<PriceQuotationMng_PriceQuotationSearchResult_View> PriceQuotationMng_function_PriceQuotationSearchResult(string clientUD, string factoryUD, string articleCode, string description, string priceDifferenceCode, Nullable<int> quotationStatusID, string season, string orderBy, string orderDirection, Nullable<int> userID, Nullable<int> companyID, string orderNo)
        {
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var priceDifferenceCodeParameter = priceDifferenceCode != null ?
                new ObjectParameter("PriceDifferenceCode", priceDifferenceCode) :
                new ObjectParameter("PriceDifferenceCode", typeof(string));
    
            var quotationStatusIDParameter = quotationStatusID.HasValue ?
                new ObjectParameter("QuotationStatusID", quotationStatusID) :
                new ObjectParameter("QuotationStatusID", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var orderDirectionParameter = orderDirection != null ?
                new ObjectParameter("OrderDirection", orderDirection) :
                new ObjectParameter("OrderDirection", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PriceQuotationMng_PriceQuotationSearchResult_View>("PriceQuotationMng_function_PriceQuotationSearchResult", clientUDParameter, factoryUDParameter, articleCodeParameter, descriptionParameter, priceDifferenceCodeParameter, quotationStatusIDParameter, seasonParameter, orderByParameter, orderDirectionParameter, userIDParameter, companyIDParameter, orderNoParameter);
        }
    
        public virtual ObjectResult<PriceQuotationMng_PriceQuotationSearchResult_View> PriceQuotationMng_function_PriceQuotationSearchResult(string clientUD, string factoryUD, string articleCode, string description, string priceDifferenceCode, Nullable<int> quotationStatusID, string season, string orderBy, string orderDirection, Nullable<int> userID, Nullable<int> companyID, string orderNo, MergeOption mergeOption)
        {
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var priceDifferenceCodeParameter = priceDifferenceCode != null ?
                new ObjectParameter("PriceDifferenceCode", priceDifferenceCode) :
                new ObjectParameter("PriceDifferenceCode", typeof(string));
    
            var quotationStatusIDParameter = quotationStatusID.HasValue ?
                new ObjectParameter("QuotationStatusID", quotationStatusID) :
                new ObjectParameter("QuotationStatusID", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var orderDirectionParameter = orderDirection != null ?
                new ObjectParameter("OrderDirection", orderDirection) :
                new ObjectParameter("OrderDirection", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PriceQuotationMng_PriceQuotationSearchResult_View>("PriceQuotationMng_function_PriceQuotationSearchResult", mergeOption, clientUDParameter, factoryUDParameter, articleCodeParameter, descriptionParameter, priceDifferenceCodeParameter, quotationStatusIDParameter, seasonParameter, orderByParameter, orderDirectionParameter, userIDParameter, companyIDParameter, orderNoParameter);
        }
    
        public virtual int PriceQuotationMng_function_PriceDifference(string season)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PriceQuotationMng_function_PriceDifference", seasonParameter);
        }
    
        public virtual ObjectResult<PriceQuotationMng_function_GetPriceSeasonWithFactoryOrderDetail_Result> PriceQuotationMng_function_GetPriceSeasonWithFactoryOrderDetail(string season, Nullable<int> modelID, Nullable<int> frameMaterialID, Nullable<int> materialID, Nullable<int> materialTypeID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var frameMaterialIDParameter = frameMaterialID.HasValue ?
                new ObjectParameter("FrameMaterialID", frameMaterialID) :
                new ObjectParameter("FrameMaterialID", typeof(int));
    
            var materialIDParameter = materialID.HasValue ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(int));
    
            var materialTypeIDParameter = materialTypeID.HasValue ?
                new ObjectParameter("MaterialTypeID", materialTypeID) :
                new ObjectParameter("MaterialTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PriceQuotationMng_function_GetPriceSeasonWithFactoryOrderDetail_Result>("PriceQuotationMng_function_GetPriceSeasonWithFactoryOrderDetail", seasonParameter, modelIDParameter, frameMaterialIDParameter, materialIDParameter, materialTypeIDParameter);
        }
    
        public virtual ObjectResult<PriceQuotationMng_function_GetPriceSeasonWithFactoryOrderSparepartDetail_Result> PriceQuotationMng_function_GetPriceSeasonWithFactoryOrderSparepartDetail(string season, Nullable<int> modelID, Nullable<int> frameMaterialID, Nullable<int> materialID, Nullable<int> materialTypeID)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            var frameMaterialIDParameter = frameMaterialID.HasValue ?
                new ObjectParameter("FrameMaterialID", frameMaterialID) :
                new ObjectParameter("FrameMaterialID", typeof(int));
    
            var materialIDParameter = materialID.HasValue ?
                new ObjectParameter("MaterialID", materialID) :
                new ObjectParameter("MaterialID", typeof(int));
    
            var materialTypeIDParameter = materialTypeID.HasValue ?
                new ObjectParameter("MaterialTypeID", materialTypeID) :
                new ObjectParameter("MaterialTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PriceQuotationMng_function_GetPriceSeasonWithFactoryOrderSparepartDetail_Result>("PriceQuotationMng_function_GetPriceSeasonWithFactoryOrderSparepartDetail", seasonParameter, modelIDParameter, frameMaterialIDParameter, materialIDParameter, materialTypeIDParameter);
        }
    
        public virtual int PriceQuotationMng_function_ApplyAllDiffCode(string quotationDetailIDs, Nullable<int> priceDifferenceID, ObjectParameter returnData)
        {
            var quotationDetailIDsParameter = quotationDetailIDs != null ?
                new ObjectParameter("QuotationDetailIDs", quotationDetailIDs) :
                new ObjectParameter("QuotationDetailIDs", typeof(string));
    
            var priceDifferenceIDParameter = priceDifferenceID.HasValue ?
                new ObjectParameter("PriceDifferenceID", priceDifferenceID) :
                new ObjectParameter("PriceDifferenceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PriceQuotationMng_function_ApplyAllDiffCode", quotationDetailIDsParameter, priceDifferenceIDParameter, returnData);
        }
    
        public virtual ObjectResult<PriceQuotationMng_PriceQuotationSearchResult_View> PriceQuotationMng_function_UpdatePricePrevious(string quotationDetailIDs, string season)
        {
            var quotationDetailIDsParameter = quotationDetailIDs != null ?
                new ObjectParameter("QuotationDetailIDs", quotationDetailIDs) :
                new ObjectParameter("QuotationDetailIDs", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PriceQuotationMng_PriceQuotationSearchResult_View>("PriceQuotationMng_function_UpdatePricePrevious", quotationDetailIDsParameter, seasonParameter);
        }
    
        public virtual ObjectResult<PriceQuotationMng_PriceQuotationSearchResult_View> PriceQuotationMng_function_UpdatePricePrevious(string quotationDetailIDs, string season, MergeOption mergeOption)
        {
            var quotationDetailIDsParameter = quotationDetailIDs != null ?
                new ObjectParameter("QuotationDetailIDs", quotationDetailIDs) :
                new ObjectParameter("QuotationDetailIDs", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PriceQuotationMng_PriceQuotationSearchResult_View>("PriceQuotationMng_function_UpdatePricePrevious", mergeOption, quotationDetailIDsParameter, seasonParameter);
        }
    
        public virtual int PriceQuotationMng_AddAllItemToQuotation(string season)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PriceQuotationMng_AddAllItemToQuotation", seasonParameter);
        }
    
        public virtual ObjectResult<PriceQuotationMng_PriceQuotationSearchResult_View> PriceQuotationMng_ApprovePrice(Nullable<int> paramQuotaionOfferDirectID, Nullable<int> paramQuotationID, Nullable<int> paramQuotationDetailID, Nullable<int> paramUserID)
        {
            var paramQuotaionOfferDirectIDParameter = paramQuotaionOfferDirectID.HasValue ?
                new ObjectParameter("ParamQuotaionOfferDirectID", paramQuotaionOfferDirectID) :
                new ObjectParameter("ParamQuotaionOfferDirectID", typeof(int));
    
            var paramQuotationIDParameter = paramQuotationID.HasValue ?
                new ObjectParameter("ParamQuotationID", paramQuotationID) :
                new ObjectParameter("ParamQuotationID", typeof(int));
    
            var paramQuotationDetailIDParameter = paramQuotationDetailID.HasValue ?
                new ObjectParameter("ParamQuotationDetailID", paramQuotationDetailID) :
                new ObjectParameter("ParamQuotationDetailID", typeof(int));
    
            var paramUserIDParameter = paramUserID.HasValue ?
                new ObjectParameter("ParamUserID", paramUserID) :
                new ObjectParameter("ParamUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PriceQuotationMng_PriceQuotationSearchResult_View>("PriceQuotationMng_ApprovePrice", paramQuotaionOfferDirectIDParameter, paramQuotationIDParameter, paramQuotationDetailIDParameter, paramUserIDParameter);
        }
    
        public virtual ObjectResult<PriceQuotationMng_PriceQuotationSearchResult_View> PriceQuotationMng_ApprovePrice(Nullable<int> paramQuotaionOfferDirectID, Nullable<int> paramQuotationID, Nullable<int> paramQuotationDetailID, Nullable<int> paramUserID, MergeOption mergeOption)
        {
            var paramQuotaionOfferDirectIDParameter = paramQuotaionOfferDirectID.HasValue ?
                new ObjectParameter("ParamQuotaionOfferDirectID", paramQuotaionOfferDirectID) :
                new ObjectParameter("ParamQuotaionOfferDirectID", typeof(int));
    
            var paramQuotationIDParameter = paramQuotationID.HasValue ?
                new ObjectParameter("ParamQuotationID", paramQuotationID) :
                new ObjectParameter("ParamQuotationID", typeof(int));
    
            var paramQuotationDetailIDParameter = paramQuotationDetailID.HasValue ?
                new ObjectParameter("ParamQuotationDetailID", paramQuotationDetailID) :
                new ObjectParameter("ParamQuotationDetailID", typeof(int));
    
            var paramUserIDParameter = paramUserID.HasValue ?
                new ObjectParameter("ParamUserID", paramUserID) :
                new ObjectParameter("ParamUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PriceQuotationMng_PriceQuotationSearchResult_View>("PriceQuotationMng_ApprovePrice", mergeOption, paramQuotaionOfferDirectIDParameter, paramQuotationIDParameter, paramQuotationDetailIDParameter, paramUserIDParameter);
        }
    }
}
