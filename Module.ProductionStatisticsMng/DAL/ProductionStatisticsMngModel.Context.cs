//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.ProductionStatisticsMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProductionStatisticsMngEntities : DbContext
    {
        public ProductionStatisticsMngEntities()
            : base("name=ProductionStatisticsMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ProductionStatistics> ProductionStatistics { get; set; }
        public virtual DbSet<ProductionStatisticsDetail> ProductionStatisticsDetail { get; set; }
        public virtual DbSet<ProductionStatisticsMng_ProductionStatistics_View> ProductionStatisticsMng_ProductionStatistics_View { get; set; }
        public virtual DbSet<ProductionStatisticsMng_ProductionStatisticsDetail_View> ProductionStatisticsMng_ProductionStatisticsDetail_View { get; set; }
        public virtual DbSet<ProductionStatisticsMng_ProductionStatisticsSearch_View> ProductionStatisticsMng_ProductionStatisticsSearch_View { get; set; }
        public virtual DbSet<WorkCenter> WorkCenter { get; set; }
        public virtual DbSet<ProductionStatisticsMng_PlanningProductionTeam_View> ProductionStatisticsMng_PlanningProductionTeam_View { get; set; }
    
        public virtual ObjectResult<ProductionStatisticsMng_ProductionStatisticsSearch_View> ProductionStatisticsMng_function_SearchProductionStatistics(string sortedBy, string sortedDirection, Nullable<int> companyID, Nullable<int> workCenterID, string producedDate)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var workCenterIDParameter = workCenterID.HasValue ?
                new ObjectParameter("WorkCenterID", workCenterID) :
                new ObjectParameter("WorkCenterID", typeof(int));
    
            var producedDateParameter = producedDate != null ?
                new ObjectParameter("ProducedDate", producedDate) :
                new ObjectParameter("ProducedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductionStatisticsMng_ProductionStatisticsSearch_View>("ProductionStatisticsMng_function_SearchProductionStatistics", sortedByParameter, sortedDirectionParameter, companyIDParameter, workCenterIDParameter, producedDateParameter);
        }
    
        public virtual ObjectResult<ProductionStatisticsMng_ProductionStatisticsSearch_View> ProductionStatisticsMng_function_SearchProductionStatistics(string sortedBy, string sortedDirection, Nullable<int> companyID, Nullable<int> workCenterID, string producedDate, MergeOption mergeOption)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var workCenterIDParameter = workCenterID.HasValue ?
                new ObjectParameter("WorkCenterID", workCenterID) :
                new ObjectParameter("WorkCenterID", typeof(int));
    
            var producedDateParameter = producedDate != null ?
                new ObjectParameter("ProducedDate", producedDate) :
                new ObjectParameter("ProducedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductionStatisticsMng_ProductionStatisticsSearch_View>("ProductionStatisticsMng_function_SearchProductionStatistics", mergeOption, sortedByParameter, sortedDirectionParameter, companyIDParameter, workCenterIDParameter, producedDateParameter);
        }
    
        public virtual ObjectResult<ProductionStatisticsMng_PlanningProductionTeam_View> ProductionStatisticsMng_function_GetPlanningProductionTeam(Nullable<int> companyID, Nullable<int> workCenterID, string producedDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var workCenterIDParameter = workCenterID.HasValue ?
                new ObjectParameter("WorkCenterID", workCenterID) :
                new ObjectParameter("WorkCenterID", typeof(int));
    
            var producedDateParameter = producedDate != null ?
                new ObjectParameter("ProducedDate", producedDate) :
                new ObjectParameter("ProducedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductionStatisticsMng_PlanningProductionTeam_View>("ProductionStatisticsMng_function_GetPlanningProductionTeam", companyIDParameter, workCenterIDParameter, producedDateParameter);
        }
    
        public virtual ObjectResult<ProductionStatisticsMng_PlanningProductionTeam_View> ProductionStatisticsMng_function_GetPlanningProductionTeam(Nullable<int> companyID, Nullable<int> workCenterID, string producedDate, MergeOption mergeOption)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var workCenterIDParameter = workCenterID.HasValue ?
                new ObjectParameter("WorkCenterID", workCenterID) :
                new ObjectParameter("WorkCenterID", typeof(int));
    
            var producedDateParameter = producedDate != null ?
                new ObjectParameter("ProducedDate", producedDate) :
                new ObjectParameter("ProducedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductionStatisticsMng_PlanningProductionTeam_View>("ProductionStatisticsMng_function_GetPlanningProductionTeam", mergeOption, companyIDParameter, workCenterIDParameter, producedDateParameter);
        }
    }
}
