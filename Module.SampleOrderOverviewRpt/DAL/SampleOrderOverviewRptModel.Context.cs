//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.SampleOrderOverviewRpt.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SampleOrderOverviewRptEntities : DbContext
    {
        public SampleOrderOverviewRptEntities()
            : base("name=SampleOrderOverviewRptEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SampleOrderOverviewRpt_Factory_View> SampleOrderOverviewRpt_Factory_View { get; set; }
        public virtual DbSet<SupportMng_SampleOrder_View> SupportMng_SampleOrder_View { get; set; }
    
        public virtual ObjectResult<SupportMng_SampleOrder_View> SupportMng_function_SampleOrder(string sampleOrderUD, Nullable<int> factoryID, Nullable<int> sampleOrderStatusID, Nullable<int> sampleProductStatusID, string season, Nullable<int> clientID, Nullable<int> userID)
        {
            var sampleOrderUDParameter = sampleOrderUD != null ?
                new ObjectParameter("SampleOrderUD", sampleOrderUD) :
                new ObjectParameter("SampleOrderUD", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var sampleOrderStatusIDParameter = sampleOrderStatusID.HasValue ?
                new ObjectParameter("SampleOrderStatusID", sampleOrderStatusID) :
                new ObjectParameter("SampleOrderStatusID", typeof(int));
    
            var sampleProductStatusIDParameter = sampleProductStatusID.HasValue ?
                new ObjectParameter("SampleProductStatusID", sampleProductStatusID) :
                new ObjectParameter("SampleProductStatusID", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SupportMng_SampleOrder_View>("SupportMng_function_SampleOrder", sampleOrderUDParameter, factoryIDParameter, sampleOrderStatusIDParameter, sampleProductStatusIDParameter, seasonParameter, clientIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<SupportMng_SampleOrder_View> SupportMng_function_SampleOrder(string sampleOrderUD, Nullable<int> factoryID, Nullable<int> sampleOrderStatusID, Nullable<int> sampleProductStatusID, string season, Nullable<int> clientID, Nullable<int> userID, MergeOption mergeOption)
        {
            var sampleOrderUDParameter = sampleOrderUD != null ?
                new ObjectParameter("SampleOrderUD", sampleOrderUD) :
                new ObjectParameter("SampleOrderUD", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var sampleOrderStatusIDParameter = sampleOrderStatusID.HasValue ?
                new ObjectParameter("SampleOrderStatusID", sampleOrderStatusID) :
                new ObjectParameter("SampleOrderStatusID", typeof(int));
    
            var sampleProductStatusIDParameter = sampleProductStatusID.HasValue ?
                new ObjectParameter("SampleProductStatusID", sampleProductStatusID) :
                new ObjectParameter("SampleProductStatusID", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SupportMng_SampleOrder_View>("SupportMng_function_SampleOrder", mergeOption, sampleOrderUDParameter, factoryIDParameter, sampleOrderStatusIDParameter, sampleProductStatusIDParameter, seasonParameter, clientIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<SampleOrderOverviewRpt_Factory_View> SampleOrderOverviewRpt_function_GetFactory(Nullable<int> userId, Nullable<bool> canEdit, Nullable<bool> canRead)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var canEditParameter = canEdit.HasValue ?
                new ObjectParameter("canEdit", canEdit) :
                new ObjectParameter("canEdit", typeof(bool));
    
            var canReadParameter = canRead.HasValue ?
                new ObjectParameter("canRead", canRead) :
                new ObjectParameter("canRead", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SampleOrderOverviewRpt_Factory_View>("SampleOrderOverviewRpt_function_GetFactory", userIdParameter, canEditParameter, canReadParameter);
        }
    
        public virtual ObjectResult<SampleOrderOverviewRpt_Factory_View> SampleOrderOverviewRpt_function_GetFactory(Nullable<int> userId, Nullable<bool> canEdit, Nullable<bool> canRead, MergeOption mergeOption)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var canEditParameter = canEdit.HasValue ?
                new ObjectParameter("canEdit", canEdit) :
                new ObjectParameter("canEdit", typeof(bool));
    
            var canReadParameter = canRead.HasValue ?
                new ObjectParameter("canRead", canRead) :
                new ObjectParameter("canRead", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SampleOrderOverviewRpt_Factory_View>("SampleOrderOverviewRpt_function_GetFactory", mergeOption, userIdParameter, canEditParameter, canReadParameter);
        }
    }
}
