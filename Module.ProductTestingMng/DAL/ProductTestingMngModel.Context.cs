//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.ProductTestingMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProductTestingMngEntities : DbContext
    {
        public ProductTestingMngEntities()
            : base("name=ProductTestingMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ProductTest> ProductTest { get; set; }
        public virtual DbSet<ProductTestFile> ProductTestFile { get; set; }
        public virtual DbSet<ProductTestingMng_ProductTestFile_View> ProductTestingMng_ProductTestFile_View { get; set; }
        public virtual DbSet<ProductTestingMng_ProductTesting_SearchFilesView> ProductTestingMng_ProductTesting_SearchFilesView { get; set; }
        public virtual DbSet<ProductTestUsingTestStandard> ProductTestUsingTestStandard { get; set; }
        public virtual DbSet<ProductTestingMng_ProductTesting_View> ProductTestingMng_ProductTesting_View { get; set; }
        public virtual DbSet<ProductTestingMng_ProductTestingStandard_View> ProductTestingMng_ProductTestingStandard_View { get; set; }
        public virtual DbSet<SupportMng_ProductTestStandard_View> SupportMng_ProductTestStandard_View { get; set; }
        public virtual DbSet<ProductTestingMng_ProductTesting_SearchView> ProductTestingMng_ProductTesting_SearchView { get; set; }
        public virtual DbSet<ProductTestingMng_ProducTestingStandard_SearchView> ProductTestingMng_ProducTestingStandard_SearchView { get; set; }
    
        public virtual ObjectResult<ProductTestingMng_ProductTesting_SearchView> ProductTestingMng_Function_SearchResult(string productTestUD, string modelUD, string modelNM, string clientUD, string friendlyName, string testStandardNM, Nullable<System.DateTime> testDate, string sortedBy, string sortedDirection)
        {
            var productTestUDParameter = productTestUD != null ?
                new ObjectParameter("ProductTestUD", productTestUD) :
                new ObjectParameter("ProductTestUD", typeof(string));
    
            var modelUDParameter = modelUD != null ?
                new ObjectParameter("ModelUD", modelUD) :
                new ObjectParameter("ModelUD", typeof(string));
    
            var modelNMParameter = modelNM != null ?
                new ObjectParameter("ModelNM", modelNM) :
                new ObjectParameter("ModelNM", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var friendlyNameParameter = friendlyName != null ?
                new ObjectParameter("FriendlyName", friendlyName) :
                new ObjectParameter("FriendlyName", typeof(string));
    
            var testStandardNMParameter = testStandardNM != null ?
                new ObjectParameter("TestStandardNM", testStandardNM) :
                new ObjectParameter("TestStandardNM", typeof(string));
    
            var testDateParameter = testDate.HasValue ?
                new ObjectParameter("TestDate", testDate) :
                new ObjectParameter("TestDate", typeof(System.DateTime));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductTestingMng_ProductTesting_SearchView>("ProductTestingMng_Function_SearchResult", productTestUDParameter, modelUDParameter, modelNMParameter, clientUDParameter, friendlyNameParameter, testStandardNMParameter, testDateParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ProductTestingMng_ProductTesting_SearchView> ProductTestingMng_Function_SearchResult(string productTestUD, string modelUD, string modelNM, string clientUD, string friendlyName, string testStandardNM, Nullable<System.DateTime> testDate, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var productTestUDParameter = productTestUD != null ?
                new ObjectParameter("ProductTestUD", productTestUD) :
                new ObjectParameter("ProductTestUD", typeof(string));
    
            var modelUDParameter = modelUD != null ?
                new ObjectParameter("ModelUD", modelUD) :
                new ObjectParameter("ModelUD", typeof(string));
    
            var modelNMParameter = modelNM != null ?
                new ObjectParameter("ModelNM", modelNM) :
                new ObjectParameter("ModelNM", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var friendlyNameParameter = friendlyName != null ?
                new ObjectParameter("FriendlyName", friendlyName) :
                new ObjectParameter("FriendlyName", typeof(string));
    
            var testStandardNMParameter = testStandardNM != null ?
                new ObjectParameter("TestStandardNM", testStandardNM) :
                new ObjectParameter("TestStandardNM", typeof(string));
    
            var testDateParameter = testDate.HasValue ?
                new ObjectParameter("TestDate", testDate) :
                new ObjectParameter("TestDate", typeof(System.DateTime));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductTestingMng_ProductTesting_SearchView>("ProductTestingMng_Function_SearchResult", mergeOption, productTestUDParameter, modelUDParameter, modelNMParameter, clientUDParameter, friendlyNameParameter, testStandardNMParameter, testDateParameter, sortedByParameter, sortedDirectionParameter);
        }
    }
}
