//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.PriceListFile.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PriceListFileEntities : DbContext
    {
        public PriceListFileEntities()
            : base("name=PriceListFileEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PriceListFile> PriceListFile { get; set; }
        public virtual DbSet<PriceListFile_PriceListFile_View> PriceListFile_PriceListFile_View { get; set; }
        public virtual DbSet<PriceListFile_PriceListFileSearch_View> PriceListFile_PriceListFileSearch_View { get; set; }
    
        public virtual ObjectResult<PriceListFile_PriceListFileSearch_View> PriceListFile_function_SearchPriceListFile(string season, string fileName, string comment, string sortedBy, string sortedDirection)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PriceListFile_PriceListFileSearch_View>("PriceListFile_function_SearchPriceListFile", seasonParameter, fileNameParameter, commentParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<PriceListFile_PriceListFileSearch_View> PriceListFile_function_SearchPriceListFile(string season, string fileName, string comment, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PriceListFile_PriceListFileSearch_View>("PriceListFile_function_SearchPriceListFile", mergeOption, seasonParameter, fileNameParameter, commentParameter, sortedByParameter, sortedDirectionParameter);
        }
    }
}
