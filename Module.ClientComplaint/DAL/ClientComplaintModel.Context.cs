//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.ClientComplaint.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ClientComplaintEntities : DbContext
    {
        public ClientComplaintEntities()
            : base("name=ClientComplaintEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ClientComplaint> ClientComplaints { get; set; }
        public virtual DbSet<ClientComplaintItem> ClientComplaintItems { get; set; }
        public virtual DbSet<ClientComplaintItemImage> ClientComplaintItemImages { get; set; }
        public virtual DbSet<ClientComplaint_ClientComplaint_View> ClientComplaint_ClientComplaint_View { get; set; }
        public virtual DbSet<ClientComplaint_ClientComplaintCommunication_View> ClientComplaint_ClientComplaintCommunication_View { get; set; }
        public virtual DbSet<ClientComplaint_ClientComplaintItemImage_View> ClientComplaint_ClientComplaintItemImage_View { get; set; }
        public virtual DbSet<ClientComplaint_ClientComplaintSearchResult_View> ClientComplaint_ClientComplaintSearchResult_View { get; set; }
        public virtual DbSet<ClientComplaint_SearchProformaInvoiceByClient_SearchView> ClientComplaint_SearchProformaInvoiceByClient_SearchView { get; set; }
        public virtual DbSet<ClientComplaint_ClientComplaintItem_View> ClientComplaint_ClientComplaintItem_View { get; set; }
        public virtual DbSet<ClientComplaintCommunication> ClientComplaintCommunications { get; set; }
        public virtual DbSet<ClientComplaint_SearchProformaInvoiceShipmentStatus_SearchView> ClientComplaint_SearchProformaInvoiceShipmentStatus_SearchView { get; set; }
        public virtual DbSet<ClientComplaint_FactoryOrderDetailItemsByClientSeason_SearchView> ClientComplaint_FactoryOrderDetailItemsByClientSeason_SearchView { get; set; }
        public virtual DbSet<EmailNotificationMessage> EmailNotificationMessages { get; set; }
        public virtual DbSet<SupportMng_Client_View> SupportMng_Client_View { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<AccountMng_UserProfile_View> AccountMng_UserProfile_View { get; set; }
        public virtual DbSet<ClientComplaint_ItemInfo_View> ClientComplaint_ItemInfo_View { get; set; }
        public virtual DbSet<ClientComplaintUser> ClientComplaintUsers { get; set; }
        public virtual DbSet<ClientComplaint_ClientComplaintUser_View> ClientComplaint_ClientComplaintUser_View { get; set; }
    
        public virtual ObjectResult<ClientComplaint_ClientComplaintSearchResult_View> ClientComplaint_function_SearchClientComplaint(string complaintNumber, string clientUD, string clientNM, Nullable<int> saleManagerID, string yearSeason, Nullable<int> complaintType, Nullable<int> complaintStatus, string sortedBy, string sortedDirection)
        {
            var complaintNumberParameter = complaintNumber != null ?
                new ObjectParameter("ComplaintNumber", complaintNumber) :
                new ObjectParameter("ComplaintNumber", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var clientNMParameter = clientNM != null ?
                new ObjectParameter("ClientNM", clientNM) :
                new ObjectParameter("ClientNM", typeof(string));
    
            var saleManagerIDParameter = saleManagerID.HasValue ?
                new ObjectParameter("SaleManagerID", saleManagerID) :
                new ObjectParameter("SaleManagerID", typeof(int));
    
            var yearSeasonParameter = yearSeason != null ?
                new ObjectParameter("YearSeason", yearSeason) :
                new ObjectParameter("YearSeason", typeof(string));
    
            var complaintTypeParameter = complaintType.HasValue ?
                new ObjectParameter("ComplaintType", complaintType) :
                new ObjectParameter("ComplaintType", typeof(int));
    
            var complaintStatusParameter = complaintStatus.HasValue ?
                new ObjectParameter("ComplaintStatus", complaintStatus) :
                new ObjectParameter("ComplaintStatus", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientComplaint_ClientComplaintSearchResult_View>("ClientComplaint_function_SearchClientComplaint", complaintNumberParameter, clientUDParameter, clientNMParameter, saleManagerIDParameter, yearSeasonParameter, complaintTypeParameter, complaintStatusParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ClientComplaint_ClientComplaintSearchResult_View> ClientComplaint_function_SearchClientComplaint(string complaintNumber, string clientUD, string clientNM, Nullable<int> saleManagerID, string yearSeason, Nullable<int> complaintType, Nullable<int> complaintStatus, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var complaintNumberParameter = complaintNumber != null ?
                new ObjectParameter("ComplaintNumber", complaintNumber) :
                new ObjectParameter("ComplaintNumber", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var clientNMParameter = clientNM != null ?
                new ObjectParameter("ClientNM", clientNM) :
                new ObjectParameter("ClientNM", typeof(string));
    
            var saleManagerIDParameter = saleManagerID.HasValue ?
                new ObjectParameter("SaleManagerID", saleManagerID) :
                new ObjectParameter("SaleManagerID", typeof(int));
    
            var yearSeasonParameter = yearSeason != null ?
                new ObjectParameter("YearSeason", yearSeason) :
                new ObjectParameter("YearSeason", typeof(string));
    
            var complaintTypeParameter = complaintType.HasValue ?
                new ObjectParameter("ComplaintType", complaintType) :
                new ObjectParameter("ComplaintType", typeof(int));
    
            var complaintStatusParameter = complaintStatus.HasValue ?
                new ObjectParameter("ComplaintStatus", complaintStatus) :
                new ObjectParameter("ComplaintStatus", typeof(int));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientComplaint_ClientComplaintSearchResult_View>("ClientComplaint_function_SearchClientComplaint", mergeOption, complaintNumberParameter, clientUDParameter, clientNMParameter, saleManagerIDParameter, yearSeasonParameter, complaintTypeParameter, complaintStatusParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ClientComplaint_SearchProformaInvoiceByClient_SearchView> ClientComplaint_function_SearchProformaInvoiceByClient(string sortedBy, string sortedDirection, Nullable<int> clientID, string pINumber)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var pINumberParameter = pINumber != null ?
                new ObjectParameter("PINumber", pINumber) :
                new ObjectParameter("PINumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientComplaint_SearchProformaInvoiceByClient_SearchView>("ClientComplaint_function_SearchProformaInvoiceByClient", sortedByParameter, sortedDirectionParameter, clientIDParameter, pINumberParameter);
        }
    
        public virtual ObjectResult<ClientComplaint_SearchProformaInvoiceByClient_SearchView> ClientComplaint_function_SearchProformaInvoiceByClient(string sortedBy, string sortedDirection, Nullable<int> clientID, string pINumber, MergeOption mergeOption)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var pINumberParameter = pINumber != null ?
                new ObjectParameter("PINumber", pINumber) :
                new ObjectParameter("PINumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientComplaint_SearchProformaInvoiceByClient_SearchView>("ClientComplaint_function_SearchProformaInvoiceByClient", mergeOption, sortedByParameter, sortedDirectionParameter, clientIDParameter, pINumberParameter);
        }
    
        public virtual ObjectResult<ClientComplaint_SearchProformaInvoiceShipmentStatus_SearchView> ClientComplaint_function_SearchProformaInvoiceShipmentStatus(Nullable<int> clientID, string proformaInvoice, string sortedBy, string sortedDirection)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var proformaInvoiceParameter = proformaInvoice != null ?
                new ObjectParameter("ProformaInvoice", proformaInvoice) :
                new ObjectParameter("ProformaInvoice", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientComplaint_SearchProformaInvoiceShipmentStatus_SearchView>("ClientComplaint_function_SearchProformaInvoiceShipmentStatus", clientIDParameter, proformaInvoiceParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ClientComplaint_SearchProformaInvoiceShipmentStatus_SearchView> ClientComplaint_function_SearchProformaInvoiceShipmentStatus(Nullable<int> clientID, string proformaInvoice, string sortedBy, string sortedDirection, MergeOption mergeOption)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var proformaInvoiceParameter = proformaInvoice != null ?
                new ObjectParameter("ProformaInvoice", proformaInvoice) :
                new ObjectParameter("ProformaInvoice", typeof(string));
    
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientComplaint_SearchProformaInvoiceShipmentStatus_SearchView>("ClientComplaint_function_SearchProformaInvoiceShipmentStatus", mergeOption, clientIDParameter, proformaInvoiceParameter, sortedByParameter, sortedDirectionParameter);
        }
    
        public virtual ObjectResult<ClientComplaint_FactoryOrderDetailItemsByClientSeason_SearchView> ClientComplaint_function_FactoryOrderDetailItemsByClientSeason(string sortedBy, string sortedDirection, Nullable<int> clientId, string season, string factoryOrderUD)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var factoryOrderUDParameter = factoryOrderUD != null ?
                new ObjectParameter("FactoryOrderUD", factoryOrderUD) :
                new ObjectParameter("FactoryOrderUD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientComplaint_FactoryOrderDetailItemsByClientSeason_SearchView>("ClientComplaint_function_FactoryOrderDetailItemsByClientSeason", sortedByParameter, sortedDirectionParameter, clientIdParameter, seasonParameter, factoryOrderUDParameter);
        }
    
        public virtual ObjectResult<ClientComplaint_FactoryOrderDetailItemsByClientSeason_SearchView> ClientComplaint_function_FactoryOrderDetailItemsByClientSeason(string sortedBy, string sortedDirection, Nullable<int> clientId, string season, string factoryOrderUD, MergeOption mergeOption)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            var seasonParameter = season != null ?
                new ObjectParameter("Season", season) :
                new ObjectParameter("Season", typeof(string));
    
            var factoryOrderUDParameter = factoryOrderUD != null ?
                new ObjectParameter("FactoryOrderUD", factoryOrderUD) :
                new ObjectParameter("FactoryOrderUD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientComplaint_FactoryOrderDetailItemsByClientSeason_SearchView>("ClientComplaint_function_FactoryOrderDetailItemsByClientSeason", mergeOption, sortedByParameter, sortedDirectionParameter, clientIdParameter, seasonParameter, factoryOrderUDParameter);
        }
    }
}
