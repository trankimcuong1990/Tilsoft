//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.InventoryRpt.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InventoryRptEntities : DbContext
    {
        public InventoryRptEntities()
            : base("name=InventoryRptEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<InventoryRpt_InventoryOverviewClient_View> InventoryRpt_InventoryOverviewClient_View { get; set; }
        public virtual DbSet<InventoryRpt_InventoryFinishProductDetail_View> InventoryRpt_InventoryFinishProductDetail_View { get; set; }
        public virtual DbSet<InventoryRpt_InventoryOverviewFinishProduct_View> InventoryRpt_InventoryOverviewFinishProduct_View { get; set; }
        public virtual DbSet<InventoryRpt_Inventory_View> InventoryRpt_Inventory_View { get; set; }
        public virtual DbSet<InventoryRpt_InventoryDetail_View> InventoryRpt_InventoryDetail_View { get; set; }
        public virtual DbSet<InventoryRpt_InventoryOverviewWithClient_View> InventoryRpt_InventoryOverviewWithClient_View { get; set; }
        public virtual DbSet<InventoryRpt_FactoryWarehouse_View> InventoryRpt_FactoryWarehouse_View { get; set; }
        public virtual DbSet<FrameMaterialColorMng_FrameMaterialColor_View> FrameMaterialColorMng_FrameMaterialColor_View { get; set; }
        public virtual DbSet<InventoryRpt_Inventory2_View> InventoryRpt_Inventory2_View { get; set; }
    
        public virtual int InventoryRpt_function_InventorySearchResult(Nullable<int> companyID, Nullable<int> factoryWarehouseID, Nullable<int> productionTeamID, string startDate, string endDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("factoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("factoryWarehouseID", typeof(int));
    
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("productionTeamID", productionTeamID) :
                new ObjectParameter("productionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InventoryRpt_function_InventorySearchResult", companyIDParameter, factoryWarehouseIDParameter, productionTeamIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int InventoryRpt_function_InventoryDetailSearchResult(Nullable<int> companyID, Nullable<int> factoryWarehouseID, Nullable<int> productionTeamID, string startDate, string endDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("factoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("factoryWarehouseID", typeof(int));
    
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("productionTeamID", productionTeamID) :
                new ObjectParameter("productionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InventoryRpt_function_InventoryDetailSearchResult", companyIDParameter, factoryWarehouseIDParameter, productionTeamIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_InventoryOverviewClient_View> InventoryRpt_function_InventoryOverviewClient(Nullable<int> companyID, Nullable<int> factoryWarehouseID, Nullable<int> productionTeamID, string startDate, string endDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("factoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("factoryWarehouseID", typeof(int));
    
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("productionTeamID", productionTeamID) :
                new ObjectParameter("productionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_InventoryOverviewClient_View>("InventoryRpt_function_InventoryOverviewClient", companyIDParameter, factoryWarehouseIDParameter, productionTeamIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_InventoryOverviewClient_View> InventoryRpt_function_InventoryOverviewClient(Nullable<int> companyID, Nullable<int> factoryWarehouseID, Nullable<int> productionTeamID, string startDate, string endDate, MergeOption mergeOption)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("factoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("factoryWarehouseID", typeof(int));
    
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("productionTeamID", productionTeamID) :
                new ObjectParameter("productionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_InventoryOverviewClient_View>("InventoryRpt_function_InventoryOverviewClient", mergeOption, companyIDParameter, factoryWarehouseIDParameter, productionTeamIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_InventoryOverviewFinishProduct_View> InventoryRpt_function_InventoryFinishProduct(Nullable<int> companyID, Nullable<int> factoryWarehouseID, Nullable<int> productionTeamID, string startDate, string endDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("factoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("factoryWarehouseID", typeof(int));
    
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("productionTeamID", productionTeamID) :
                new ObjectParameter("productionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_InventoryOverviewFinishProduct_View>("InventoryRpt_function_InventoryFinishProduct", companyIDParameter, factoryWarehouseIDParameter, productionTeamIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_InventoryOverviewFinishProduct_View> InventoryRpt_function_InventoryFinishProduct(Nullable<int> companyID, Nullable<int> factoryWarehouseID, Nullable<int> productionTeamID, string startDate, string endDate, MergeOption mergeOption)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("factoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("factoryWarehouseID", typeof(int));
    
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("productionTeamID", productionTeamID) :
                new ObjectParameter("productionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_InventoryOverviewFinishProduct_View>("InventoryRpt_function_InventoryFinishProduct", mergeOption, companyIDParameter, factoryWarehouseIDParameter, productionTeamIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_InventoryFinishProductDetail_View> InventoryRpt_function_InventoryFinishProductDetail(Nullable<int> companyID, Nullable<int> factoryWarehouseID, Nullable<int> productionTeamID, string startDate, string endDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("factoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("factoryWarehouseID", typeof(int));
    
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("productionTeamID", productionTeamID) :
                new ObjectParameter("productionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_InventoryFinishProductDetail_View>("InventoryRpt_function_InventoryFinishProductDetail", companyIDParameter, factoryWarehouseIDParameter, productionTeamIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_InventoryFinishProductDetail_View> InventoryRpt_function_InventoryFinishProductDetail(Nullable<int> companyID, Nullable<int> factoryWarehouseID, Nullable<int> productionTeamID, string startDate, string endDate, MergeOption mergeOption)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("factoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("factoryWarehouseID", typeof(int));
    
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("productionTeamID", productionTeamID) :
                new ObjectParameter("productionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_InventoryFinishProductDetail_View>("InventoryRpt_function_InventoryFinishProductDetail", mergeOption, companyIDParameter, factoryWarehouseIDParameter, productionTeamIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_Inventory_View> InventoryOverviewRpt_function_GetInventoryWithFactoryWarehouse(Nullable<int> factoryWarehouseID, string startDate, string endDate)
        {
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("factoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("factoryWarehouseID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_Inventory_View>("InventoryOverviewRpt_function_GetInventoryWithFactoryWarehouse", factoryWarehouseIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_Inventory_View> InventoryOverviewRpt_function_GetInventoryWithFactoryWarehouse(Nullable<int> factoryWarehouseID, string startDate, string endDate, MergeOption mergeOption)
        {
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("factoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("factoryWarehouseID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_Inventory_View>("InventoryOverviewRpt_function_GetInventoryWithFactoryWarehouse", mergeOption, factoryWarehouseIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_Inventory_View> InventoryOverviewRpt_function_GetInventoryWithProductionTeam(Nullable<int> productionTeamID, string startDate, string endDate, Nullable<int> companyID)
        {
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("productionTeamID", productionTeamID) :
                new ObjectParameter("productionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_Inventory_View>("InventoryOverviewRpt_function_GetInventoryWithProductionTeam", productionTeamIDParameter, startDateParameter, endDateParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_Inventory_View> InventoryOverviewRpt_function_GetInventoryWithProductionTeam(Nullable<int> productionTeamID, string startDate, string endDate, Nullable<int> companyID, MergeOption mergeOption)
        {
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("productionTeamID", productionTeamID) :
                new ObjectParameter("productionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_Inventory_View>("InventoryOverviewRpt_function_GetInventoryWithProductionTeam", mergeOption, productionTeamIDParameter, startDateParameter, endDateParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_InventoryDetail_View> InventoryOverviewDetailRpt_function_GetInventoryWithFactoryWarehouse(Nullable<int> factoryWarehouseID, string startDate, string endDate)
        {
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("FactoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("FactoryWarehouseID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_InventoryDetail_View>("InventoryOverviewDetailRpt_function_GetInventoryWithFactoryWarehouse", factoryWarehouseIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_InventoryDetail_View> InventoryOverviewDetailRpt_function_GetInventoryWithFactoryWarehouse(Nullable<int> factoryWarehouseID, string startDate, string endDate, MergeOption mergeOption)
        {
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("FactoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("FactoryWarehouseID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_InventoryDetail_View>("InventoryOverviewDetailRpt_function_GetInventoryWithFactoryWarehouse", mergeOption, factoryWarehouseIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_InventoryDetail_View> InventoryOverviewDetailRpt_function_GetInventoryWithProductionTeam(Nullable<int> productionTeamID, string startDate, string endDate, Nullable<int> companyID)
        {
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("ProductionTeamID", productionTeamID) :
                new ObjectParameter("ProductionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_InventoryDetail_View>("InventoryOverviewDetailRpt_function_GetInventoryWithProductionTeam", productionTeamIDParameter, startDateParameter, endDateParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_InventoryDetail_View> InventoryOverviewDetailRpt_function_GetInventoryWithProductionTeam(Nullable<int> productionTeamID, string startDate, string endDate, Nullable<int> companyID, MergeOption mergeOption)
        {
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("ProductionTeamID", productionTeamID) :
                new ObjectParameter("ProductionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_InventoryDetail_View>("InventoryOverviewDetailRpt_function_GetInventoryWithProductionTeam", mergeOption, productionTeamIDParameter, startDateParameter, endDateParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_function_InventorySearchResult2_Result> InventoryRpt_function_InventorySearchResult2(string factoryWarehouses, string startDate, string endDate)
        {
            var factoryWarehousesParameter = factoryWarehouses != null ?
                new ObjectParameter("factoryWarehouses", factoryWarehouses) :
                new ObjectParameter("factoryWarehouses", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_function_InventorySearchResult2_Result>("InventoryRpt_function_InventorySearchResult2", factoryWarehousesParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InventoryRpt_function_GetStockedQnt(Nullable<int> factoryWarehouseID, Nullable<int> productionItemID, string startDate)
        {
            var factoryWarehouseIDParameter = factoryWarehouseID.HasValue ?
                new ObjectParameter("factoryWarehouseID", factoryWarehouseID) :
                new ObjectParameter("factoryWarehouseID", typeof(int));
    
            var productionItemIDParameter = productionItemID.HasValue ?
                new ObjectParameter("productionItemID", productionItemID) :
                new ObjectParameter("productionItemID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InventoryRpt_function_GetStockedQnt", factoryWarehouseIDParameter, productionItemIDParameter, startDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_function_InventorySearchResult3_Result> InventoryRpt_function_InventorySearchResult3(Nullable<int> productionTeamID, string startDate, string endDate)
        {
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("productionTeamID", productionTeamID) :
                new ObjectParameter("productionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_function_InventorySearchResult3_Result>("InventoryRpt_function_InventorySearchResult3", productionTeamIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_function_InventorySearchResult4_Result> InventoryRpt_function_InventorySearchResult4(string factoryWarehouses, string startDate, string endDate)
        {
            var factoryWarehousesParameter = factoryWarehouses != null ?
                new ObjectParameter("factoryWarehouses", factoryWarehouses) :
                new ObjectParameter("factoryWarehouses", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_function_InventorySearchResult4_Result>("InventoryRpt_function_InventorySearchResult4", factoryWarehousesParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<InventoryRpt_function_InventorySearchResult5_Result> InventoryRpt_function_InventorySearchResult5(Nullable<int> productionTeamID, string startDate, string endDate)
        {
            var productionTeamIDParameter = productionTeamID.HasValue ?
                new ObjectParameter("productionTeamID", productionTeamID) :
                new ObjectParameter("productionTeamID", typeof(int));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InventoryRpt_function_InventorySearchResult5_Result>("InventoryRpt_function_InventorySearchResult5", productionTeamIDParameter, startDateParameter, endDateParameter);
        }
    }
}
