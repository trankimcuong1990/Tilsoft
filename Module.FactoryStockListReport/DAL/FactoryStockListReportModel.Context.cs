//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.FactoryStockListReport.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FactoryStockListReportEntities : DbContext
    {
        public FactoryStockListReportEntities()
            : base("name=FactoryStockListReportEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FactoryStockListReportMng_FactoryStockList_View> FactoryStockListReportMng_FactoryStockList_View { get; set; }
        public virtual DbSet<UserFactoryAccess> UserFactoryAccess { get; set; }
    
        public virtual ObjectResult<FactoryStockListReportMng_FactoryStockList_View> FactoryStockListReportMng_function_GetFactoryStockList(string sortedBy, string sortedDirection, string factoryUD, string clientUD, string proformaInvoiceNo, string lDS, string articleCode, string description, Nullable<int> factoryID, Nullable<int> userID)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var lDSParameter = lDS != null ?
                new ObjectParameter("LDS", lDS) :
                new ObjectParameter("LDS", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryStockListReportMng_FactoryStockList_View>("FactoryStockListReportMng_function_GetFactoryStockList", sortedByParameter, sortedDirectionParameter, factoryUDParameter, clientUDParameter, proformaInvoiceNoParameter, lDSParameter, articleCodeParameter, descriptionParameter, factoryIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<FactoryStockListReportMng_FactoryStockList_View> FactoryStockListReportMng_function_GetFactoryStockList(string sortedBy, string sortedDirection, string factoryUD, string clientUD, string proformaInvoiceNo, string lDS, string articleCode, string description, Nullable<int> factoryID, Nullable<int> userID, MergeOption mergeOption)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var factoryUDParameter = factoryUD != null ?
                new ObjectParameter("FactoryUD", factoryUD) :
                new ObjectParameter("FactoryUD", typeof(string));
    
            var clientUDParameter = clientUD != null ?
                new ObjectParameter("ClientUD", clientUD) :
                new ObjectParameter("ClientUD", typeof(string));
    
            var proformaInvoiceNoParameter = proformaInvoiceNo != null ?
                new ObjectParameter("ProformaInvoiceNo", proformaInvoiceNo) :
                new ObjectParameter("ProformaInvoiceNo", typeof(string));
    
            var lDSParameter = lDS != null ?
                new ObjectParameter("LDS", lDS) :
                new ObjectParameter("LDS", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryStockListReportMng_FactoryStockList_View>("FactoryStockListReportMng_function_GetFactoryStockList", mergeOption, sortedByParameter, sortedDirectionParameter, factoryUDParameter, clientUDParameter, proformaInvoiceNoParameter, lDSParameter, articleCodeParameter, descriptionParameter, factoryIDParameter, userIDParameter);
        }
    }
}
