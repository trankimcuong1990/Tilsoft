//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.WarehouseTransferMng.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WarehouseTransferMngEntities : DbContext
    {
        public WarehouseTransferMngEntities()
            : base("name=WarehouseTransferMngEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<WarehouseTransfer> WarehouseTransfer { get; set; }
        public virtual DbSet<WarehouseTransferMng_WarehouseTransfer_View> WarehouseTransferMng_WarehouseTransfer_View { get; set; }
        public virtual DbSet<WarehouseTransferMng_WarehouseTransferProduct_View> WarehouseTransferMng_WarehouseTransferProduct_View { get; set; }
        public virtual DbSet<DeliveryNote> DeliveryNote { get; set; }
        public virtual DbSet<ReceivingNote> ReceivingNote { get; set; }
        public virtual DbSet<WarehouseTransferDetail> WarehouseTransferDetail { get; set; }
        public virtual DbSet<WarehouseTransferMng_WarehouseTransferDetail_View> WarehouseTransferMng_WarehouseTransferDetail_View { get; set; }
        public virtual DbSet<WarehouseTransferMng_Branch_View> WarehouseTransferMng_Branch_View { get; set; }
        public virtual DbSet<WarehouseTransferMng_FactoryWarehouse_View> WarehouseTransferMng_FactoryWarehouse_View { get; set; }
        public virtual DbSet<WarehouseTransferMng_ProductionItem_View> WarehouseTransferMng_ProductionItem_View { get; set; }
        public virtual DbSet<WarehouseTransferMng_ProductionItemUnit_View> WarehouseTransferMng_ProductionItemUnit_View { get; set; }
        public virtual DbSet<WarehouseTransferMng_GetStockQnt_View> WarehouseTransferMng_GetStockQnt_View { get; set; }
        public virtual DbSet<WarehouseTransferMng_WarehouseTransferSearch_View> WarehouseTransferMng_WarehouseTransferSearch_View { get; set; }
        public virtual DbSet<WarehouseTransferMng_FactoryWarehouseFromAndToNM_View> WarehouseTransferMng_FactoryWarehouseFromAndToNM_View { get; set; }
        public virtual DbSet<DeliveryNoteDetail> DeliveryNoteDetail { get; set; }
        public virtual DbSet<ReceivingNoteDetail> ReceivingNoteDetail { get; set; }
    
        public virtual int DeliveryNoteMng_function_GenerateDeliveryNoteUD(Nullable<int> deliveryNoteID, Nullable<int> companyID, Nullable<int> deliveryYear, Nullable<int> deliveryMonth)
        {
            var deliveryNoteIDParameter = deliveryNoteID.HasValue ?
                new ObjectParameter("DeliveryNoteID", deliveryNoteID) :
                new ObjectParameter("DeliveryNoteID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var deliveryYearParameter = deliveryYear.HasValue ?
                new ObjectParameter("DeliveryYear", deliveryYear) :
                new ObjectParameter("DeliveryYear", typeof(int));
    
            var deliveryMonthParameter = deliveryMonth.HasValue ?
                new ObjectParameter("DeliveryMonth", deliveryMonth) :
                new ObjectParameter("DeliveryMonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeliveryNoteMng_function_GenerateDeliveryNoteUD", deliveryNoteIDParameter, companyIDParameter, deliveryYearParameter, deliveryMonthParameter);
        }
    
        public virtual int ReceivingNoteMng_function_GenerateReceivingNoteUD(Nullable<int> receivingNoteID, Nullable<int> companyID, Nullable<int> receivingYear, Nullable<int> receivingMonth)
        {
            var receivingNoteIDParameter = receivingNoteID.HasValue ?
                new ObjectParameter("ReceivingNoteID", receivingNoteID) :
                new ObjectParameter("ReceivingNoteID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var receivingYearParameter = receivingYear.HasValue ?
                new ObjectParameter("ReceivingYear", receivingYear) :
                new ObjectParameter("ReceivingYear", typeof(int));
    
            var receivingMonthParameter = receivingMonth.HasValue ?
                new ObjectParameter("ReceivingMonth", receivingMonth) :
                new ObjectParameter("ReceivingMonth", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReceivingNoteMng_function_GenerateReceivingNoteUD", receivingNoteIDParameter, companyIDParameter, receivingYearParameter, receivingMonthParameter);
        }
    
        public virtual int WarehouseTransferMng_function_GenerateReceiptCode(Nullable<int> warehouseTransferID, Nullable<int> companyID, Nullable<int> year, Nullable<int> month)
        {
            var warehouseTransferIDParameter = warehouseTransferID.HasValue ?
                new ObjectParameter("WarehouseTransferID", warehouseTransferID) :
                new ObjectParameter("WarehouseTransferID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WarehouseTransferMng_function_GenerateReceiptCode", warehouseTransferIDParameter, companyIDParameter, yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<WarehouseTransferMng_WarehouseTransferSearch_View> WarehouseTransferMngMng_function_SearchWarehouseTransfer(string sortedBy, string sortedDirection, string receiptNo, string deliveryNoteUD, string receivingNoteUD, string receiptDate, Nullable<int> fromFactoryWarehouseID, Nullable<int> toFactoryWarehouseID, string warehouseTransferType)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var deliveryNoteUDParameter = deliveryNoteUD != null ?
                new ObjectParameter("DeliveryNoteUD", deliveryNoteUD) :
                new ObjectParameter("DeliveryNoteUD", typeof(string));
    
            var receivingNoteUDParameter = receivingNoteUD != null ?
                new ObjectParameter("ReceivingNoteUD", receivingNoteUD) :
                new ObjectParameter("ReceivingNoteUD", typeof(string));
    
            var receiptDateParameter = receiptDate != null ?
                new ObjectParameter("ReceiptDate", receiptDate) :
                new ObjectParameter("ReceiptDate", typeof(string));
    
            var fromFactoryWarehouseIDParameter = fromFactoryWarehouseID.HasValue ?
                new ObjectParameter("FromFactoryWarehouseID", fromFactoryWarehouseID) :
                new ObjectParameter("FromFactoryWarehouseID", typeof(int));
    
            var toFactoryWarehouseIDParameter = toFactoryWarehouseID.HasValue ?
                new ObjectParameter("ToFactoryWarehouseID", toFactoryWarehouseID) :
                new ObjectParameter("ToFactoryWarehouseID", typeof(int));
    
            var warehouseTransferTypeParameter = warehouseTransferType != null ?
                new ObjectParameter("WarehouseTransferType", warehouseTransferType) :
                new ObjectParameter("WarehouseTransferType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WarehouseTransferMng_WarehouseTransferSearch_View>("WarehouseTransferMngMng_function_SearchWarehouseTransfer", sortedByParameter, sortedDirectionParameter, receiptNoParameter, deliveryNoteUDParameter, receivingNoteUDParameter, receiptDateParameter, fromFactoryWarehouseIDParameter, toFactoryWarehouseIDParameter, warehouseTransferTypeParameter);
        }
    
        public virtual ObjectResult<WarehouseTransferMng_WarehouseTransferSearch_View> WarehouseTransferMngMng_function_SearchWarehouseTransfer(string sortedBy, string sortedDirection, string receiptNo, string deliveryNoteUD, string receivingNoteUD, string receiptDate, Nullable<int> fromFactoryWarehouseID, Nullable<int> toFactoryWarehouseID, string warehouseTransferType, MergeOption mergeOption)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var deliveryNoteUDParameter = deliveryNoteUD != null ?
                new ObjectParameter("DeliveryNoteUD", deliveryNoteUD) :
                new ObjectParameter("DeliveryNoteUD", typeof(string));
    
            var receivingNoteUDParameter = receivingNoteUD != null ?
                new ObjectParameter("ReceivingNoteUD", receivingNoteUD) :
                new ObjectParameter("ReceivingNoteUD", typeof(string));
    
            var receiptDateParameter = receiptDate != null ?
                new ObjectParameter("ReceiptDate", receiptDate) :
                new ObjectParameter("ReceiptDate", typeof(string));
    
            var fromFactoryWarehouseIDParameter = fromFactoryWarehouseID.HasValue ?
                new ObjectParameter("FromFactoryWarehouseID", fromFactoryWarehouseID) :
                new ObjectParameter("FromFactoryWarehouseID", typeof(int));
    
            var toFactoryWarehouseIDParameter = toFactoryWarehouseID.HasValue ?
                new ObjectParameter("ToFactoryWarehouseID", toFactoryWarehouseID) :
                new ObjectParameter("ToFactoryWarehouseID", typeof(int));
    
            var warehouseTransferTypeParameter = warehouseTransferType != null ?
                new ObjectParameter("WarehouseTransferType", warehouseTransferType) :
                new ObjectParameter("WarehouseTransferType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WarehouseTransferMng_WarehouseTransferSearch_View>("WarehouseTransferMngMng_function_SearchWarehouseTransfer", mergeOption, sortedByParameter, sortedDirectionParameter, receiptNoParameter, deliveryNoteUDParameter, receivingNoteUDParameter, receiptDateParameter, fromFactoryWarehouseIDParameter, toFactoryWarehouseIDParameter, warehouseTransferTypeParameter);
        }
    
        public virtual ObjectResult<WarehouseTransferMng_ProductionItem_View> WarehouseTransferMng_function_ProductionItemQuickSearchResult(string searchString, Nullable<int> branchID_1, Nullable<int> branchID_2, Nullable<int> companyID)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("searchString", searchString) :
                new ObjectParameter("searchString", typeof(string));
    
            var branchID_1Parameter = branchID_1.HasValue ?
                new ObjectParameter("branchID_1", branchID_1) :
                new ObjectParameter("branchID_1", typeof(int));
    
            var branchID_2Parameter = branchID_2.HasValue ?
                new ObjectParameter("branchID_2", branchID_2) :
                new ObjectParameter("branchID_2", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WarehouseTransferMng_ProductionItem_View>("WarehouseTransferMng_function_ProductionItemQuickSearchResult", searchStringParameter, branchID_1Parameter, branchID_2Parameter, companyIDParameter);
        }
    
        public virtual ObjectResult<WarehouseTransferMng_ProductionItem_View> WarehouseTransferMng_function_ProductionItemQuickSearchResult(string searchString, Nullable<int> branchID_1, Nullable<int> branchID_2, Nullable<int> companyID, MergeOption mergeOption)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("searchString", searchString) :
                new ObjectParameter("searchString", typeof(string));
    
            var branchID_1Parameter = branchID_1.HasValue ?
                new ObjectParameter("branchID_1", branchID_1) :
                new ObjectParameter("branchID_1", typeof(int));
    
            var branchID_2Parameter = branchID_2.HasValue ?
                new ObjectParameter("branchID_2", branchID_2) :
                new ObjectParameter("branchID_2", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WarehouseTransferMng_ProductionItem_View>("WarehouseTransferMng_function_ProductionItemQuickSearchResult", mergeOption, searchStringParameter, branchID_1Parameter, branchID_2Parameter, companyIDParameter);
        }
    }
}
