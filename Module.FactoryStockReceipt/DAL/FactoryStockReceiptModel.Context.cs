//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Module.FactoryStockReceipt.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FactoryStockReceiptEntities : DbContext
    {
        public FactoryStockReceiptEntities()
            : base("name=FactoryStockReceiptEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FactoryStockReceipt> FactoryStockReceipt { get; set; }
        public virtual DbSet<FactoryStockReceiptDetail> FactoryStockReceiptDetail { get; set; }
        public virtual DbSet<FactoryStockReceiptMng_FactoryStockReceipt_SearchView> FactoryStockReceiptMng_FactoryStockReceipt_SearchView { get; set; }
        public virtual DbSet<FactoryStockReceiptMng_FactoryStockReceipt_View> FactoryStockReceiptMng_FactoryStockReceipt_View { get; set; }
        public virtual DbSet<FactoryStockReceiptMng_FactoryStockReceiptDetail_View> FactoryStockReceiptMng_FactoryStockReceiptDetail_View { get; set; }
        public virtual DbSet<FactoryStockReceiptMng_StockRemain_View> FactoryStockReceiptMng_StockRemain_View { get; set; }
    
        public virtual int FactoryStockReceiptMng_function_GenerateReceipNo(Nullable<int> factoryStockReceiptID, Nullable<int> receiptTypeID)
        {
            var factoryStockReceiptIDParameter = factoryStockReceiptID.HasValue ?
                new ObjectParameter("FactoryStockReceiptID", factoryStockReceiptID) :
                new ObjectParameter("FactoryStockReceiptID", typeof(int));
    
            var receiptTypeIDParameter = receiptTypeID.HasValue ?
                new ObjectParameter("ReceiptTypeID", receiptTypeID) :
                new ObjectParameter("ReceiptTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FactoryStockReceiptMng_function_GenerateReceipNo", factoryStockReceiptIDParameter, receiptTypeIDParameter);
        }
    
        public virtual ObjectResult<FactoryStockReceiptMng_FactoryStockReceipt_SearchView> FactoryStockReceiptMng_function_SearchFactoryStockReceipt(string sortedBy, string sortedDirection, string receiptNo, string articleCode, string description, Nullable<int> factoryID, Nullable<int> userID)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryStockReceiptMng_FactoryStockReceipt_SearchView>("FactoryStockReceiptMng_function_SearchFactoryStockReceipt", sortedByParameter, sortedDirectionParameter, receiptNoParameter, articleCodeParameter, descriptionParameter, factoryIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<FactoryStockReceiptMng_FactoryStockReceipt_SearchView> FactoryStockReceiptMng_function_SearchFactoryStockReceipt(string sortedBy, string sortedDirection, string receiptNo, string articleCode, string description, Nullable<int> factoryID, Nullable<int> userID, MergeOption mergeOption)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var receiptNoParameter = receiptNo != null ?
                new ObjectParameter("ReceiptNo", receiptNo) :
                new ObjectParameter("ReceiptNo", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryStockReceiptMng_FactoryStockReceipt_SearchView>("FactoryStockReceiptMng_function_SearchFactoryStockReceipt", mergeOption, sortedByParameter, sortedDirectionParameter, receiptNoParameter, articleCodeParameter, descriptionParameter, factoryIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<FactoryStockReceiptMng_StockRemain_View> FactoryStockReceiptMng_function_QuickSearchStockRemain(string sortedBy, string sortedDirection, string articleCode, string description, Nullable<int> factoryID, Nullable<int> userID)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryStockReceiptMng_StockRemain_View>("FactoryStockReceiptMng_function_QuickSearchStockRemain", sortedByParameter, sortedDirectionParameter, articleCodeParameter, descriptionParameter, factoryIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<FactoryStockReceiptMng_StockRemain_View> FactoryStockReceiptMng_function_QuickSearchStockRemain(string sortedBy, string sortedDirection, string articleCode, string description, Nullable<int> factoryID, Nullable<int> userID, MergeOption mergeOption)
        {
            var sortedByParameter = sortedBy != null ?
                new ObjectParameter("SortedBy", sortedBy) :
                new ObjectParameter("SortedBy", typeof(string));
    
            var sortedDirectionParameter = sortedDirection != null ?
                new ObjectParameter("SortedDirection", sortedDirection) :
                new ObjectParameter("SortedDirection", typeof(string));
    
            var articleCodeParameter = articleCode != null ?
                new ObjectParameter("ArticleCode", articleCode) :
                new ObjectParameter("ArticleCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var factoryIDParameter = factoryID.HasValue ?
                new ObjectParameter("FactoryID", factoryID) :
                new ObjectParameter("FactoryID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FactoryStockReceiptMng_StockRemain_View>("FactoryStockReceiptMng_function_QuickSearchStockRemain", mergeOption, sortedByParameter, sortedDirectionParameter, articleCodeParameter, descriptionParameter, factoryIDParameter, userIDParameter);
        }
    
        public virtual int FactoryStockReceiptMng_function_CreateProductionItem()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FactoryStockReceiptMng_function_CreateProductionItem");
        }
    }
}
